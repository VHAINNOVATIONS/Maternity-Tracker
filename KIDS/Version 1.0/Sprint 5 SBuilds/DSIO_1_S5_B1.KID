KIDS Distribution saved on Jan 28, 2014@11:58:23
DSIO 1.0 S5 B1
**KIDS**:DSIO 1.0^

**INSTALL NAME**
DSIO 1.0
"BLD",9687,0)
DSIO 1.0^^0^3140128^n
"BLD",9687,4,0)
^9.64PA^19641.41^5
"BLD",9687,4,19641,0)
19641
"BLD",9687,4,19641,222)
y^y^f^^^^n
"BLD",9687,4,19641.1,0)
19641.1
"BLD",9687,4,19641.1,222)
y^y^f^^^^n
"BLD",9687,4,19641.2,0)
19641.2
"BLD",9687,4,19641.2,222)
y^y^f^^^^n
"BLD",9687,4,19641.4,0)
19641.4
"BLD",9687,4,19641.4,222)
y^y^f^^n^^y^r^n
"BLD",9687,4,19641.41,0)
19641.41
"BLD",9687,4,19641.41,222)
y^y^f^^^^n
"BLD",9687,4,"B",19641,19641)

"BLD",9687,4,"B",19641.1,19641.1)

"BLD",9687,4,"B",19641.2,19641.2)

"BLD",9687,4,"B",19641.4,19641.4)

"BLD",9687,4,"B",19641.41,19641.41)

"BLD",9687,6.3)
5
"BLD",9687,"INID")
y
"BLD",9687,"KRN",0)
^9.67PA^779.2^20
"BLD",9687,"KRN",.4,0)
.4
"BLD",9687,"KRN",.401,0)
.401
"BLD",9687,"KRN",.402,0)
.402
"BLD",9687,"KRN",.403,0)
.403
"BLD",9687,"KRN",.5,0)
.5
"BLD",9687,"KRN",.84,0)
.84
"BLD",9687,"KRN",3.6,0)
3.6
"BLD",9687,"KRN",3.8,0)
3.8
"BLD",9687,"KRN",9.2,0)
9.2
"BLD",9687,"KRN",9.8,0)
9.8
"BLD",9687,"KRN",9.8,"NM",0)
^9.68A^4^4
"BLD",9687,"KRN",9.8,"NM",1,0)
DSIO1^^0^B81210013
"BLD",9687,"KRN",9.8,"NM",2,0)
DSIO2^^0^B3950125
"BLD",9687,"KRN",9.8,"NM",3,0)
DSIO3^^0^B40420926
"BLD",9687,"KRN",9.8,"NM",4,0)
DSIO4^^0^B3809246
"BLD",9687,"KRN",9.8,"NM","B","DSIO1",1)

"BLD",9687,"KRN",9.8,"NM","B","DSIO2",2)

"BLD",9687,"KRN",9.8,"NM","B","DSIO3",3)

"BLD",9687,"KRN",9.8,"NM","B","DSIO4",4)

"BLD",9687,"KRN",19,0)
19
"BLD",9687,"KRN",19,"NM",0)
^9.68A^1^1
"BLD",9687,"KRN",19,"NM",1,0)
DSIO GUI CONTEXT^^0
"BLD",9687,"KRN",19,"NM","B","DSIO GUI CONTEXT",1)

"BLD",9687,"KRN",19.1,0)
19.1
"BLD",9687,"KRN",19.1,"NM",0)
^9.68A^^
"BLD",9687,"KRN",101,0)
101
"BLD",9687,"KRN",409.61,0)
409.61
"BLD",9687,"KRN",771,0)
771
"BLD",9687,"KRN",779.2,0)
779.2
"BLD",9687,"KRN",870,0)
870
"BLD",9687,"KRN",8989.51,0)
8989.51
"BLD",9687,"KRN",8989.52,0)
8989.52
"BLD",9687,"KRN",8994,0)
8994
"BLD",9687,"KRN",8994,"NM",0)
^9.68A^11^11
"BLD",9687,"KRN",8994,"NM",1,0)
DSIO CREATE A NOTE^^0
"BLD",9687,"KRN",8994,"NM",2,0)
DSIO UPDATE A NOTE^^0
"BLD",9687,"KRN",8994,"NM",3,0)
DSIO MAKE ADDENDUM^^0
"BLD",9687,"KRN",8994,"NM",4,0)
DSIO GET RECORD TEXT^^0
"BLD",9687,"KRN",8994,"NM",5,0)
DSIO DELETE A NOTE^^0
"BLD",9687,"KRN",8994,"NM",6,0)
DSIO SIGN A NOTE^^0
"BLD",9687,"KRN",8994,"NM",7,0)
DSIO NOTES BY DFN AND TITLE^^0
"BLD",9687,"KRN",8994,"NM",8,0)
DSIO GET NOTE ELEMENT^^0
"BLD",9687,"KRN",8994,"NM",9,0)
DSIO NEXT CONTACT DATE^^0
"BLD",9687,"KRN",8994,"NM",10,0)
DSIO SAVE NON VA ENTITY^^0
"BLD",9687,"KRN",8994,"NM",11,0)
DSIO RETURN ENTITY^^0
"BLD",9687,"KRN",8994,"NM","B","DSIO CREATE A NOTE",1)

"BLD",9687,"KRN",8994,"NM","B","DSIO DELETE A NOTE",5)

"BLD",9687,"KRN",8994,"NM","B","DSIO GET NOTE ELEMENT",8)

"BLD",9687,"KRN",8994,"NM","B","DSIO GET RECORD TEXT",4)

"BLD",9687,"KRN",8994,"NM","B","DSIO MAKE ADDENDUM",3)

"BLD",9687,"KRN",8994,"NM","B","DSIO NEXT CONTACT DATE",9)

"BLD",9687,"KRN",8994,"NM","B","DSIO NOTES BY DFN AND TITLE",7)

"BLD",9687,"KRN",8994,"NM","B","DSIO RETURN ENTITY",11)

"BLD",9687,"KRN",8994,"NM","B","DSIO SAVE NON VA ENTITY",10)

"BLD",9687,"KRN",8994,"NM","B","DSIO SIGN A NOTE",6)

"BLD",9687,"KRN",8994,"NM","B","DSIO UPDATE A NOTE",2)

"BLD",9687,"KRN","B",.4,.4)

"BLD",9687,"KRN","B",.401,.401)

"BLD",9687,"KRN","B",.402,.402)

"BLD",9687,"KRN","B",.403,.403)

"BLD",9687,"KRN","B",.5,.5)

"BLD",9687,"KRN","B",.84,.84)

"BLD",9687,"KRN","B",3.6,3.6)

"BLD",9687,"KRN","B",3.8,3.8)

"BLD",9687,"KRN","B",9.2,9.2)

"BLD",9687,"KRN","B",9.8,9.8)

"BLD",9687,"KRN","B",19,19)

"BLD",9687,"KRN","B",19.1,19.1)

"BLD",9687,"KRN","B",101,101)

"BLD",9687,"KRN","B",409.61,409.61)

"BLD",9687,"KRN","B",771,771)

"BLD",9687,"KRN","B",779.2,779.2)

"BLD",9687,"KRN","B",870,870)

"BLD",9687,"KRN","B",8989.51,8989.51)

"BLD",9687,"KRN","B",8989.52,8989.52)

"BLD",9687,"KRN","B",8994,8994)

"BLD",9687,"PRE")
DSIOE
"BLD",9687,"QDEF")
^^^^NO^^^^NO^^NO
"BLD",9687,"QUES",0)
^9.62^^
"DATA",19641.4,70,0)
70
"DATA",19641.4,70,1,0)
^19641.42A^1^1
"DATA",19641.4,70,1,1,0)
NEXT CONTACT DATE
"DATA",19641.4,70,1,1,1)
N IPT S IPT(19641,DFN_",",.03)=X D FILE^DIE("E","IPT")
"FIA",19641)
DSIO PATIENT
"FIA",19641,0)
^DSIO(19641,
"FIA",19641,0,0)
19641P
"FIA",19641,0,1)
y^y^f^^^^n
"FIA",19641,0,10)

"FIA",19641,0,11)

"FIA",19641,0,"RLRO")

"FIA",19641,19641)
0
"FIA",19641.1)
DSIO NON-VA ENTITIES
"FIA",19641.1,0)
^DSIO(19641.1,
"FIA",19641.1,0,0)
19641.1
"FIA",19641.1,0,1)
y^y^f^^^^n
"FIA",19641.1,0,10)

"FIA",19641.1,0,11)

"FIA",19641.1,0,"RLRO")

"FIA",19641.1,19641.1)
0
"FIA",19641.2)
DSIO TRACKING HISTORY
"FIA",19641.2,0)
^DSIO(19641.2,
"FIA",19641.2,0,0)
19641.2P
"FIA",19641.2,0,1)
y^y^f^^^^n
"FIA",19641.2,0,10)

"FIA",19641.2,0,11)

"FIA",19641.2,0,"RLRO")

"FIA",19641.2,19641.2)
0
"FIA",19641.2,19641.24)
0
"FIA",19641.2,19641.241)
0
"FIA",19641.2,19641.242)
0
"FIA",19641.4)
DSIO TIU DISCREET CONTROL
"FIA",19641.4,0)
^DSIO(19641.4,
"FIA",19641.4,0,0)
19641.4P
"FIA",19641.4,0,1)
y^y^f^^n^^y^r^n
"FIA",19641.4,0,10)

"FIA",19641.4,0,11)

"FIA",19641.4,0,"RLRO")

"FIA",19641.4,19641.4)
0
"FIA",19641.4,19641.42)
0
"FIA",19641.41)
DSIO TIU DISCREET DATA
"FIA",19641.41,0)
^DSIO(19641.41,
"FIA",19641.41,0,0)
19641.41P
"FIA",19641.41,0,1)
y^y^f^^^^n
"FIA",19641.41,0,10)

"FIA",19641.41,0,11)

"FIA",19641.41,0,"RLRO")

"FIA",19641.41,19641.41)
0
"FIA",19641.41,19641.411)
0
"FIA",19641.41,19641.4111)
0
"IX",19641,19641,"AC",0)
19641^AC^Create a Tracking Entry when .02 changes.^MU^^F^IR^I^19641^^^^^A
"IX",19641,19641,"AC",1)
D TRAK^DSIO2(DA,X(1))
"IX",19641,19641,"AC",2)
Q
"IX",19641,19641,"AC",11.1,0)
^.114IA^1^1
"IX",19641,19641,"AC",11.1,1,0)
1^F^19641^.02^^^F
"IX",19641,19641,"AC","NOREINDEX")
1
"IX",19641.1,19641.1,"F",0)
19641.1^F^ALL FACILITIES^MU^^R^IR^I^19641.1^^^^^LS
"IX",19641.1,19641.1,"F",1)
I X(1)="F" S ^DSIO(19641.1,"F",X(2),DA)=""
"IX",19641.1,19641.1,"F",2)
I X(1)="F" K ^DSIO(19641.1,"F",X(2),DA)
"IX",19641.1,19641.1,"F",2.5)
K ^DSIO(19641.1,"F")
"IX",19641.1,19641.1,"F",11.1,0)
^.114IA^2^2
"IX",19641.1,19641.1,"F",11.1,1,0)
1^F^19641.1^.02^^^F
"IX",19641.1,19641.1,"F",11.1,1,3)

"IX",19641.1,19641.1,"F",11.1,2,0)
2^F^19641.1^.01^^1^F
"IX",19641.1,19641.1,"F",11.1,2,3)

"IX",19641.1,19641.1,"P",0)
19641.1^P^ALL PROVIDERS^MU^^R^IR^I^19641.1^^^^^LS
"IX",19641.1,19641.1,"P",1)
I X(1)="P" S ^DSIO(19641.1,"P",X(2),DA)=""
"IX",19641.1,19641.1,"P",2)
I X(1)="P" K ^DSIO(19641.1,"P",X(2),DA)
"IX",19641.1,19641.1,"P",2.5)
K ^DSIO(19641.1,"P")
"IX",19641.1,19641.1,"P",11.1,0)
^.114IA^2^2
"IX",19641.1,19641.1,"P",11.1,1,0)
1^F^19641.1^.02^^^F
"IX",19641.1,19641.1,"P",11.1,1,3)

"IX",19641.1,19641.1,"P",11.1,2,0)
2^F^19641.1^.01^^1^F
"IX",19641.1,19641.1,"P",11.1,2,3)

"IX",19641.2,19641.2,"C",0)
19641.2^C^ALL TRACKING LOGS^MU^^F^IR^W^19641.24^^^^^LS
"IX",19641.2,19641.2,"C",1)
S ^DSIO(19641.2,"C",X(1),X(2),DA(1),DA)=""
"IX",19641.2,19641.2,"C",2)
K ^DSIO(19641.2,"C",X(1),X(2),DA(1),DA)
"IX",19641.2,19641.2,"C",2.5)
K ^DSIO(19641.2,"C")
"IX",19641.2,19641.2,"C",11.1,0)
^.114IA^2^2
"IX",19641.2,19641.2,"C",11.1,1,0)
1^F^19641.24^.01^^1^B
"IX",19641.2,19641.2,"C",11.1,2,0)
2^C^^^^2
"IX",19641.2,19641.2,"C",11.1,2,1.5)
S X=""_DA_","_DA(1)_""
"IX",19641.2,19641.2,"FLAGGED",0)
19641.2^FLAGGED^ALL CURRENTLY FLAGGED PATIENTS^MU^^F^IR^W^19641.24^^^^^LS
"IX",19641.2,19641.2,"FLAGGED",1)
K ^DSIO(19641.2,"FLAGGED",X(1),X(4)) S:X(2)=2&('X(3)) ^DSIO(19641.2,"FLAGGED",X(1),X(4),X(5),DA(1),DA)=""
"IX",19641.2,19641.2,"FLAGGED",1.4)

"IX",19641.2,19641.2,"FLAGGED",2)
Q
"IX",19641.2,19641.2,"FLAGGED",2.5)
K ^DSIO(19641.2,"FLAGGED")
"IX",19641.2,19641.2,"FLAGGED",11.1,0)
^.114IA^5^5
"IX",19641.2,19641.2,"FLAGGED",11.1,1,0)
1^C^^^^1
"IX",19641.2,19641.2,"FLAGGED",11.1,1,1.5)
S X=$P(^DPT(DA(1),0),U)
"IX",19641.2,19641.2,"FLAGGED",11.1,2,0)
2^F^19641.24^.02^^^F
"IX",19641.2,19641.2,"FLAGGED",11.1,3,0)
3^C
"IX",19641.2,19641.2,"FLAGGED",11.1,3,1.5)
S X=0 I $D(^DSIO(19641.2,"TRACKING",$P(^DPT(DA(1),0),U),DA(1))) S X=1
"IX",19641.2,19641.2,"FLAGGED",11.1,4,0)
4^C^^^^2
"IX",19641.2,19641.2,"FLAGGED",11.1,4,1.5)
S X=DA(1)
"IX",19641.2,19641.2,"FLAGGED",11.1,5,0)
5^C^^^^3
"IX",19641.2,19641.2,"FLAGGED",11.1,5,1.5)
S X=""_DA_","_DA(1)_""
"IX",19641.2,19641.2,"FLAGGED","NOREINDEX")
1
"IX",19641.2,19641.2,"TRACKING",0)
19641.2^TRACKING^CURRENTLY TRACKED PATIENTS^MU^^F^IR^W^19641.24^^^^^LS
"IX",19641.2,19641.2,"TRACKING",1)
K:X(2)'=2 ^DSIO(19641.2,"TRACKING",X(1),X(3)) S:X(2)=1!(X(2)=4) ^DSIO(19641.2,"TRACKING",X(1),X(3),X(4),DA(1),DA)=""
"IX",19641.2,19641.2,"TRACKING",1.4)

"IX",19641.2,19641.2,"TRACKING",2)
Q
"IX",19641.2,19641.2,"TRACKING",2.5)
K ^DSIO(19641.2,"TRACKING")
"IX",19641.2,19641.2,"TRACKING",11.1,0)
^.114IA^7^4
"IX",19641.2,19641.2,"TRACKING",11.1,4,0)
1^C^^^^1
"IX",19641.2,19641.2,"TRACKING",11.1,4,1.5)
S X=$P(^DPT(DA(1),0),U)
"IX",19641.2,19641.2,"TRACKING",11.1,5,0)
2^F^19641.24^.02^^^F
"IX",19641.2,19641.2,"TRACKING",11.1,6,0)
3^C^^^^2
"IX",19641.2,19641.2,"TRACKING",11.1,6,1.5)
S X=DA(1)
"IX",19641.2,19641.2,"TRACKING",11.1,7,0)
4^C^^^^3
"IX",19641.2,19641.2,"TRACKING",11.1,7,1.5)
S X=""_DA_","_DA(1)_""
"IX",19641.2,19641.2,"TRACKING","NOREINDEX")
1
"IX",19641.2,19641.24,"B",0)
19641.24^B^REGULAR BUT SORT DT BACKWARDS^R^^F^IR^I^19641.24^^^^^LS
"IX",19641.2,19641.24,"B",1)
S ^DSIO(19641.2,DA(1),1,"B",X,DA)=""
"IX",19641.2,19641.24,"B",2)
K ^DSIO(19641.2,DA(1),1,"B",X,DA)
"IX",19641.2,19641.24,"B",2.5)
K ^DSIO(19641.2,DA(1),1,"B")
"IX",19641.2,19641.24,"B",11.1,0)
^.114IA^1^1
"IX",19641.2,19641.24,"B",11.1,1,0)
1^F^19641.24^.01^^1^B
"IX",19641.2,19641.24,"B",11.1,1,3)

"IX",19641.2,19641.24,"FLAG",0)
19641.24^FLAG^ALL FLAGGED TRACKING LOGS.^MU^^R^IR^I^19641.24^^^^^LS
"IX",19641.2,19641.24,"FLAG",1)
S:X(1)=2 ^DSIO(19641.2,DA(1),1,"FLAG",X(2),DA)="" K:X(1)'=2 ^DSIO(19641.2,DA(1),1,"FLAG")
"IX",19641.2,19641.24,"FLAG",1.4)
I X(1)'=""
"IX",19641.2,19641.24,"FLAG",2)
Q
"IX",19641.2,19641.24,"FLAG",2.4)

"IX",19641.2,19641.24,"FLAG",2.5)
K ^DSIO(19641.2,DA(1),1,"FLAG")
"IX",19641.2,19641.24,"FLAG",11.1,0)
^.114IA^2^2
"IX",19641.2,19641.24,"FLAG",11.1,1,0)
1^F^19641.24^.02^^^F
"IX",19641.2,19641.24,"FLAG",11.1,2,0)
2^F^19641.24^.01^^1^B
"IX",19641.41,19641.41,"DATA",0)
19641.41^DATA^ALL DATA^MU^^F^IR^W^19641.4111^^^^^LS
"IX",19641.41,19641.41,"DATA",1)
S ^DSIO(19641.41,"DATA",X(1),X(2),X(3),DA(2),DA(1),DA)=""
"IX",19641.41,19641.41,"DATA",2)
K ^DSIO(19641.41,"DATA",X(1),X(2),X(3),DA(2),DA(1),DA)
"IX",19641.41,19641.41,"DATA",2.5)
K ^DSIO(19641.41,"DATA")
"IX",19641.41,19641.41,"DATA",11.1,0)
^.114IA^3^3
"IX",19641.41,19641.41,"DATA",11.1,1,0)
1^C^^^^1
"IX",19641.41,19641.41,"DATA",11.1,1,1.5)
S X=$P(^DPT(DA(2),0),U)
"IX",19641.41,19641.41,"DATA",11.1,2,0)
2^C^^^^2
"IX",19641.41,19641.41,"DATA",11.1,2,1.5)
S X=$$PNAME^TIULC1(+$G(^TIU(8925,DA(1),0)))
"IX",19641.41,19641.41,"DATA",11.1,3,0)
3^F^19641.4111^.01^^3^F
"IX",19641.41,19641.41,"FLD",0)
19641.41^FLD^ALL FIELDS^MU^^F^IR^W^19641.4111^^^^^LS
"IX",19641.41,19641.41,"FLD",1)
S:'$D(^DSIO(19641.41,"FLD",X(1),X(2))) ^DSIO(19641.41,"FLD",X(1),X(2))=""
"IX",19641.41,19641.41,"FLD",1.4)

"IX",19641.41,19641.41,"FLD",2)
K ^DSIO(19641.41,"FLD",X(1),X(2))
"IX",19641.41,19641.41,"FLD",2.5)
K ^DSIO(19641.41,"FLD")
"IX",19641.41,19641.41,"FLD",11.1,0)
^.114IA^2^2
"IX",19641.41,19641.41,"FLD",11.1,1,0)
1^C^^^^1
"IX",19641.41,19641.41,"FLD",11.1,1,1.5)
S X=$$PNAME^TIULC1(+$G(^TIU(8925,DA(1),0)))
"IX",19641.41,19641.41,"FLD",11.1,2,0)
2^F^19641.4111^.01^^2^F
"KRN",19,14687,-1)
0^1
"KRN",19,14687,0)
DSIO GUI CONTEXT^MCC DASHBOARD RPCS^^B^^^^^^^^
"KRN",19,14687,"RPC",0)
^19.05P^23^22
"KRN",19,14687,"RPC",1,0)
DSIO CREATE TRACKING LOG
"KRN",19,14687,"RPC",2,0)
DSIO FEMALE PATIENT FIND
"KRN",19,14687,"RPC",3,0)
DSIO FEMALE PATIENT SEARCH
"KRN",19,14687,"RPC",4,0)
DSIO GET TRACKING
"KRN",19,14687,"RPC",6,0)
DSIO SELECT LIST
"KRN",19,14687,"RPC",7,0)
ORWU HASKEY
"KRN",19,14687,"RPC",8,0)
DG SENSITIVE RECORD ACCESS
"KRN",19,14687,"RPC",9,0)
DG SENSITIVE RECORD BULLETIN
"KRN",19,14687,"RPC",10,0)
TIU DOCUMENTS BY CONTEXT
"KRN",19,14687,"RPC",11,0)
ORWPT SELECT
"KRN",19,14687,"RPC",12,0)
ORWU USERINFO
"KRN",19,14687,"RPC",13,0)
DSIO NEXT CONTACT DATE
"KRN",19,14687,"RPC",14,0)
DSIO SAVE NON VA ENTITY
"KRN",19,14687,"RPC",15,0)
DSIO RETURN ENTITY
"KRN",19,14687,"RPC",16,0)
DSIO CREATE A NOTE
"KRN",19,14687,"RPC",17,0)
DSIO UPDATE A NOTE
"KRN",19,14687,"RPC",18,0)
DSIO MAKE ADDENDUM
"KRN",19,14687,"RPC",19,0)
DSIO GET RECORD TEXT
"KRN",19,14687,"RPC",20,0)
DSIO DELETE A NOTE
"KRN",19,14687,"RPC",21,0)
DSIO SIGN A NOTE
"KRN",19,14687,"RPC",22,0)
DSIO NOTES BY DFN AND TITLE
"KRN",19,14687,"RPC",23,0)
DSIO GET NOTE ELEMENT
"KRN",19,14687,"U")
MCC DASHBOARD RPCS
"KRN",8994,3950,-1)
0^9
"KRN",8994,3950,0)
DSIO NEXT CONTACT DATE^CONTACT^DSIO4^1
"KRN",8994,3950,2,0)
^8994.02A^1^1
"KRN",8994,3950,2,1,0)
DFN^1^^1^1
"KRN",8994,3950,2,1,1,0)
^^1^1^3140127^
"KRN",8994,3950,2,1,1,1,0)
PATIENT IEN
"KRN",8994,3950,2,"B","DFN",1)

"KRN",8994,3950,2,"PARAMSEQ",1,1)

"KRN",8994,3950,3,0)
^^1^1^3140127^
"KRN",8994,3950,3,1,0)
EXTERANL DATE FORMAT OR NULL
"KRN",8994,3951,-1)
0^10
"KRN",8994,3951,0)
DSIO SAVE NON VA ENTITY^SENT^DSIO4^1
"KRN",8994,3951,2,0)
^8994.02A^1^1
"KRN",8994,3951,2,1,0)
SAVE^2^^1^1
"KRN",8994,3951,2,1,1,0)
^^2^2^3140127^
"KRN",8994,3951,2,1,1,1,0)
AN ARRAY OF FIELDS AND THEIR VALUES TO SAVE AS THE NON VA PROVIDER OR 
"KRN",8994,3951,2,1,1,2,0)
FACILITY. SAVE(#)=".01^VALUE" IS REQUIRED.
"KRN",8994,3951,2,"B","SAVE",1)

"KRN",8994,3951,2,"PARAMSEQ",1,1)

"KRN",8994,3951,3,0)
^^1^1^3140127^
"KRN",8994,3951,3,1,0)
-1^ERROR MESSAGE OR 1^IEN ON SUCCESS
"KRN",8994,3952,-1)
0^11
"KRN",8994,3952,0)
DSIO RETURN ENTITY^RENT^DSIO4^4^^^^1
"KRN",8994,3952,1,0)
^^1^1^3140127^
"KRN",8994,3952,1,1,0)
ENTITY LIST BY PROVIDER, FACILITY OR BOTH.
"KRN",8994,3952,2,0)
^8994.02A^1^1
"KRN",8994,3952,2,1,0)
TYP^1^^0^1
"KRN",8994,3952,2,1,1,0)
^^2^2^3140127^
"KRN",8994,3952,2,1,1,1,0)
INDICATE P TO RETURN A LIST OF PROVIDERS OR F FOR A LIST OF FACILITIES; 
"KRN",8994,3952,2,1,1,2,0)
NO TYP RETURNS A LIST OF ALL ENTITIES.
"KRN",8994,3952,2,"B","TYP",1)

"KRN",8994,3952,2,"PARAMSEQ",1,1)

"KRN",8994,3952,3,0)
^^3^3^3140127^
"KRN",8994,3952,3,1,0)
  IEN^NAME^TYPE^INACTIVE^STREE ADDRESS 1^STREE ADDRESS 2
"KRN",8994,3952,3,2,0)
  ^STREET ADDRESS 3^CITY^STATE^ZIP CODE^PHONE NUMBER (HOME)
"KRN",8994,3952,3,3,0)
  ^PHONE NUMBER (OFFICE)^PHONE NUMBER (CELL)^FAX NUMBER
"KRN",8994,3953,-1)
0^1
"KRN",8994,3953,0)
DSIO CREATE A NOTE^CREATE^DSIO3^1
"KRN",8994,3953,2,0)
^8994.02A^4^4
"KRN",8994,3953,2,1,0)
DFN^1^^1^1
"KRN",8994,3953,2,1,1,0)
^^1^1^3140127^
"KRN",8994,3953,2,1,1,1,0)
PATIENT IEN
"KRN",8994,3953,2,2,0)
TITLE^1^^1^2
"KRN",8994,3953,2,2,1,0)
^^1^1^3140127^
"KRN",8994,3953,2,2,1,1,0)
THE PROGRESS NOTE TITLE
"KRN",8994,3953,2,3,0)
NOTE^2^^1^3
"KRN",8994,3953,2,3,1,0)
^^1^1^3140127^
"KRN",8994,3953,2,3,1,1,0)
THE PROGESS NOTE AS AN ARRAY.
"KRN",8994,3953,2,4,0)
DATA^2^^^4
"KRN",8994,3953,2,4,1,0)
^^2^2^3140127^
"KRN",8994,3953,2,4,1,1,0)
DISCREET DATA ELEMENTS TO BE SAVED AND ASSOCIATED WITH THIS NOTE. THE 
"KRN",8994,3953,2,4,1,2,0)
ARRAY MUST BE LIST(#)=FIELD^VALUE
"KRN",8994,3953,2,"B","DATA",4)

"KRN",8994,3953,2,"B","DFN",1)

"KRN",8994,3953,2,"B","NOTE",3)

"KRN",8994,3953,2,"B","TITLE",2)

"KRN",8994,3953,2,"PARAMSEQ",1,1)

"KRN",8994,3953,2,"PARAMSEQ",2,2)

"KRN",8994,3953,2,"PARAMSEQ",3,3)

"KRN",8994,3953,2,"PARAMSEQ",4,4)

"KRN",8994,3953,3,0)
^^5^5^3140127^
"KRN",8994,3953,3,1,0)
 If successful:
"KRN",8994,3953,3,2,0)
  <IEN in TIU DOCUMENT FILE>^<LAST_PAGE_RECEIVED>^<TOTAL_PAGES_EXPECTED>
"KRN",8994,3953,3,3,0)
  
"KRN",8994,3953,3,4,0)
 If unsuccessful:
"KRN",8994,3953,3,5,0)
  0^0^0^Explanatory text
"KRN",8994,3954,-1)
0^2
"KRN",8994,3954,0)
DSIO UPDATE A NOTE^SET^DSIO3^1
"KRN",8994,3954,2,0)
^8994.02A^4^4
"KRN",8994,3954,2,1,0)
IEN^1^^1^1
"KRN",8994,3954,2,1,1,0)
^^1^1^3140127^
"KRN",8994,3954,2,1,1,1,0)
PROGRESS NOTE IEN
"KRN",8994,3954,2,2,0)
NOTE^2^^1^2
"KRN",8994,3954,2,2,1,0)
^^1^1^3140127^
"KRN",8994,3954,2,2,1,1,0)
THE PROGESS NOTE AS AN ARRAY.
"KRN",8994,3954,2,3,0)
DATA^2^^^3
"KRN",8994,3954,2,3,1,0)
^8994.021^2^2^3140127^^
"KRN",8994,3954,2,3,1,1,0)
DISCREET DATA ELEMENTS TO BE SAVED AND ASSOCIATED WITH THIS NOTE. THE 
"KRN",8994,3954,2,3,1,2,0)
ARRAY MUST BE LIST(#)=FIELD^VALUE
"KRN",8994,3954,2,4,0)
BLR^2
"KRN",8994,3954,2,4,1,0)
^^1^1^3140127^
"KRN",8994,3954,2,4,1,1,0)
BOILERPLATE TEXT USED BY CREATE
"KRN",8994,3954,2,"B","BLR",4)

"KRN",8994,3954,2,"B","DATA",3)

"KRN",8994,3954,2,"B","IEN",1)

"KRN",8994,3954,2,"B","NOTE",2)

"KRN",8994,3954,2,"PARAMSEQ",1,1)

"KRN",8994,3954,2,"PARAMSEQ",2,2)

"KRN",8994,3954,2,"PARAMSEQ",3,3)

"KRN",8994,3954,3,0)
^^5^5^3140127^
"KRN",8994,3954,3,1,0)
 If successful:  
"KRN",8994,3954,3,2,0)
  <IEN in TIU DOCUMENT FILE>^<LAST_PAGE_RECEIVED>^<TOTAL_PAGES_EXPECTED>
"KRN",8994,3954,3,3,0)
   
"KRN",8994,3954,3,4,0)
 If unsuccessful:  
"KRN",8994,3954,3,5,0)
  0^0^0^Explanatory text
"KRN",8994,3955,-1)
0^3
"KRN",8994,3955,0)
DSIO MAKE ADDENDUM^ADDEN^DSIO3^1
"KRN",8994,3955,2,0)
^8994.02A^3^3
"KRN",8994,3955,2,1,0)
IEN^1^^1^1
"KRN",8994,3955,2,1,1,0)
^8994.021^1^1^3140127^^
"KRN",8994,3955,2,1,1,1,0)
PROGRESS NOTE IEN
"KRN",8994,3955,2,2,0)
NOTE^2^^1^2
"KRN",8994,3955,2,2,1,0)
^^1^1^3140127^
"KRN",8994,3955,2,2,1,1,0)
THE PROGESS NOTE AS AN ARRAY.
"KRN",8994,3955,2,3,0)
DATA^2^^^3
"KRN",8994,3955,2,3,1,0)
^^2^2^3140127^
"KRN",8994,3955,2,3,1,1,0)
DISCREET DATA ELEMENTS TO BE SAVED AND ASSOCIATED WITH THIS NOTE. THE 
"KRN",8994,3955,2,3,1,2,0)
ARRAY MUST BE LIST(#)=FIELD^VALUE
"KRN",8994,3955,2,"B","DATA",3)

"KRN",8994,3955,2,"B","IEN",1)

"KRN",8994,3955,2,"B","NOTE",2)

"KRN",8994,3955,2,"PARAMSEQ",1,1)

"KRN",8994,3955,2,"PARAMSEQ",2,2)

"KRN",8994,3955,2,"PARAMSEQ",3,3)

"KRN",8994,3955,3,0)
^^5^5^3140127^
"KRN",8994,3955,3,1,0)
 If successful:  
"KRN",8994,3955,3,2,0)
  <IEN in TIU DOCUMENT FILE>^<LAST_PAGE_RECEIVED>^<TOTAL_PAGES_EXPECTED>
"KRN",8994,3955,3,3,0)
   
"KRN",8994,3955,3,4,0)
 If unsuccessful:  
"KRN",8994,3955,3,5,0)
  0^0^0^Explanatory text 
"KRN",8994,3956,-1)
0^4
"KRN",8994,3956,0)
DSIO GET RECORD TEXT^GET^DSIO3^4^^^^1
"KRN",8994,3956,2,0)
^8994.02A^1^1
"KRN",8994,3956,2,1,0)
IEN^1^^1^1
"KRN",8994,3956,2,1,1,0)
^^1^1^3140127^
"KRN",8994,3956,2,1,1,1,0)
PROGRESS NOTE IEN
"KRN",8994,3956,2,"B","IEN",1)

"KRN",8994,3956,2,"PARAMSEQ",1,1)

"KRN",8994,3956,3,0)
^^3^3^3140127^
"KRN",8994,3956,3,1,0)
THE PROGRESS NOTE IS RETURNED AS AN ARRAY WITH AN DISCREET DATA FIELDS 
"KRN",8994,3956,3,2,0)
RETURNED AS A LIST FIELD: DATA AT THE BOTTOM OF THE NOTE AS PART OF THE 
"KRN",8994,3956,3,3,0)
SAME ARRAY.
"KRN",8994,3957,-1)
0^5
"KRN",8994,3957,0)
DSIO DELETE A NOTE^DELETE^DSIO3^1
"KRN",8994,3957,2,0)
^8994.02A^2^2
"KRN",8994,3957,2,1,0)
IEN^1^^1^1
"KRN",8994,3957,2,1,1,0)
^^1^1^3140127^
"KRN",8994,3957,2,1,1,1,0)
PROGRESS NOTE IEN
"KRN",8994,3957,2,2,0)
JUST^1^^^2
"KRN",8994,3957,2,2,1,0)
^^2^2^3140127^
"KRN",8994,3957,2,2,1,1,0)
DELETION MAY REQUIRE JUSTIFICATION; IF IT DOES IT IS REQUIRED IN ORDER TO 
"KRN",8994,3957,2,2,1,2,0)
DELETE THE NOTE.
"KRN",8994,3957,2,"B","IEN",1)

"KRN",8994,3957,2,"B","JUST",2)

"KRN",8994,3957,2,"PARAMSEQ",1,1)

"KRN",8994,3957,2,"PARAMSEQ",2,2)

"KRN",8994,3958,-1)
0^6
"KRN",8994,3958,0)
DSIO SIGN A NOTE^SIGN^DSIO3^1
"KRN",8994,3958,2,0)
^8994.02A^2^2
"KRN",8994,3958,2,1,0)
IEN^1^^1^1
"KRN",8994,3958,2,1,1,0)
^^1^1^3140127^
"KRN",8994,3958,2,1,1,1,0)
PROGRESS NOTE IEN
"KRN",8994,3958,2,2,0)
SIG^1^^1^2
"KRN",8994,3958,2,2,1,0)
^^1^1^3140127^
"KRN",8994,3958,2,2,1,1,0)
USER SIGUATURE - IT MUST BE ENCRYPTED
"KRN",8994,3958,2,"B","IEN",1)

"KRN",8994,3958,2,"B","SIG",2)

"KRN",8994,3958,2,"PARAMSEQ",1,1)

"KRN",8994,3958,2,"PARAMSEQ",2,2)

"KRN",8994,3959,-1)
0^7
"KRN",8994,3959,0)
DSIO NOTES BY DFN AND TITLE^LIST^DSIO3^2
"KRN",8994,3959,2,0)
^8994.02A^2^2
"KRN",8994,3959,2,1,0)
DFN^1^^1^1
"KRN",8994,3959,2,1,1,0)
^^1^1^3140128^
"KRN",8994,3959,2,1,1,1,0)
PATIENT IEN
"KRN",8994,3959,2,2,0)
TITLE^1^^1^2
"KRN",8994,3959,2,2,1,0)
^^1^1^3140128^
"KRN",8994,3959,2,2,1,1,0)
PROGRESS NOTE TITLE
"KRN",8994,3959,2,"B","DFN",1)

"KRN",8994,3959,2,"B","TITLE",2)

"KRN",8994,3959,2,"PARAMSEQ",1,1)

"KRN",8994,3959,2,"PARAMSEQ",2,2)

"KRN",8994,3959,3,0)
^^1^1^3140128^
"KRN",8994,3959,3,1,0)
LIST - IENS^STATUS
"KRN",8994,3960,-1)
0^8
"KRN",8994,3960,0)
DSIO GET NOTE ELEMENT^GETDATA^DSIO3^1
"KRN",8994,3960,1,0)
^^1^1^3140128^
"KRN",8994,3960,1,1,0)
GET DATA SAVED AS DISCREET ELEMENTS LINKED TO A TIU NOTE
"KRN",8994,3960,2,0)
^8994.02A^2^2
"KRN",8994,3960,2,1,0)
IEN^1^^1^1
"KRN",8994,3960,2,1,1,0)
^^1^1^3140128^
"KRN",8994,3960,2,1,1,1,0)
PROGRESS NOTE IEN
"KRN",8994,3960,2,2,0)
FLD^1^^1^2
"KRN",8994,3960,2,2,1,0)
^^1^1^3140128^
"KRN",8994,3960,2,2,1,1,0)
DISCREET DATA FIELD
"KRN",8994,3960,2,"B","FLD",2)

"KRN",8994,3960,2,"B","IEN",1)

"KRN",8994,3960,2,"PARAMSEQ",1,1)

"KRN",8994,3960,2,"PARAMSEQ",2,2)

"KRN",8994,3960,3,0)
^^1^1^3140128^
"KRN",8994,3960,3,1,0)
NULL OR THE VALUE OF THE FIELD
"MBREQ")
0
"ORD",16,8994)
8994;16;1;;;;;;;RPCDEL^XPDIA1
"ORD",16,8994,0)
REMOTE PROCEDURE
"ORD",18,19)
19;18;;;OPT^XPDTA;OPTF1^XPDIA;OPTE1^XPDIA;OPTF2^XPDIA;;OPTDEL^XPDIA
"ORD",18,19,0)
OPTION
"PRE")
DSIOE
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
5
"RTN","DSIO1")
0^1^B81210013
"RTN","DSIO1",1,0)
DSIO1 ;DSS/TFF - DSIO RPCS;06/28/2013 15:19
"RTN","DSIO1",2,0)
 ;;1.0;DSS,INC OPEN SOURCE;;28 Jan 2013;Build 5
"RTN","DSIO1",3,0)
 ;Copyright 1995-2014,Document Storage Systems Inc. All Rights Reserved
"RTN","DSIO1",4,0)
 ;
"RTN","DSIO1",5,0)
 ;
"RTN","DSIO1",6,0)
 ; Documented API and ICRs
"RTN","DSIO1",7,0)
 ; -----------------------
"RTN","DSIO1",8,0)
 ;
"RTN","DSIO1",9,0)
 Q
"RTN","DSIO1",10,0)
 ;
"RTN","DSIO1",11,0)
PATIENT1(RET,KEY) ; RPC: DSIO FEMALE PATIENT FIND
"RTN","DSIO1",12,0)
 ;
"RTN","DSIO1",13,0)
 ; X-REFERENCES:
"RTN","DSIO1",14,0)
 ; -------------
"RTN","DSIO1",15,0)
 ; SSN: SSN
"RTN","DSIO1",16,0)
 ;  BS: LAST 4
"RTN","DSIO1",17,0)
 ; BS5: FIRST LETTER OF LAST NAME + LAST 4 OF SSN
"RTN","DSIO1",18,0)
 ;   B: FULL NAME
"RTN","DSIO1",19,0)
 ;
"RTN","DSIO1",20,0)
 ; KEY: FULL SSN, FIRST LETTER OF LAST NAME + LAST 4 OF SSN
"RTN","DSIO1",21,0)
 ;
"RTN","DSIO1",22,0)
 ; RETURN FORMAT
"RTN","DSIO1",23,0)
 ; -------------
"RTN","DSIO1",24,0)
 ; DFN^LASTNAME,FIRSTNAME^SSN(LAST 4)^DATE OF BIRTH^VETERAN STATUS^
"RTN","DSIO1",25,0)
 ; LOCATION(WARD)^ROOM/BED^SERVICE CONNECTED^CURRENTLY TRACKING
"RTN","DSIO1",26,0)
 ;
"RTN","DSIO1",27,0)
 ; CURRENTLY TRACKING: 0:NO,1:YES,2:FLAG
"RTN","DSIO1",28,0)
 ;
"RTN","DSIO1",29,0)
 ; IF NOTHING IS FOUND: RET(0)="-1^Patient(s) not found."
"RTN","DSIO1",30,0)
 ;
"RTN","DSIO1",31,0)
 N FLD,SCR,IX,OUT,ERR S RET(0)="-1^Patient not found." Q:$G(KEY)=""
"RTN","DSIO1",32,0)
 S FLD="@;.01;1901;.1;.101;.301",SCR="I $P(^(0),U,2)=""F"""
"RTN","DSIO1",33,0)
 ; DFN^NAME^VETERAN (Y/N)?^WARD LOCATION^ROOM-BED^SERVICE CONNECTED?
"RTN","DSIO1",34,0)
 ;
"RTN","DSIO1",35,0)
 ; LIST BY FULL SSN
"RTN","DSIO1",36,0)
 I KEY?9N!(KEY?3N1"-"2N1"-"4N) S KEY=$TR(KEY,"-",""),IX="SSN"
"RTN","DSIO1",37,0)
 ;
"RTN","DSIO1",38,0)
 ; LIST BY FIRST LETTER OF LAST NAME + LAST 4 OF SSN
"RTN","DSIO1",39,0)
 I KEY?1A4N S IX="BS5"
"RTN","DSIO1",40,0)
 ;
"RTN","DSIO1",41,0)
 D:$D(IX) LIST^DIC(2,,FLD,"P",,,KEY,IX,SCR,,"OUT","ERR") Q:$D(ERR)
"RTN","DSIO1",42,0)
 D BUILD1
"RTN","DSIO1",43,0)
 ;
"RTN","DSIO1",44,0)
 Q
"RTN","DSIO1",45,0)
 ;
"RTN","DSIO1",46,0)
BUILD1 ; FORMAT THE RETURN ARRAY
"RTN","DSIO1",47,0)
 N I,Z,DFN,SSN S I=0,Z=$NA(OUT) F  S Z=$Q(@Z) Q:Z=""  D
"RTN","DSIO1",48,0)
 .Q:$QS(Z,2)<1
"RTN","DSIO1",49,0)
 .K DFN,SSN S DFN=$P(@Z,U)
"RTN","DSIO1",50,0)
 .S SSN=$$SSN^DPTLK1(DFN) I SSN?.N S SSN=$E(SSN,6,9)
"RTN","DSIO1",51,0)
 .S RET(I)=DFN_U_$$NAME^DSIO2($P(@Z,U,2))_U_SSN_U_$$DOB^DPTLK1(DFN,0)_U
"RTN","DSIO1",52,0)
 .S RET(I)=RET(I)_$P(@Z,U,3,99)_U_+$$GET1^DIQ(19641,DFN,.02,"I"),I=I+1
"RTN","DSIO1",53,0)
 Q
"RTN","DSIO1",54,0)
 ;
"RTN","DSIO1",55,0)
PATIENT2(RET,KEY,SORT) ; RPC: DSIO FEMALE PATIENT SEARCH
"RTN","DSIO1",56,0)
 ;
"RTN","DSIO1",57,0)
 ;  KEY: PARTIAL NAME - TO - FULL NAME
"RTN","DSIO1",58,0)
 ; SORT: PAGE#,CT
"RTN","DSIO1",59,0)
 ;
"RTN","DSIO1",60,0)
 ; FEMALE PATIENTS WITH PAGING (SEE PATIENT FOR MORE DETAILS)
"RTN","DSIO1",61,0)
 ;
"RTN","DSIO1",62,0)
 N OUT,FM,SCR,ERR,TO S KEY=$G(KEY),TO=0
"RTN","DSIO1",63,0)
 S OUT=$NA(^TMP($J,"DSIO PATALL")),FM=$NA(^TMP($J,"DSIO PATALL1"))
"RTN","DSIO1",64,0)
 S RET=$NA(^TMP($J,"DSIO PATIENT")) K @OUT,@FM,@RET
"RTN","DSIO1",65,0)
 S @RET@(0)="-1^Patient(s) not found."
"RTN","DSIO1",66,0)
 ;
"RTN","DSIO1",67,0)
 ; LIST BY LAST NAME, PARTIAL LAST NAME, OR FULL NAME
"RTN","DSIO1",68,0)
 I KEY?.A!(KEY?.A1",".A) D  Q:$D(ERR)  D BUILD2 Q
"RTN","DSIO1",69,0)
 .S SCR="S:$E($P(^DPT(Y,0),U),1,$L(KEY))=KEY @OUT@($P(^DPT(Y,0),U),Y)="""",TO=TO+1"
"RTN","DSIO1",70,0)
 .D LIST^DIC(2,,"@","P",,,"F","ASX",SCR,,FM,"ERR") K @FM
"RTN","DSIO1",71,0)
 ;
"RTN","DSIO1",72,0)
 ; ALL PATIENTS
"RTN","DSIO1",73,0)
 S SCR="S @OUT@($P(^DPT(Y,0),U),Y)="""",TO=TO+1"
"RTN","DSIO1",74,0)
 D LIST^DIC(2,,"@","P",,,"F","ASX",SCR,,FM,"ERR") K @FM Q:$D(ERR)
"RTN","DSIO1",75,0)
 D BUILD2
"RTN","DSIO1",76,0)
 ;
"RTN","DSIO1",77,0)
 Q
"RTN","DSIO1",78,0)
 ;
"RTN","DSIO1",79,0)
BUILD2 ; FORMAT THE RETURN GLOBAL
"RTN","DSIO1",80,0)
 N STRT,T,CT,I,Z,DFN,SSN,FD,R
"RTN","DSIO1",81,0)
 S (STRT,T)=0 I $G(SORT)?.N1",".N D
"RTN","DSIO1",82,0)
 .S STRT=$$FN^DSIO2($P(SORT,","),$P(SORT,",",2))
"RTN","DSIO1",83,0)
 S CT=1,Z="" F I=0:1 S Z=$O(@OUT@(Z)) Q:Z=""  D
"RTN","DSIO1",84,0)
 .Q:I<STRT
"RTN","DSIO1",85,0)
 .I $P($G(SORT),",",2)'="" I T>=$P($G(SORT),",",2) S T=T+1 Q
"RTN","DSIO1",86,0)
 .K DFN,SSN,FD,R S DFN=$O(@OUT@(Z,""))
"RTN","DSIO1",87,0)
 .S SSN=$$SSN^DPTLK1(DFN) I SSN?.N S SSN=$E(SSN,6,9)
"RTN","DSIO1",88,0)
 .F FD=.01,1901,.1,.101,.301 S R=$G(R)_$$GET1^DIQ(2,DFN,FD,,,"ERR")_U
"RTN","DSIO1",89,0)
 .S @RET@(CT)=DFN_U_$$NAME^DSIO2($P(R,U))_U_SSN_U_$$DOB^DPTLK1(DFN,0)_U
"RTN","DSIO1",90,0)
 .S @RET@(CT)=@RET@(CT)_$P(R,U,2,99)_+$$GET1^DIQ(19641,DFN,.02,"I",,"ERR")
"RTN","DSIO1",91,0)
 .S T=T+1,CT=CT+1
"RTN","DSIO1",92,0)
 I T>0 S @RET@(0)=TO
"RTN","DSIO1",93,0)
 K @OUT
"RTN","DSIO1",94,0)
 Q
"RTN","DSIO1",95,0)
 ;
"RTN","DSIO1",96,0)
TRCLIST(RET,TYP,SORT) ; RPC: DSIO GET TRACKING
"RTN","DSIO1",97,0)
 ;
"RTN","DSIO1",98,0)
 ; RETURN MATERNITY TRACKING LISTS
"RTN","DSIO1",99,0)
 ;
"RTN","DSIO1",100,0)
 ; INPUT PARAMETERS:
"RTN","DSIO1",101,0)
 ; -----------------
"RTN","DSIO1",102,0)
 ; ALL: ALL LOGS
"RTN","DSIO1",103,0)
 ;   T: ALL CURRENTLY TRACKED PATIENTS
"RTN","DSIO1",104,0)
 ;   F: ALL CURRENTLY FLAGGED PATIENTS
"RTN","DSIO1",105,0)
 ; DFN: ALL LOGS FOR A PATIENT
"RTN","DSIO1",106,0)
 ;  F#: ALL CURRENTLY FLAGGED LOGS FOR A PATIENT
"RTN","DSIO1",107,0)
 ;
"RTN","DSIO1",108,0)
 ; SORT: PAGE#,CT
"RTN","DSIO1",109,0)
 ;
"RTN","DSIO1",110,0)
 N LOG,FLD,ERR,DFN,NM S TYP=$G(TYP)
"RTN","DSIO1",111,0)
 S LOG=$NA(^TMP($J,"DSIO TLOGS")),RET=$NA(^TMP($J,"DSIO TRACK"))
"RTN","DSIO1",112,0)
 K @LOG,@RET S @RET@(0)="-1^No entries found.",FLD="@;.01I;.02IE;.04E;.03I"
"RTN","DSIO1",113,0)
 ;
"RTN","DSIO1",114,0)
 ; GET ALL LOGS
"RTN","DSIO1",115,0)
 ; L^IEN^TRACKING DT(E)^DFN^LASTNAME,FIRSTNAME^USER^ACTION^SOURCE^REASON|REASON
"RTN","DSIO1",116,0)
 ; C^IEN^COMMENT
"RTN","DSIO1",117,0)
 I TYP="ALL"!(TYP="") D  S NM=1
"RTN","DSIO1",118,0)
 .D LIST^DIC(19641.2,,,"IP",,,,"C",,,LOG,"ERR")
"RTN","DSIO1",119,0)
 ;
"RTN","DSIO1",120,0)
 ; GET ALL CURRENTLY TRACKED PATIENTS
"RTN","DSIO1",121,0)
 ; P^DFN^LASTNAME,FIRSTNAME^LAST 4^DOB^PHONE^EDD
"RTN","DSIO1",122,0)
 I TYP="T" D  S NM=4
"RTN","DSIO1",123,0)
 .D LIST^DIC(19641.2,,,"P",,,,"TRACKING",,,LOG,"ERR")
"RTN","DSIO1",124,0)
 ;
"RTN","DSIO1",125,0)
 ; GET ALL CURRENTLY FLAGGED PATIENTS
"RTN","DSIO1",126,0)
 ; P^DFN^LASTNAME,FIRSTNAME^LAST 4^DOB^PHONE^REASON
"RTN","DSIO1",127,0)
 I TYP="F" D  S NM=5
"RTN","DSIO1",128,0)
 .D LIST^DIC(19641.2,,,"P",,,,"FLAGGED",,,LOG,"ERR")
"RTN","DSIO1",129,0)
 ;
"RTN","DSIO1",130,0)
 ; GET ALL LOGS FOR A PATIENT
"RTN","DSIO1",131,0)
 ; L^IEN^TRACKING DT(E)^DFN^LASTNAME,FIRSTNAME^USER^ACTION^SOURCE^REASON|REASON
"RTN","DSIO1",132,0)
 ; C^IEN^COMMENT
"RTN","DSIO1",133,0)
 I TYP?.N D  S NM=2
"RTN","DSIO1",134,0)
 .S DFN=TYP
"RTN","DSIO1",135,0)
 .D LIST^DIC(19641.24,","_DFN_",",,"IP",,,,"B",,,LOG,"ERR")
"RTN","DSIO1",136,0)
 ;
"RTN","DSIO1",137,0)
 ; GET CURRENTLY FLAGGED ENTRIES FOR A PATIENT
"RTN","DSIO1",138,0)
 ; L^IEN^TRACKING DT(E)^DFN^LASTNAME,FIRSTNAME^USER^ACTION^SOURCE^REASON|REASON
"RTN","DSIO1",139,0)
 ; C^IEN^COMMENT
"RTN","DSIO1",140,0)
 I TYP?1"F"1.N D  S NM=3
"RTN","DSIO1",141,0)
 .S DFN=$E(TYP,2,$L(TYP))
"RTN","DSIO1",142,0)
 .D LIST^DIC(19641.24,","_DFN_",",,"IP",,,,"FLAG",,,LOG,"ERR")
"RTN","DSIO1",143,0)
 ;
"RTN","DSIO1",144,0)
 Q:$D(ERR)
"RTN","DSIO1",145,0)
 D FORMAT(NM) K @LOG
"RTN","DSIO1",146,0)
 ;
"RTN","DSIO1",147,0)
 Q
"RTN","DSIO1",148,0)
 ;
"RTN","DSIO1",149,0)
FORMAT(TYP) ; FORMAT AND PAGE THE RETURN OF TRCLIST
"RTN","DSIO1",150,0)
 ;
"RTN","DSIO1",151,0)
 ; IF RESULTS THEN THE ZERO NODE = TOTAL NUMBER OF RESULTS
"RTN","DSIO1",152,0)
 ;
"RTN","DSIO1",153,0)
 ; ALL(1), DFN(2), F#(3): 
"RTN","DSIO1",154,0)
 ;   L^IEN^TRACKING DT(E)^DFN^LASTNAME,FIRSTNAME^USER^ACTION^SOURCE^REASON|REASON
"RTN","DSIO1",155,0)
 ;   C^IEN^COMMENT
"RTN","DSIO1",156,0)
 ;
"RTN","DSIO1",157,0)
 ;   T(4): P^DFN^LASTNAME,FIRSTNAME^LAST 4^DOB^PHONE^EDD
"RTN","DSIO1",158,0)
 ;
"RTN","DSIO1",159,0)
 ;   F(5): P^DFN^LASTNAME,FIRSTNAME^LAST 4^DOB^PHONE^REASON
"RTN","DSIO1",160,0)
 ;
"RTN","DSIO1",161,0)
 N STRT,T,CT,Z,L,IENS,SSN,FD,AC,RES,FLG,R,COM,C
"RTN","DSIO1",162,0)
 S CT=1,(STRT,T)=0 I $G(SORT)?.N1",".N D
"RTN","DSIO1",163,0)
 .S STRT=$$FN^DSIO2($P(SORT,","),$P(SORT,",",2))
"RTN","DSIO1",164,0)
 S Z=STRT F  S Z=$O(@LOG@("DILIST",Z)) Q:'Z!(T=$P($G(SORT),",",2))  D
"RTN","DSIO1",165,0)
 .K L S L=@LOG@("DILIST",Z,0)
"RTN","DSIO1",166,0)
 .;
"RTN","DSIO1",167,0)
 .I TYP<4 D
"RTN","DSIO1",168,0)
 ..I TYP=1 K DFN S DFN=$P(L,U)
"RTN","DSIO1",169,0)
 ..K IENS S IENS=$P(L,U,3) S:IENS'["," IENS=IENS_","_DFN
"RTN","DSIO1",170,0)
 ..I $P(IENS,",")="" S $P(IENS,",")=$P(L,U)
"RTN","DSIO1",171,0)
 ..S @RET@(CT)="L^"_IENS_U_$$FMTE^XLFDT($P(L,U,2),5)_U_DFN_U
"RTN","DSIO1",172,0)
 ..S @RET@(CT)=@RET@(CT)_$$NAME^DSIO2($$GET1^DIQ(2,DFN,.01))_U
"RTN","DSIO1",173,0)
 ..S AC="E" F FD=.03,.02,.04 D
"RTN","DSIO1",174,0)
 ...I FD=.03 S @RET@(CT)=@RET@(CT)_$$NAME^DSIO2($$GET1^DIQ(19641.24,IENS,FD,AC))_U,AC="I" Q
"RTN","DSIO1",175,0)
 ...S @RET@(CT)=@RET@(CT)_$$TITLE^XLFSTR($$GET1^DIQ(19641.24,IENS,FD,AC))_U
"RTN","DSIO1",176,0)
 ..;INCLUDE RESONS AND COMMENTS
"RTN","DSIO1",177,0)
 ..D RES,COM
"RTN","DSIO1",178,0)
 .;
"RTN","DSIO1",179,0)
 .I TYP>3 D
"RTN","DSIO1",180,0)
 ..K DFN S DFN=$P(L,U)
"RTN","DSIO1",181,0)
 ..K IENS S IENS=$P(L,U,4) S:IENS'["," IENS=IENS_","_DFN
"RTN","DSIO1",182,0)
 ..S SSN=$$SSN^DPTLK1(DFN) I SSN?.N S SSN=$E(SSN,6,9)
"RTN","DSIO1",183,0)
 ..S @RET@(CT)="P^"_DFN_U_$$NAME^DSIO2($$GET1^DIQ(2,DFN,.01))_U
"RTN","DSIO1",184,0)
 ..S @RET@(CT)=@RET@(CT)_SSN_U_$$DOB^DPTLK1(DFN,0)_U_$$GET1^DIQ(2,DFN,.131)_U
"RTN","DSIO1",185,0)
 .I TYP=4 S @RET@(CT)=@RET@(CT)_"EDD"
"RTN","DSIO1",186,0)
 .I TYP=5 D RES
"RTN","DSIO1",187,0)
 .;
"RTN","DSIO1",188,0)
 .S T=T+1,CT=CT+1
"RTN","DSIO1",189,0)
 ;
"RTN","DSIO1",190,0)
 I T>0 S @RET@(0)=$O(@LOG@("DILIST",""),-1)
"RTN","DSIO1",191,0)
 Q
"RTN","DSIO1",192,0)
 ;
"RTN","DSIO1",193,0)
RES ; INCLUDE REASONS
"RTN","DSIO1",194,0)
 K RES D GETS^DIQ(19641.24,IENS,"1*","I","RES")
"RTN","DSIO1",195,0)
 K FLG I $D(RES) S R=$NA(RES) F  S R=$Q(@R) Q:R=""  D
"RTN","DSIO1",196,0)
 .I '$D(FLG) S $E(@RET@(CT),$L(@RET@(CT))+1)=$$TITLE^XLFSTR(@R) S FLG=1
"RTN","DSIO1",197,0)
 .E  S $E(@RET@(CT),$L(@RET@(CT))+1)="|"_$$TITLE^XLFSTR(@R)
"RTN","DSIO1",198,0)
 Q
"RTN","DSIO1",199,0)
 ;
"RTN","DSIO1",200,0)
COM ; INCLUDE COMMENTS
"RTN","DSIO1",201,0)
 K COM D GETS^DIQ(19641.24,IENS,2,,"COM")
"RTN","DSIO1",202,0)
 I $D(COM) S C=$NA(COM) F  S C=$Q(@C) Q:C=""  D
"RTN","DSIO1",203,0)
 .Q:$QL(C)<4
"RTN","DSIO1",204,0)
 .S CT=CT+1,@RET@(CT)="C^"_IENS_U_@C
"RTN","DSIO1",205,0)
 Q
"RTN","DSIO1",206,0)
 ;
"RTN","DSIO1",207,0)
REC(RET,DFN,ACT,RES,COM,SOR) ; RPC: DSIO CREATE TRACKING LOG
"RTN","DSIO1",208,0)
 ;
"RTN","DSIO1",209,0)
 ; CREATE A TRACKING LOG AND POSSIBLY CHANGE
"RTN","DSIO1",210,0)
 ; THE PATIENT'S TRACKING STATUS
"RTN","DSIO1",211,0)
 ;
"RTN","DSIO1",212,0)
 ; MCC DASHBOARD PURPOSE -  TO CHANGE THE TRACKING STATUS OF A PATIENT
"RTN","DSIO1",213,0)
 ;
"RTN","DSIO1",214,0)
 ; INPUT PARAMETER:
"RTN","DSIO1",215,0)
 ;  DFN : PATIENT NUMBER
"RTN","DSIO1",216,0)
 ;  ACT : ACTION (0:STOP,1:START,2:FLAG,3:REJECT,4:ACCEPT)
"RTN","DSIO1",217,0)
 ;  RES : REASON  - #^#^#
"RTN","DSIO1",218,0)
 ;  COM : COMMENT - ARRAY
"RTN","DSIO1",219,0)
 ;  SOR : SOURCE  - DEFAULT IS DASHBOARD
"RTN","DSIO1",220,0)
 ;
"RTN","DSIO1",221,0)
 ; RETURN:
"RTN","DSIO1",222,0)
 ; -1/1^COMMENT
"RTN","DSIO1",223,0)
 ;
"RTN","DSIO1",224,0)
 Q:$G(DFN)=""!($G(ACT)="")
"RTN","DSIO1",225,0)
 N DIC,DA,X,Y,CT,ACT1,IEN,DB,IPT,I
"RTN","DSIO1",226,0)
 S RES=$G(RES),COM=$G(COM),RET="-1^M Error - Check the trap."
"RTN","DSIO1",227,0)
 ; 
"RTN","DSIO1",228,0)
 S DIC="^DSIO(19641,",DIC(0)="XL",X="`"_DFN D ^DIC
"RTN","DSIO1",229,0)
 I +Y<1 S RET="-1^Patient entry not found." Q
"RTN","DSIO1",230,0)
 S CT=$$GET1^DIQ(19641,DFN_",",.02,"I")
"RTN","DSIO1",231,0)
 ;
"RTN","DSIO1",232,0)
 S (ACT,ACT1)=$$STAT(ACT) I ACT="" D  Q
"RTN","DSIO1",233,0)
 .S RET="-1^EVENT TYPE could not be identified."
"RTN","DSIO1",234,0)
 I ACT<2&(CT=ACT) S RET="-1^Tracking status already "_$$STAT(ACT,1)_"." Q
"RTN","DSIO1",235,0)
 D
"RTN","DSIO1",236,0)
 .I ACT>2 S ACT=$S(ACT=3:0,ACT=4:1,1:"") Q:ACT=""
"RTN","DSIO1",237,0)
 .I CT'=""&(ACT=CT!(ACT=2&(CT'=0))) D TRAK^DSIO2(DFN,ACT1) Q
"RTN","DSIO1",238,0)
 .S IPT(19641,DFN_",",.02)=ACT D FILE^DIE("I","IPT") K IPT I ACT1>2 D
"RTN","DSIO1",239,0)
 ..S IEN=+$G(^TMP($J,"DSIO TRAK")) K ^TMP($J,"DSIO TRAK")
"RTN","DSIO1",240,0)
 ..S IPT(19641.24,IEN_","_DFN_",",.02)=ACT1 D FILE^DIE("I","IPT") K IPT
"RTN","DSIO1",241,0)
 ;
"RTN","DSIO1",242,0)
 I '$D(IEN) S IEN=+$G(^TMP($J,"DSIO TRAK")) K ^TMP($J,"DSIO TRAK")
"RTN","DSIO1",243,0)
 I IEN<1 S RET="-1^Tracking log not created." Q
"RTN","DSIO1",244,0)
 ;
"RTN","DSIO1",245,0)
 ;"DASHBOARD" AND "FILEMAN" ARE SYSTEM ENTRIES (SOURCE)
"RTN","DSIO1",246,0)
 S SOR=$$UP^XLFSTR($G(SOR,"DASHBOARD")) S:SOR="" SOR="DASHBOARD"
"RTN","DSIO1",247,0)
 S DB(1)=$$FIND1^DIC(19641.22,,"O",SOR) I DB(1)<1 K IPT,DB D
"RTN","DSIO1",248,0)
 .S IPT(19641.22,"?+1,",.01)=SOR D UPDATE^DIE(,"IPT","DB") K IPT
"RTN","DSIO1",249,0)
 .S IPT(19641.22,DB(1)_",",.02)=1 D FILE^DIE("I","IPT") K IPT
"RTN","DSIO1",250,0)
 I DB(1)<1 S RET="-1^Unable to define source." Q
"RTN","DSIO1",251,0)
 S IPT(19641.24,IEN_","_DFN_",",.04)=SOR D FILE^DIE("I","IPT","ERR") K IPT
"RTN","DSIO1",252,0)
 ;"DASHBOARD" DOES NOT WHAT MULTIPLE MESSAGES
"RTN","DSIO1",253,0)
 ; SO THIS WILL BE OVERWRITTEN BY SUCCESS
"RTN","DSIO1",254,0)
 I $D(ERR) S RET="1^Unable to set the source as """_SOR_"""."
"RTN","DSIO1",255,0)
 ;
"RTN","DSIO1",256,0)
 ;REASON AND COMMENT
"RTN","DSIO1",257,0)
 F I=1:1:$L(RES,U) D
"RTN","DSIO1",258,0)
 .S IPT(19641.23,"?+1,",.01)=$P(RES,U,I) D UPDATE^DIE(,"IPT") K IPT
"RTN","DSIO1",259,0)
 .S IPT(19641.241,"?+1,"_IEN_","_DFN_",",.01)=$P(RES,U,I) D UPDATE^DIE(,"IPT") K IPT
"RTN","DSIO1",260,0)
 K ^TMP($J,"DSIO REC") S I="" F  S I=$O(COM(I)) Q:I=""  D
"RTN","DSIO1",261,0)
 .S ^TMP($J,"DSIO REC",I+1)=COM(I)
"RTN","DSIO1",262,0)
 D WP^DIE(19641.24,IEN_","_DFN_",",2,"K","^TMP($J,""DSIO REC"")")
"RTN","DSIO1",263,0)
 K ^TMP($J,"DSIO REC")
"RTN","DSIO1",264,0)
 S RET="1^SUCCESS"
"RTN","DSIO1",265,0)
 Q
"RTN","DSIO1",266,0)
 ;
"RTN","DSIO1",267,0)
STAT(ACT,FL) ; WRITE THE STAT IF FL = DO THE INVERSE
"RTN","DSIO1",268,0)
 I ACT'?1N S ACT=$$UP^XLFSTR(ACT) D
"RTN","DSIO1",269,0)
 .S ACT=$S(ACT["STO":0,ACT["STA":1,ACT["FL":2,ACT["RE":3,ACT["AC":4,1:"")
"RTN","DSIO1",270,0)
 I +$G(FL)&(ACT?1N) D
"RTN","DSIO1",271,0)
 .S ACT=$S(ACT=0:"STOPPED",ACT=1:"STARTED",1:ACT)
"RTN","DSIO1",272,0)
 Q ACT
"RTN","DSIO1",273,0)
 ;
"RTN","DSIO1",274,0)
SELECT(RET,TYP) ; RPC: DSIO SELECT LIST
"RTN","DSIO1",275,0)
 ;
"RTN","DSIO1",276,0)
 ; RETURN DROP DOWN LIST
"RTN","DSIO1",277,0)
 ;
"RTN","DSIO1",278,0)
 ; INPUT PARAMETER:
"RTN","DSIO1",279,0)
 ;  TYP : 'S' FOR FILE 19641.22
"RTN","DSIO1",280,0)
 ;  TYP : 'R' FOR FILE 19641.23
"RTN","DSIO1",281,0)
 ;
"RTN","DSIO1",282,0)
 ;  LETTER^ENTRY^A : ADD AN ENTRY TO ONE OF THE ABOVE FILES
"RTN","DSIO1",283,0)
 ;  LETTER^ENTRY^D : DELETE AN ENTRY FROM ONE OF THE ABOVE FILES
"RTN","DSIO1",284,0)
 ;
"RTN","DSIO1",285,0)
 ;  RETURN LIST FOR SUCCESS OR RET(0)="-1^MESSAGE" FOR FAILURE
"RTN","DSIO1",286,0)
 ;
"RTN","DSIO1",287,0)
 N FILE,FLD,DIK,DA,X,Y,IPT,OUT,ERR,I,Z
"RTN","DSIO1",288,0)
 S TYP=$G(TYP) S RET(0)="-1^Bad input parameter value."
"RTN","DSIO1",289,0)
 S FILE=$S($P(TYP,U)="S":19641.22,$P(TYP,U)="R":19641.23,1:"") Q:FILE=""
"RTN","DSIO1",290,0)
 S FLD=$S(FILE=19641.22:"@;.01;.02I",FILE=19641.23:"@;.01")
"RTN","DSIO1",291,0)
 I TYP["^"&($P(TYP,U,3)="D") D
"RTN","DSIO1",292,0)
 .S DA=$$FIND1^DIC(FILE,,"X",$$UP^XLFSTR($P(TYP,U,2)))
"RTN","DSIO1",293,0)
 .S DIK="^DSIO("_FILE_"," D ^DIK
"RTN","DSIO1",294,0)
 I TYP["^"&($P(TYP,U,3)="A") D
"RTN","DSIO1",295,0)
 .S IPT(FILE,"?+1,",.01)=$$UP^XLFSTR($P(TYP,U,2)) D UPDATE^DIE(,"IPT") K IPT
"RTN","DSIO1",296,0)
 D LIST^DIC(FILE,,FLD,"P",,,,,"I '+$P(^(0),U,2)=1",,"OUT","ERR") D
"RTN","DSIO1",297,0)
 .I $D(ERR) S RET(0)="-1^There was an error in generating the list." Q
"RTN","DSIO1",298,0)
 .S I=0,Z=$NA(OUT) F  S Z=$Q(@Z) Q:Z=""  D
"RTN","DSIO1",299,0)
 ..Q:$QS(Z,2)<1
"RTN","DSIO1",300,0)
 ..S RET(I)=$$TITLE^XLFSTR($P(@Z,U,2)),I=I+1
"RTN","DSIO1",301,0)
 .I +RET(0)=-1 S RET(0)="-1^No entries."
"RTN","DSIO1",302,0)
 Q
"RTN","DSIO2")
0^2^B3950125
"RTN","DSIO2",1,0)
DSIO2 ;DSS/TFF - DSIO X-REFERENCES AND UTILITIES;06/28/2013 15:19
"RTN","DSIO2",2,0)
 ;;1.0;DSS,INC OPEN SOURCE;;28 Jan 2013;Build 5
"RTN","DSIO2",3,0)
 ;Copyright 1995-2014,Document Storage Systems Inc. All Rights Reserved
"RTN","DSIO2",4,0)
 ;
"RTN","DSIO2",5,0)
 ;
"RTN","DSIO2",6,0)
 ; Documented API and ICRs
"RTN","DSIO2",7,0)
 ; -----------------------
"RTN","DSIO2",8,0)
 ;
"RTN","DSIO2",9,0)
 Q
"RTN","DSIO2",10,0)
 ;
"RTN","DSIO2",11,0)
 ;=====================================================================
"RTN","DSIO2",12,0)
 ;                       X - R E F  S U P P O R T
"RTN","DSIO2",13,0)
 ;=====================================================================
"RTN","DSIO2",14,0)
 ;
"RTN","DSIO2",15,0)
TRAK(DFN,ANS) ; CREATE A TRACKING ENTRY FROM DSIO PATIENT WHEN THE
"RTN","DSIO2",16,0)
 ;              CURRENTLY TRACKING STATUS CHANGES (.02)
"RTN","DSIO2",17,0)
 ;
"RTN","DSIO2",18,0)
 Q:$G(ANS)=""
"RTN","DSIO2",19,0)
 N FM,IPT,DIC,DA,DG,DLAYGO,DR,N,X,Y,IEN S DLAYGO=19641.2
"RTN","DSIO2",20,0)
 S FM(1)=$$FIND1^DIC(19641.22,,"O","FILEMAN")
"RTN","DSIO2",21,0)
 I FM(1)<1 K FM D
"RTN","DSIO2",22,0)
 .S IPT(19641.22,"?+1,",.01)="FILEMAN" D UPDATE^DIE(,"IPT","FM") K IPT
"RTN","DSIO2",23,0)
 .S IPT(19641.22,FM(1)_",",.02)=1 D FILE^DIE("I","IPT") K IPT
"RTN","DSIO2",24,0)
 S DIC="^DSIO(19641.2,",DIC(0)="XL",X="`"_DFN D ^DIC I +Y>0 D
"RTN","DSIO2",25,0)
 .S IPT(19641.24,"+1,"_DFN_",",.01)=$$NOW^XLFDT D UPDATE^DIE(,"IPT","IEN")
"RTN","DSIO2",26,0)
 .K IPT I $D(IEN(1)) D
"RTN","DSIO2",27,0)
 ..K ^TMP($J,"DSIO TRAK") S ^TMP($J,"DSIO TRAK")=IEN(1)
"RTN","DSIO2",28,0)
 ..S IPT(19641.24,IEN(1)_","_DFN_",",.02)=ANS
"RTN","DSIO2",29,0)
 ..S IPT(19641.24,IEN(1)_","_DFN_",",.03)=DUZ
"RTN","DSIO2",30,0)
 ..S IPT(19641.24,IEN(1)_","_DFN_",",.04)="FILEMAN"
"RTN","DSIO2",31,0)
 ..D FILE^DIE("I","IPT") K IPT
"RTN","DSIO2",32,0)
 Q
"RTN","DSIO2",33,0)
 ;
"RTN","DSIO2",34,0)
 ;=====================================================================
"RTN","DSIO2",35,0)
 ;                         U T I L I T I E S
"RTN","DSIO2",36,0)
 ;=====================================================================
"RTN","DSIO2",37,0)
 ;
"RTN","DSIO2",38,0)
DT(VAL) ; TRANSLATE EXTERNAL DATE TIME TO FM DATE TIME
"RTN","DSIO2",39,0)
 ;
"RTN","DSIO2",40,0)
 ; Convert this format 12/5/2013@18:01:51 TO FM
"RTN","DSIO2",41,0)
 ;
"RTN","DSIO2",42,0)
 N RET,YR,MH,DY,TM,HR,I S RET=-1
"RTN","DSIO2",43,0)
 S YR=$P($P(VAL,"/",3),"@")-1700
"RTN","DSIO2",44,0)
 S MH=$P(VAL,"/") I $L(MH)=1 S MH=0_MH
"RTN","DSIO2",45,0)
 S DY=$P(VAL,"/",2) I $L(DY)=1 S DY=0_DY
"RTN","DSIO2",46,0)
 ;
"RTN","DSIO2",47,0)
 ;TIME
"RTN","DSIO2",48,0)
 S TM=$P(VAL,"@",2),HR=$P(TM,":"),TM=$TR(TM,":","")
"RTN","DSIO2",49,0)
 F I=$L(TM):-1:1 Q:$E(TM,I)'=0  I $E(TM,I)=0 S TM=$E(TM,1,I-1)
"RTN","DSIO2",50,0)
 ;EXAMPLE: IF 600(6:00) INSTEAD OF 0600 FOR 6 AM
"RTN","DSIO2",51,0)
 I HR<10 S TM=0_TM
"RTN","DSIO2",52,0)
 ;
"RTN","DSIO2",53,0)
 S RET=YR_MH_DY_"."_TM
"RTN","DSIO2",54,0)
 I TM="" S RET=$E(RET,1,$L(RET)-1)
"RTN","DSIO2",55,0)
 Q RET
"RTN","DSIO2",56,0)
 ;
"RTN","DSIO2",57,0)
FN(P,C) ; GET THE NEXT RECORD BY DASHBOARD PAGE AND COUNT FORWARDS
"RTN","DSIO2",58,0)
 Q:P<2 0
"RTN","DSIO2",59,0)
 Q C*(P-1)
"RTN","DSIO2",60,0)
 ;
"RTN","DSIO2",61,0)
NAME(NAM) ; TRANSFORM NAME,NAME TO TITLE CASE THATS - Name,Name
"RTN","DSIO2",62,0)
 N RET S RET=""
"RTN","DSIO2",63,0)
 S RET=$$TITLE^XLFSTR($P(NAM,","))_","_$$TITLE^XLFSTR($P(NAM,",",2))
"RTN","DSIO2",64,0)
 Q RET
"RTN","DSIO3")
0^3^B40420926
"RTN","DSIO3",1,0)
DSIO3 ;DSS/TFF - DSIO TIU SUPPORT;06/28/2013 15:19
"RTN","DSIO3",2,0)
 ;;1.0;DSS,INC OPEN SOURCE;;28 Jan 2013;Build 5
"RTN","DSIO3",3,0)
 ;Copyright 1995-2014,Document Storage Systems Inc. All Rights Reserved
"RTN","DSIO3",4,0)
 ;
"RTN","DSIO3",5,0)
 ;
"RTN","DSIO3",6,0)
 ; Documented API and ICRs
"RTN","DSIO3",7,0)
 ; -----------------------
"RTN","DSIO3",8,0)
 ;
"RTN","DSIO3",9,0)
 Q
"RTN","DSIO3",10,0)
 ;
"RTN","DSIO3",11,0)
CREATE(RET,DFN,TITLE,NOTE,DATA) ; RPC: DSIO CREATE A NOTE
"RTN","DSIO3",12,0)
 ;
"RTN","DSIO3",13,0)
 ; ADDITIONAL PARAMETER TO SAVE DISCREET INFORMATION
"RTN","DSIO3",14,0)
 ; ARRAY(#)=LABEL/FIELD^VALUE
"RTN","DSIO3",15,0)
 ;
"RTN","DSIO3",16,0)
 ; TIUX(1202)=USER
"RTN","DSIO3",17,0)
 ; TIUX(1205)=LOCATION
"RTN","DSIO3",18,0)
 ; TIUX(1208)=COSIGNER
"RTN","DSIO3",19,0)
 ; TIUX(1301)=DT OF ENTRY
"RTN","DSIO3",20,0)
 ; TIUX(1405)=PKGREF
"RTN","DSIO3",21,0)
 ; TIUX(1701)=SUBJECT
"RTN","DSIO3",22,0)
 ; TIUX(2101)=IDPARENT
"RTN","DSIO3",23,0)
 ;
"RTN","DSIO3",24,0)
 ; ORDER:
"RTN","DSIO3",25,0)
 ; CREATE - BOILER - LOCK - UPDATE - SET - UNLOCK
"RTN","DSIO3",26,0)
 ;
"RTN","DSIO3",27,0)
 ; RETURN: LITERAL
"RTN","DSIO3",28,0)
 ;
"RTN","DSIO3",29,0)
 N TIUX,IEN,TMP,BLR S RET="0^Title not found."
"RTN","DSIO3",30,0)
 S TIUX(1202)=DUZ,TIUX(1301)=$$NOW^XLFDT
"RTN","DSIO3",31,0)
 S TITLE=$$FIND1^DIC(8925.1,,"O",TITLE) Q:TITLE=0
"RTN","DSIO3",32,0)
 D MAKE^TIUSRVP(.IEN,DFN,TITLE,,,.TIUX,,1) ;RET POINTER TO 8925
"RTN","DSIO3",33,0)
 ;0^Explanatory message if no SUCCESS
"RTN","DSIO3",34,0)
 I +IEN=0 S RET=IEN Q
"RTN","DSIO3",35,0)
 D BLRSHELL^TIUSRVD(.TMP,TITLE,DFN) I $D(TMP) M BLR("TEXT")=@TMP
"RTN","DSIO3",36,0)
 D SET(.RET,IEN,.NOTE,.DATA,.BLR)
"RTN","DSIO3",37,0)
 Q
"RTN","DSIO3",38,0)
 ;
"RTN","DSIO3",39,0)
SET(RET,IEN,NOTE,DATA,BLR) ; RPC: DSIO UPDATE A NOTE
"RTN","DSIO3",40,0)
 ; 
"RTN","DSIO3",41,0)
 ; REQUIRED INPUT:
"RTN","DSIO3",42,0)
 ; ---------------
"RTN","DSIO3",43,0)
 ; IEN,NOTE
"RTN","DSIO3",44,0)
 ;
"RTN","DSIO3",45,0)
 ; THIS RETURN ALSO APPLIES TO CREATE AND ADDENDUM
"RTN","DSIO3",46,0)
 ; -----------------------------------------------
"RTN","DSIO3",47,0)
 ; If successful:
"RTN","DSIO3",48,0)
 ;   <IEN in TIU DOCUMENT FILE>^<LAST_PAGE_RECEIVED>^<TOTAL_PAGES_EXPECTED>
"RTN","DSIO3",49,0)
 ; 
"RTN","DSIO3",50,0)
 ; If unsuccessful:
"RTN","DSIO3",51,0)
 ;   0^0^0^Explanatory text
"RTN","DSIO3",52,0)
 ;
"RTN","DSIO3",53,0)
 ; RETURN: LITERAL
"RTN","DSIO3",54,0)
 ;
"RTN","DSIO3",55,0)
 N OUT,TITLE,TIUX
"RTN","DSIO3",56,0)
 D GETS^DIQ(8925,IEN,2,,"OUT")
"RTN","DSIO3",57,0)
 I +$O(OUT(8925,IEN_",",2,""),-1)>0!('$$AUTH(.RET,IEN,"EDIT RECORD")) D  Q
"RTN","DSIO3",58,0)
 .D ADDEN(.RET,IEN)
"RTN","DSIO3",59,0)
 S TITLE=$$TITLE(.RET,IEN) Q:TITLE<1
"RTN","DSIO3",60,0)
 S TIUX(.01)=TITLE,TIUX(1202)=DUZ,TIUX(1301)=$$NOW^XLFDT
"RTN","DSIO3",61,0)
UPDATE ;
"RTN","DSIO3",62,0)
 N X,I,CT,NOTIN S CT=1
"RTN","DSIO3",63,0)
 Q:'$$LCK(.RET,IEN)
"RTN","DSIO3",64,0)
 D UPDATE^TIUSRVP(.RET,IEN,.TIUX) I $P(RET,U,2)=1 D  Q
"RTN","DSIO3",65,0)
 .S RET="0^Error updating." D UNLCK(IEN)
"RTN","DSIO3",66,0)
 D SETDATA(IEN,.DATA)
"RTN","DSIO3",67,0)
 I $D(BLR) M NOTIN=BLR S CT=$O(NOTIN("TEXT",""),-1)+1
"RTN","DSIO3",68,0)
 S X="" F I=CT:1 S X=$O(NOTE(X)) Q:X=""  S NOTIN("TEXT",I,0)=NOTE(X)
"RTN","DSIO3",69,0)
 S NOTIN("HDR")="1^1" ;<# of Current Page>^<Total # of Pages>
"RTN","DSIO3",70,0)
 D SETTEXT^TIUSRVPT(.RET,IEN,.NOTIN),UNLCK(IEN)
"RTN","DSIO3",71,0)
 Q
"RTN","DSIO3",72,0)
 ;
"RTN","DSIO3",73,0)
ADDEN(RET,IEN,NOTE,DATA) ; RPC: DSIO MAKE ADDENDUM
"RTN","DSIO3",74,0)
 ;
"RTN","DSIO3",75,0)
 ; RETURN: LITERAL
"RTN","DSIO3",76,0)
 ;
"RTN","DSIO3",77,0)
 N TITLE,TIUX,AIEN
"RTN","DSIO3",78,0)
 Q:'$$AUTH(.RET,IEN,"MAKE ADDENDUM")
"RTN","DSIO3",79,0)
 S TITLE=$$TITLE(.RET,IEN) Q:TITLE<1
"RTN","DSIO3",80,0)
 S TIUX(.01)=TITLE,TIUX(1202)=DUZ,TIUX(1301)=$$NOW^XLFDT
"RTN","DSIO3",81,0)
 D MAKEADD^TIUSRVP(.AIEN,IEN,.TIUX) I +AIEN=-1 S RET="0^"_$P(AIEN,U,2) Q
"RTN","DSIO3",82,0)
 S IEN=AIEN D UPDATE
"RTN","DSIO3",83,0)
 Q
"RTN","DSIO3",84,0)
 ;
"RTN","DSIO3",85,0)
GET(RET,IEN) ; RPC: DSIO GET RECORD TEXT
"RTN","DSIO3",86,0)
 ;
"RTN","DSIO3",87,0)
 ; RETURN: GLOBAL ARRAY
"RTN","DSIO3",88,0)
 ;
"RTN","DSIO3",89,0)
 ; **LINE SEP TO INDICATE DISCREET DATA FIELDS?
"RTN","DSIO3",90,0)
 ;
"RTN","DSIO3",91,0)
 S RET=$NA(^TMP("DSIO TIUVIEW",$J)) K @RET
"RTN","DSIO3",92,0)
 Q:'$$AUTH(.RET,IEN,"VIEW")
"RTN","DSIO3",93,0)
 D TGET^TIUSRVR1(.RET,IEN),GETS(.RET,IEN)
"RTN","DSIO3",94,0)
 Q
"RTN","DSIO3",95,0)
 ;
"RTN","DSIO3",96,0)
DELETE(RET,IEN,JUST) ; RPC: DSIO DELETE A NOTE
"RTN","DSIO3",97,0)
 ;
"RTN","DSIO3",98,0)
 ; RETURN: LITERAL
"RTN","DSIO3",99,0)
 ;
"RTN","DSIO3",100,0)
 Q:'$$AUTH(.RET,IEN,"DELETE RECORD")
"RTN","DSIO3",101,0)
 D NEEDJUST^TIUSRVA(.RET,IEN) I +RET=1&($G(JUST)="") D  Q
"RTN","DSIO3",102,0)
 .S RET="0^Justification for deletion is required."
"RTN","DSIO3",103,0)
 Q:'$$LCK(.RET,IEN)
"RTN","DSIO3",104,0)
 D DELETE^TIUSRVP(.RET,IEN,$G(JUST)) S:+RET=1 $P(RET,U)=0
"RTN","DSIO3",105,0)
 D UNLCK(IEN)
"RTN","DSIO3",106,0)
 Q
"RTN","DSIO3",107,0)
 ;
"RTN","DSIO3",108,0)
SIGN(RET,IEN,SIG) ; RPC: DSIO SIGN A NOTE
"RTN","DSIO3",109,0)
 ;
"RTN","DSIO3",110,0)
 ; RETURN: LITERAL
"RTN","DSIO3",111,0)
 ;
"RTN","DSIO3",112,0)
 ; $$ENCRYP^XUSRB1 - DEBUG
"RTN","DSIO3",113,0)
 ;
"RTN","DSIO3",114,0)
 D SAVED^TIUSRVP1(.RET,IEN) Q:+RET=0
"RTN","DSIO3",115,0)
 Q:'$$LCK(.RET,IEN)
"RTN","DSIO3",116,0)
 N ACT D WHATACT^TIUSRVA(.ACT,IEN)
"RTN","DSIO3",117,0)
 Q:'$$AUTH(.RET,IEN,ACT)
"RTN","DSIO3",118,0)
 D SIGN^TIUSRVP(.RET,IEN,SIG),UNLCK(IEN)
"RTN","DSIO3",119,0)
 Q
"RTN","DSIO3",120,0)
 ;
"RTN","DSIO3",121,0)
LIST(RET,DFN,TITLE) ; RPC: DSIO NOTES BY DFN AND TITLE
"RTN","DSIO3",122,0)
 ;
"RTN","DSIO3",123,0)
 ; STATUS : POINTER TO TIU STATUS FILE (#8925.6)
"RTN","DSIO3",124,0)
 ;
"RTN","DSIO3",125,0)
 ; RETURN: LIST - IEN^STATUS
"RTN","DSIO3",126,0)
 ;
"RTN","DSIO3",127,0)
 N SCR,OUT,ERR,I,CT S RET(0)="0^Title not found."
"RTN","DSIO3",128,0)
 S TITLE=$$FIND1^DIC(8925.1,,"O",TITLE) Q:TITLE=0
"RTN","DSIO3",129,0)
 S OUT=$NA(^TMP($J,"DSIO TIULIST")) K @OUT
"RTN","DSIO3",130,0)
 S SCR="I +^(0)=TITLE,$P(^(0),U,2)=DFN"
"RTN","DSIO3",131,0)
 D LIST^DIC(8925,,"@;.05","P",,,,"B",SCR,,OUT,"ERR") Q:$D(ERR)
"RTN","DSIO3",132,0)
 S I=0,CT="" F  S CT=$O(@OUT@("DILIST",CT),-1) Q:CT=""  D
"RTN","DSIO3",133,0)
 .S:CT'=0 RET(I)=@OUT@("DILIST",CT,0),I=I+1
"RTN","DSIO3",134,0)
 K @OUT
"RTN","DSIO3",135,0)
 Q
"RTN","DSIO3",136,0)
 ;
"RTN","DSIO3",137,0)
 ;=====================================================================
"RTN","DSIO3",138,0)
 ;               D I S C R E E T  D A T A  E L E M E N T S
"RTN","DSIO3",139,0)
 ;=====================================================================
"RTN","DSIO3",140,0)
 ;
"RTN","DSIO3",141,0)
 ; DSIO TIU DISCREET CONTROL (FILE TO PUSH DISCREET DATA ELEMENTS
"RTN","DSIO3",142,0)
 ;                            ELSEWHERE) (19641.4)
"RTN","DSIO3",143,0)
 ; - FIRST BY TIU DOCUMENT DEFINITION (8925.1) THEN BY DATA ELEMENT
"RTN","DSIO3",144,0)
 ;   - A DOCUMENT DEFINITION CAN CONTROL MANY DATA ELEMENTS
"RTN","DSIO3",145,0)
 ;     - THUS IF A DATA ELEMENT IS WITHIN THE DOC DEFINITION IT WILL
"RTN","DSIO3",146,0)
 ;       EXECUTE PROVIDED M CODE TO SAVE THE DATA ELSEWHERE
"RTN","DSIO3",147,0)
 ;
"RTN","DSIO3",148,0)
 ; DSIO TIU DISCREET DATA (FILE THAT STORES THE DISCREET DATA) (19641.41)
"RTN","DSIO3",149,0)
 ; - FIRST BY PATIENT - THEN BY NOTE (8925)
"RTN","DSIO3",150,0)
 ;   - THUS MULTIPLE PATIENT NOTES (EVEN OF THE SAME TYPE) CAN HAVE
"RTN","DSIO3",151,0)
 ;     DIFFERENT DISCREET DATA ELEMENTS
"RTN","DSIO3",152,0)
 ;
"RTN","DSIO3",153,0)
CONTROL(IEN,FLD,X) ; CHECK THE CONTROL FILE
"RTN","DSIO3",154,0)
 N TITLE,RET,DFN,XE S X=$G(X)
"RTN","DSIO3",155,0)
 S DFN=$$GET1^DIQ(8925,IEN_",",.02,"I") Q:DFN=""
"RTN","DSIO3",156,0)
 S TITLE=$$TITLE(.RET,IEN) Q:TITLE<1
"RTN","DSIO3",157,0)
 K RET S RET=$$FIND1^DIC(19641.4,,"A",TITLE) Q:RET=0
"RTN","DSIO3",158,0)
 K RET S RET=$$FIND1^DIC(19641.42,","_TITLE_",","X",FLD) Q:RET=0
"RTN","DSIO3",159,0)
 S XE=$$GET1^DIQ(19641.42,RET_","_TITLE,1) X:XE'="" XE
"RTN","DSIO3",160,0)
 Q
"RTN","DSIO3",161,0)
 ;
"RTN","DSIO3",162,0)
SETDATA(IEN,DATA) ; SAVE DATA AS DISCREET ELEMENTS LINKED TO A TIU NOTE
"RTN","DSIO3",163,0)
 ;
"RTN","DSIO3",164,0)
 ; FOR USE WITH RPCs
"RTN","DSIO3",165,0)
 ; - DSIO CREATE A NOTE
"RTN","DSIO3",166,0)
 ; - DSIO UPDATE A NOTE
"RTN","DSIO3",167,0)
 ; - DISO MAKE ADDENDUM
"RTN","DSIO3",168,0)
 ;
"RTN","DSIO3",169,0)
 ;  IEN = TIU DOCUMENT     - IEN OF 8925
"RTN","DSIO3",170,0)
 ; DATA = ELEMENTS TO FILE - FIELD^DATA
"RTN","DSIO3",171,0)
 ;
"RTN","DSIO3",172,0)
 N DFN,DIC,DA,X,Y,CT,IPT,DB
"RTN","DSIO3",173,0)
 S DFN=$$GET1^DIQ(8925,IEN_",",.02,"I") Q:DFN=""
"RTN","DSIO3",174,0)
 S DIC="^DSIO(19641.41,",DIC(0)="XL",X="`"_DFN D ^DIC Q:+Y<1
"RTN","DSIO3",175,0)
 K DIC,DA,X,Y S DA(1)=DFN
"RTN","DSIO3",176,0)
 S DIC="^DSIO(19641.41,"_DFN_",1,",DIC(0)="XL",X="`"_IEN D ^DIC Q:+Y<1
"RTN","DSIO3",177,0)
 S CT="" F  S CT=$O(DATA(CT)) Q:CT=""  D  K DB
"RTN","DSIO3",178,0)
 .S IPT(19641.4111,"?+1,"_IEN_","_DFN_",",.01)=$$UP^XLFSTR($P(DATA(CT),U)) D
"RTN","DSIO3",179,0)
 ..D UPDATE^DIE(,"IPT","DB") K IPT
"RTN","DSIO3",180,0)
 .S IPT(19641.4111,DB(1)_","_IEN_","_DFN_",",.02)=$P(DATA(CT),U,2) D
"RTN","DSIO3",181,0)
 ..D FILE^DIE("I","IPT") K IPT
"RTN","DSIO3",182,0)
 .D CONTROL(IEN,$P(DATA(CT),U),$P(DATA(CT),U,2))
"RTN","DSIO3",183,0)
 Q
"RTN","DSIO3",184,0)
 ;
"RTN","DSIO3",185,0)
GETS(ARY,IEN) ; APPEND DISCREET DATA TO A NOTE ARRAY
"RTN","DSIO3",186,0)
 N I,DFN,TITLE,FLD,DATA S I=$O(@ARY@(""),-1)+1
"RTN","DSIO3",187,0)
 S DFN=$O(^DSIO(19641.41,"C",IEN,"")) Q:DFN=""
"RTN","DSIO3",188,0)
 S $P(DFN,U,2)=$$GET1^DIQ(2,DFN,.01)
"RTN","DSIO3",189,0)
 S TITLE=$$PNAME^TIULC1($$TITLE(.OUT,IEN)) Q:TITLE="UNKNOWN"
"RTN","DSIO3",190,0)
 S FLD="" F  S FLD=$O(^DSIO(19641.41,"FLD",TITLE,FLD)) Q:FLD=""  D
"RTN","DSIO3",191,0)
 .K DATA S DATA=$O(^DSIO(19641.41,"DATA",$P(DFN,U,2),TITLE,FLD,+DFN,IEN,""))
"RTN","DSIO3",192,0)
 .S:DATA'="" @ARY@(I)=FLD_": "_$$GET1^DIQ(19641.4111,DATA_","_IEN_","_+DFN,.02),I=I+1
"RTN","DSIO3",193,0)
 Q
"RTN","DSIO3",194,0)
 ;
"RTN","DSIO3",195,0)
GETDATA(OUT,IEN,FLD) ; RPC: DSIO GET NOTE ELEMENT
"RTN","DSIO3",196,0)
 ;
"RTN","DSIO3",197,0)
 ; GET DATA SAVED AS DISCREET ELEMENTS LINKED TO A TIU NOTE
"RTN","DSIO3",198,0)
 ;
"RTN","DSIO3",199,0)
 ; RETURN: LITERAL "" OR VALUE
"RTN","DSIO3",200,0)
 ;
"RTN","DSIO3",201,0)
 N DFN,TITLE,DATA S OUT="" Q:FLD=""
"RTN","DSIO3",202,0)
 S FLD=$$UP^XLFSTR(FLD)
"RTN","DSIO3",203,0)
 S DFN=$O(^DSIO(19641.41,"C",IEN,"")) Q:DFN=""
"RTN","DSIO3",204,0)
 S $P(DFN,U,2)=$$GET1^DIQ(2,DFN,.01)
"RTN","DSIO3",205,0)
 S TITLE=$$PNAME^TIULC1($$TITLE(.OUT,IEN)) Q:TITLE="UNKNOWN"
"RTN","DSIO3",206,0)
 S DATA=$O(^DSIO(19641.41,"DATA",$P(DFN,U,2),TITLE,FLD,+DFN,IEN,""))
"RTN","DSIO3",207,0)
 S:DATA'="" OUT=$$GET1^DIQ(19641.4111,DATA_","_IEN_","_+DFN,.02)
"RTN","DSIO3",208,0)
 Q
"RTN","DSIO3",209,0)
 ;
"RTN","DSIO3",210,0)
 ;=====================================================================
"RTN","DSIO3",211,0)
 ;                         U T I L I T I E S
"RTN","DSIO3",212,0)
 ;=====================================================================
"RTN","DSIO3",213,0)
 ;
"RTN","DSIO3",214,0)
TITLE(OUT,IEN) ; TIU GET DOCUMENT TITLE
"RTN","DSIO3",215,0)
 N RET D GETTITLE^TIUSRVA(.RET,IEN)
"RTN","DSIO3",216,0)
 I +RET<1 S OUT="Title not found."
"RTN","DSIO3",217,0)
 Q +RET
"RTN","DSIO3",218,0)
 ;
"RTN","DSIO3",219,0)
AUTH(OUT,IEN,ACT) ; TIU AUTHORIZATION
"RTN","DSIO3",220,0)
 N RET D CANDO^TIUSRVA(.RET,IEN,ACT)
"RTN","DSIO3",221,0)
 I +RET=0 D
"RTN","DSIO3",222,0)
 .I $G(OUT)["^TMP(" S @OUT@(0)=RET Q
"RTN","DSIO3",223,0)
 .S OUT=RET
"RTN","DSIO3",224,0)
 Q RET
"RTN","DSIO3",225,0)
 ;
"RTN","DSIO3",226,0)
LCK(OUT,IEN) ; TIU LOCK RECORD
"RTN","DSIO3",227,0)
 ;
"RTN","DSIO3",228,0)
 ; 0 if the LOCK was GRANTED
"RTN","DSIO3",229,0)
 ; 1^<Explanatory Message> if LOCK was DENIED
"RTN","DSIO3",230,0)
 ;
"RTN","DSIO3",231,0)
 ; TRANSFORMED: 0 IS FAIL
"RTN","DSIO3",232,0)
 ;              1 IS PASS
"RTN","DSIO3",233,0)
 ;
"RTN","DSIO3",234,0)
 D LOCK^TIUSRVP(.OUT,IEN) I +OUT=1 S $P(OUT,U)=0 Q OUT
"RTN","DSIO3",235,0)
 Q 1
"RTN","DSIO3",236,0)
 ;
"RTN","DSIO3",237,0)
UNLCK(IEN) ; TIU UNLOCK RECORD
"RTN","DSIO3",238,0)
 N OUT D UNLOCK^TIUSRVP(.OUT,IEN)
"RTN","DSIO3",239,0)
 Q 1
"RTN","DSIO4")
0^4^B3809246
"RTN","DSIO4",1,0)
DSIO4 ;DSS/TFF - DSIO RPCS;06/28/2013 15:19
"RTN","DSIO4",2,0)
 ;;1.0;DSS,INC OPEN SOURCE;;28 Jan 2013;Build 5
"RTN","DSIO4",3,0)
 ;Copyright 1995-2014,Document Storage Systems Inc. All Rights Reserved
"RTN","DSIO4",4,0)
 ;
"RTN","DSIO4",5,0)
 ;
"RTN","DSIO4",6,0)
 ; Documented API and ICRs
"RTN","DSIO4",7,0)
 ; -----------------------
"RTN","DSIO4",8,0)
 ;
"RTN","DSIO4",9,0)
 Q
"RTN","DSIO4",10,0)
 ;
"RTN","DSIO4",11,0)
CONTACT(RET,DFN) ; RPC: DSIO NEXT CONTACT DATE
"RTN","DSIO4",12,0)
 ;
"RTN","DSIO4",13,0)
 ; RETURN = LITERAL
"RTN","DSIO4",14,0)
 ;
"RTN","DSIO4",15,0)
 S DFN=$G(DFN),RET=$$GET1^DIQ(19641,DFN_",",.03)
"RTN","DSIO4",16,0)
 Q
"RTN","DSIO4",17,0)
 ;
"RTN","DSIO4",18,0)
SENT(RET,SAVE) ; RPC: DSIO SAVE NON VA ENTITY
"RTN","DSIO4",19,0)
 ;
"RTN","DSIO4",20,0)
 ; SAVE(#)=FIELD^VALUE
"RTN","DSIO4",21,0)
 ; RETURN: LITERAL
"RTN","DSIO4",22,0)
 ;         -1^ERROR MESSAGE
"RTN","DSIO4",23,0)
 ;          1^IEN
"RTN","DSIO4",24,0)
 ;
"RTN","DSIO4",25,0)
 N CT,FLD,TMP,IPT,IEN S RET="-1"
"RTN","DSIO4",26,0)
 S CT="" F  S CT=$O(SAVE(CT)) Q:CT=""  D
"RTN","DSIO4",27,0)
 .S FLD=$$FLDNUM^DILFD(19641.1,$$UP^XLFSTR($P(SAVE(CT),U))) Q:FLD=0
"RTN","DSIO4",28,0)
 .S TMP(FLD)=$P(SAVE(CT),U,2)
"RTN","DSIO4",29,0)
 I $G(TMP(.01))="" S RET="-1^The name of the entity must be provided." Q
"RTN","DSIO4",30,0)
 S IPT(19641.1,"?+1,",.01)=$$UP^XLFSTR(TMP(.01)) D UPDATE^DIE(,"IPT","IEN")
"RTN","DSIO4",31,0)
 I +$G(IEN(1))<1 S RET="-1^Could not find or create entity." Q
"RTN","DSIO4",32,0)
 K IPT,TMP(.01) S FLD="" F  S FLD=$O(TMP(FLD)) Q:FLD=""  D
"RTN","DSIO4",33,0)
 .S IPT(19641.1,IEN(1)_",",FLD)=TMP(FLD) D FILE^DIE(,"IPT") K IPT
"RTN","DSIO4",34,0)
 S RET="1^"_IEN(1)
"RTN","DSIO4",35,0)
 Q
"RTN","DSIO4",36,0)
 ;
"RTN","DSIO4",37,0)
RENT(RET,TYP) ; RPC: DSIO RETURN ENTITY
"RTN","DSIO4",38,0)
 ;
"RTN","DSIO4",39,0)
 ; RETURN: GLOBAL ARRAY
"RTN","DSIO4",40,0)
 ;
"RTN","DSIO4",41,0)
 ; IEN^NAME^TYPE^INACTIVE^STREE ADDRESS 1^STREE ADDRESS 2
"RTN","DSIO4",42,0)
 ; ^STREET ADDRESS 3^CITY^STATE^ZIP CODE^PHONE NUMBER (HOME)
"RTN","DSIO4",43,0)
 ; ^PHONE NUMBER (OFFICE)^PHONE NUMBER (CELL)^FAX NUMBER
"RTN","DSIO4",44,0)
 ;
"RTN","DSIO4",45,0)
 ; **ADD SUPPORT FOR SINGLE ENTITY RETURN
"RTN","DSIO4",46,0)
 ;
"RTN","DSIO4",47,0)
 N FLD,OUT,ERR
"RTN","DSIO4",48,0)
 S RET=$NA(^TMP("DSIO RENTRET",$J)),OUT=$NA(^TMP("DSIO RENT",$J))
"RTN","DSIO4",49,0)
 K @RET,@OUT S @RET@(0)="-1^No entries found."
"RTN","DSIO4",50,0)
 S FLD="@;.01;.02;.03;1.1;1.2;1.3;1.4;1.5I;1.6;2.1;2.2;2.3;2.4"
"RTN","DSIO4",51,0)
 D LIST^DIC(19641.1,,FLD,"P",,,,$G(TYP),,,OUT,"ERR") Q:$D(ERR)
"RTN","DSIO4",52,0)
 S CT=0 F  S CT=$O(@OUT@("DILIST",CT)) Q:'CT  D
"RTN","DSIO4",53,0)
 .S @RET@(CT-1)=@OUT@("DILIST",CT,0)
"RTN","DSIO4",54,0)
 K @OUT
"RTN","DSIO4",55,0)
 Q
"RTN","DSIOE")
0^^B2164889
"RTN","DSIOE",1,0)
DSIOE ;DSS/TFF - ENVIRONMENT CHECK ACTION;06/28/2013 15:19
"RTN","DSIOE",2,0)
 ;;1.0;DSS,INC OPEN SOURCE;;28 Jan 2013;Build 5
"RTN","DSIOE",3,0)
 ;Copyright 1995-2013,Document Storage Systems Inc. All Rights Reserved
"RTN","DSIOE",4,0)
 ;
"RTN","DSIOE",5,0)
 ;
"RTN","DSIOE",6,0)
 ; Documented API and ICRs
"RTN","DSIOE",7,0)
 ; -----------------------
"RTN","DSIOE",8,0)
 ;THESE ARE FOR THE DSIO CORE BUILDS
"RTN","DSIOE",9,0)
 D FILE
"RTN","DSIOE",10,0)
 ;
"RTN","DSIOE",11,0)
 ;THESE ARE FOR THE SMART ALERT BUILDS
"RTN","DSIOE",12,0)
 ;D ORATR,MODS
"RTN","DSIOE",13,0)
 ;
"RTN","DSIOE",14,0)
 Q
"RTN","DSIOE",15,0)
FILE ; CHECK IF 19641.21 STILL EXISTS
"RTN","DSIOE",16,0)
 I $$VFILE^DILFD(19641.21) S XPDQUIT=1
"RTN","DSIOE",17,0)
 Q
"RTN","DSIOE",18,0)
 ;
"RTN","DSIOE",19,0)
ORATR ; CHECK FOR PREVIOUS INSTALL
"RTN","DSIOE",20,0)
 N OUT,ERR,Z,CK
"RTN","DSIOE",21,0)
 D LIST^DIC(9.7,,"@;.01","P",,,"OR*3.0*358",,,,"OUT","ERR")
"RTN","DSIOE",22,0)
 I $D(ERR) S XPDQUIT=1 Q
"RTN","DSIOE",23,0)
 S Z=0 F  S Z=$O(OUT("DILIST",Z)) Q:'Z  D
"RTN","DSIOE",24,0)
 .S:$$GET1^DIQ(9.7,$P(OUT("DILIST",Z,0),U),.02)="Install Completed" CK=1
"RTN","DSIOE",25,0)
 I '$D(CK) S XPDQUIT=1 W !,"** OR*3.0*358 MUST BE INSTALLED **",!
"RTN","DSIOE",26,0)
 Q
"RTN","DSIOE",27,0)
 ;
"RTN","DSIOE",28,0)
MODS ; CHECK THE MODED ROUTINE CHECKSUMS
"RTN","DSIOE",29,0)
 Q:$D(XPDQUIT)
"RTN","DSIOE",30,0)
 N X,CK F X="XQALSET^72705650","ORWDX^66876839" D
"RTN","DSIOE",31,0)
 .S CK=$P(X,U,2),X=$P(X,U)
"RTN","DSIOE",32,0)
 .X ^%ZOSF("TEST") I '$T W !,X," NOT FOUND ON THIS UCI (SKIPPING)** ",$$RTNUP^XPDUTL(X,2),! Q
"RTN","DSIOE",33,0)
 .X ^%ZOSF("RSUM1") I Y'=CK W !,X," INCORRECT CHECKSUM (SKIPPING)** ",$$RTNUP^XPDUTL(X,2),!
"RTN","DSIOE",34,0)
 Q
"SEC","^DIC",19641,19641,0,"AUDIT")
@
"SEC","^DIC",19641,19641,0,"DD")
@
"SEC","^DIC",19641.1,19641.1,0,"AUDIT")
@
"SEC","^DIC",19641.1,19641.1,0,"DD")
@
"SEC","^DIC",19641.2,19641.2,0,"AUDIT")
@
"SEC","^DIC",19641.2,19641.2,0,"DD")
@
"SEC","^DIC",19641.4,19641.4,0,"AUDIT")
@
"SEC","^DIC",19641.4,19641.4,0,"DD")
@
"SEC","^DIC",19641.4,19641.4,0,"DEL")
@
"SEC","^DIC",19641.4,19641.4,0,"LAYGO")
@
"SEC","^DIC",19641.4,19641.4,0,"RD")
@
"SEC","^DIC",19641.4,19641.4,0,"WR")
@
"SEC","^DIC",19641.41,19641.41,0,"AUDIT")
@
"SEC","^DIC",19641.41,19641.41,0,"DD")
@
"VER")
8.0^22.0
"^DD",19641,19641,0)
FIELD^^.03^3
"^DD",19641,19641,0,"DDA")
N
"^DD",19641,19641,0,"DT")
3140127
"^DD",19641,19641,0,"IX","B",19641,.01)

"^DD",19641,19641,0,"IX","TRACKING",19641,.02)

"^DD",19641,19641,0,"NM","DSIO PATIENT")

"^DD",19641,19641,0,"PT",19641.2,.01)

"^DD",19641,19641,0,"PT",19641.21,.02)

"^DD",19641,19641,.01,0)
PATIENT^R*P2'X^DPT(^0;1^S DIC("S")="I $P(^DPT(Y,0),U,2)=""F""" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X S:$D(X) DINUM=X
"^DD",19641,19641,.01,1,0)
^.1
"^DD",19641,19641,.01,1,1,0)
19641^B
"^DD",19641,19641,.01,1,1,1)
S ^DSIO(19641,"B",$E(X,1,30),DA)=""
"^DD",19641,19641,.01,1,1,2)
K ^DSIO(19641,"B",$E(X,1,30),DA)
"^DD",19641,19641,.01,3)

"^DD",19641,19641,.01,12)
Only female patients.
"^DD",19641,19641,.01,12.1)
S DIC("S")="I $P(^DPT(Y,0),U,2)=""F"""
"^DD",19641,19641,.01,"DT")
3131118
"^DD",19641,19641,.02,0)
TRACKING STATUS^S^0:NO;1:YES;2:FLAG;^0;2^Q
"^DD",19641,19641,.02,1,0)
^.1
"^DD",19641,19641,.02,1,1,0)
19641^TRACKING
"^DD",19641,19641,.02,1,1,1)
S ^DSIO(19641,"TRACKING",$E(X,1,30),DA)=""
"^DD",19641,19641,.02,1,1,2)
K ^DSIO(19641,"TRACKING",$E(X,1,30),DA)
"^DD",19641,19641,.02,1,1,"DT")
3131120
"^DD",19641,19641,.02,"DT")
3131202
"^DD",19641,19641,.03,0)
NEXT CONTACT DATE^D^^0;3^S %DT="E" D ^%DT S X=Y K:Y<1 X
"^DD",19641,19641,.03,"DT")
3140127
"^DD",19641.1,19641.1,0)
FIELD^^1.5^13
"^DD",19641.1,19641.1,0,"DDA")
N
"^DD",19641.1,19641.1,0,"DT")
3140127
"^DD",19641.1,19641.1,0,"IX","B",19641.1,.01)

"^DD",19641.1,19641.1,0,"NM","DSIO NON-VA ENTITIES")

"^DD",19641.1,19641.1,.01,0)
NAME^RF^^0;1^K:$L(X)>100!($L(X)<1) X
"^DD",19641.1,19641.1,.01,1,0)
^.1
"^DD",19641.1,19641.1,.01,1,1,0)
19641.1^B
"^DD",19641.1,19641.1,.01,1,1,1)
S ^DSIO(19641.1,"B",$E(X,1,30),DA)=""
"^DD",19641.1,19641.1,.01,1,1,2)
K ^DSIO(19641.1,"B",$E(X,1,30),DA)
"^DD",19641.1,19641.1,.01,3)
Answer must be 1-100 characters in length.
"^DD",19641.1,19641.1,.01,"DT")
3140127
"^DD",19641.1,19641.1,.02,0)
TYPE^RS^F:FACILITY;P:PROVIDER;^0;2^Q
"^DD",19641.1,19641.1,.02,"DT")
3140127
"^DD",19641.1,19641.1,.03,0)
INACTIVE^S^0:NO;1:YES;^0;3^Q
"^DD",19641.1,19641.1,.03,"DT")
3140127
"^DD",19641.1,19641.1,1.1,0)
STREET ADDRESS 1^F^^1;1^K:$L(X)>50!($L(X)<1) X
"^DD",19641.1,19641.1,1.1,3)
Answer must be 1-50 characters in length.
"^DD",19641.1,19641.1,1.1,"DT")
3140127
"^DD",19641.1,19641.1,1.2,0)
STREET ADDRESS 2^F^^1;2^K:$L(X)>50!($L(X)<1) X
"^DD",19641.1,19641.1,1.2,3)
Answer must be 1-50 characters in length.
"^DD",19641.1,19641.1,1.2,"DT")
3140127
"^DD",19641.1,19641.1,1.3,0)
STREET ADDRESS 3^F^^1;3^K:$L(X)>50!($L(X)<1) X
"^DD",19641.1,19641.1,1.3,3)
Answer must be 1-50 characters in length.
"^DD",19641.1,19641.1,1.3,"DT")
3140127
"^DD",19641.1,19641.1,1.4,0)
CITY^F^^1;4^K:$L(X)>20!($L(X)<1) X
"^DD",19641.1,19641.1,1.4,3)
Answer must be 1-20 characters in length.
"^DD",19641.1,19641.1,1.4,21,0)
^^3^3^3140127^
"^DD",19641.1,19641.1,1.4,21,1,0)
Enter the city in which this applicant resides [1-20 characters]. If the 
"^DD",19641.1,19641.1,1.4,21,2,0)
space provided is not sufficient please abbreviate the city to the best 
"^DD",19641.1,19641.1,1.4,21,3,0)
of your ability. 
"^DD",19641.1,19641.1,1.4,"DT")
3140127
"^DD",19641.1,19641.1,1.5,0)
STATE^*P5'^DIC(5,^1;5^S DIC("S")="I $P(^DIC(5,Y,0),U,6)=1" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",19641.1,19641.1,1.5,3)
Select from the available listing the state in which this entity resides.
"^DD",19641.1,19641.1,1.5,12)
This screen prevents selection of entires that are valid US states or possessions.
"^DD",19641.1,19641.1,1.5,12.1)
S DIC("S")="I $P(^DIC(5,Y,0),U,6)=1"
"^DD",19641.1,19641.1,1.5,21,0)
^^1^1^3140127^
"^DD",19641.1,19641.1,1.5,21,1,0)
From the available listing choose the state in which this entity resides.
"^DD",19641.1,19641.1,1.5,"DT")
3140127
"^DD",19641.1,19641.1,1.6,0)
ZIP CODE^FX^^1;6^K:X[""""!($A(X)=45) X I $D(X) K:$L(X)>5!($L(X)<5)!'(X?5N) X
"^DD",19641.1,19641.1,1.6,3)
Enter the zip code for the city in which this entity resides.
"^DD",19641.1,19641.1,1.6,21,0)
^^1^1^3140127^
"^DD",19641.1,19641.1,1.6,21,1,0)
Enter the zip code [5 numerics] for the city in which this entity resides.
"^DD",19641.1,19641.1,1.6,"DT")
3140127
"^DD",19641.1,19641.1,2.1,0)
PHONE NUMBER (HOME)^F^^2;1^K:$L(X)>20!($L(X)<4) X
"^DD",19641.1,19641.1,2.1,3)
Answer must be 4-20 characters in length.
"^DD",19641.1,19641.1,2.1,"DT")
3140127
"^DD",19641.1,19641.1,2.2,0)
PHONE NUMBER (OFFICE)^F^^2;2^K:$L(X)>20!($L(X)<4) X
"^DD",19641.1,19641.1,2.2,3)
Answer must be 4-20 characters in length.
"^DD",19641.1,19641.1,2.2,"DT")
3140127
"^DD",19641.1,19641.1,2.3,0)
PHONE NUMBER (CELL)^F^^2;3^K:$L(X)>20!($L(X)<4) X
"^DD",19641.1,19641.1,2.3,3)
Answer must be 4-20 characters in length.
"^DD",19641.1,19641.1,2.3,"DT")
3140127
"^DD",19641.1,19641.1,2.4,0)
FAX NUMBER^F^^2;4^K:$L(X)>20!($L(X)<4) X
"^DD",19641.1,19641.1,2.4,3)
Answer must be 4-20 characters in length.
"^DD",19641.1,19641.1,2.4,"DT")
3140127
"^DD",19641.2,19641.2,0)
FIELD^^1^2
"^DD",19641.2,19641.2,0,"DDA")
N
"^DD",19641.2,19641.2,0,"DT")
3140102
"^DD",19641.2,19641.2,0,"IX","B",19641.2,.01)

"^DD",19641.2,19641.2,0,"NM","DSIO TRACKING HISTORY")

"^DD",19641.2,19641.2,.01,0)
PATIENT^R*P19641X^DSIO(19641,^0;1^S DIC("S")="I $P(^DPT(Y,0),U,2)=""F""" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X S:$D(X) DINUM=X
"^DD",19641.2,19641.2,.01,1,0)
^.1
"^DD",19641.2,19641.2,.01,1,1,0)
19641.2^B
"^DD",19641.2,19641.2,.01,1,1,1)
S ^DSIO(19641.2,"B",$E(X,1,30),DA)=""
"^DD",19641.2,19641.2,.01,1,1,2)
K ^DSIO(19641.2,"B",$E(X,1,30),DA)
"^DD",19641.2,19641.2,.01,1,1,"DT")
3140102
"^DD",19641.2,19641.2,.01,3)

"^DD",19641.2,19641.2,.01,12)
Only female patients.
"^DD",19641.2,19641.2,.01,12.1)
S DIC("S")="I $P(^DPT(Y,0),U,2)=""F"""
"^DD",19641.2,19641.2,.01,"DT")
3140102
"^DD",19641.2,19641.2,1,0)
TRACKING HISTORY LOG^19641.24D^^1;0
"^DD",19641.2,19641.24,0)
TRACKING HISTORY LOG SUB-FIELD^^2^6
"^DD",19641.2,19641.24,0,"DT")
3140102
"^DD",19641.2,19641.24,0,"NM","TRACKING HISTORY LOG")

"^DD",19641.2,19641.24,0,"UP")
19641.2
"^DD",19641.2,19641.24,.01,0)
TRACKING DATE^MRDXI^^0;1^K X S X=$$NOW^XLFDT
"^DD",19641.2,19641.24,.01,1,0)
^.1^^0
"^DD",19641.2,19641.24,.01,3)
Only present date and time will be used.
"^DD",19641.2,19641.24,.01,"DT")
3140103
"^DD",19641.2,19641.24,.02,0)
ACTION^RSI^0:STOP;1:START;2:FLAG;3:REJECT;4:ACCEPT;^0;2^Q
"^DD",19641.2,19641.24,.02,"DT")
3140105
"^DD",19641.2,19641.24,.03,0)
USER^RP200'I^VA(200,^0;3^Q
"^DD",19641.2,19641.24,.03,"DT")
3140102
"^DD",19641.2,19641.24,.04,0)
SOURCE^P19641.22X^DSIO(19641.22,^0;4^S X=^DSIO(19641.22,X,0) Q
"^DD",19641.2,19641.24,.04,"DT")
3140102
"^DD",19641.2,19641.24,1,0)
REASON^19641.241P^^1;0
"^DD",19641.2,19641.24,2,0)
COMMENT^19641.242^^2;0
"^DD",19641.2,19641.241,0)
REASON SUB-FIELD^^.01^1
"^DD",19641.2,19641.241,0,"DT")
3140102
"^DD",19641.2,19641.241,0,"IX","B",19641.241,.01)

"^DD",19641.2,19641.241,0,"NM","REASON")

"^DD",19641.2,19641.241,0,"UP")
19641.24
"^DD",19641.2,19641.241,.01,0)
REASON^MP19641.23X^DSIO(19641.23,^0;1^S X=^DSIO(19641.23,X,0) Q
"^DD",19641.2,19641.241,.01,1,0)
^.1
"^DD",19641.2,19641.241,.01,1,1,0)
19641.241^B
"^DD",19641.2,19641.241,.01,1,1,1)
S ^DSIO(19641.2,DA(2),1,DA(1),1,"B",$E(X,1,30),DA)=""
"^DD",19641.2,19641.241,.01,1,1,2)
K ^DSIO(19641.2,DA(2),1,DA(1),1,"B",$E(X,1,30),DA)
"^DD",19641.2,19641.241,.01,"DT")
3140102
"^DD",19641.2,19641.242,0)
COMMENT SUB-FIELD^^.01^1
"^DD",19641.2,19641.242,0,"DT")
3140102
"^DD",19641.2,19641.242,0,"NM","COMMENT")

"^DD",19641.2,19641.242,0,"UP")
19641.24
"^DD",19641.2,19641.242,.01,0)
COMMENT^Wx^^0;1^Q
"^DD",19641.2,19641.242,.01,"DT")
3140102
"^DD",19641.4,19641.4,0)
FIELD^^1^2
"^DD",19641.4,19641.4,0,"DDA")
N
"^DD",19641.4,19641.4,0,"DT")
3140127
"^DD",19641.4,19641.4,0,"IX","B",19641.4,.01)

"^DD",19641.4,19641.4,0,"NM","DSIO TIU DISCREET CONTROL")

"^DD",19641.4,19641.4,.01,0)
DOCUMENT DEFINITION^RP8925.1'X^TIU(8925.1,^0;1^S:$D(X) DINUM=X
"^DD",19641.4,19641.4,.01,1,0)
^.1
"^DD",19641.4,19641.4,.01,1,1,0)
19641.4^B
"^DD",19641.4,19641.4,.01,1,1,1)
S ^DSIO(19641.4,"B",$E(X,1,30),DA)=""
"^DD",19641.4,19641.4,.01,1,1,2)
K ^DSIO(19641.4,"B",$E(X,1,30),DA)
"^DD",19641.4,19641.4,.01,3)

"^DD",19641.4,19641.4,.01,"DT")
3140127
"^DD",19641.4,19641.4,1,0)
DATA^19641.42A^^1;0
"^DD",19641.4,19641.42,0)
DATA SUB-FIELD^^1^2
"^DD",19641.4,19641.42,0,"DT")
3140127
"^DD",19641.4,19641.42,0,"IX","B",19641.42,.01)

"^DD",19641.4,19641.42,0,"NM","DATA")

"^DD",19641.4,19641.42,0,"UP")
19641.4
"^DD",19641.4,19641.42,.01,0)
FIELD^F^^0;1^K:$L(X)>45!($L(X)<1) X
"^DD",19641.4,19641.42,.01,1,0)
^.1
"^DD",19641.4,19641.42,.01,1,1,0)
19641.42^B
"^DD",19641.4,19641.42,.01,1,1,1)
S ^DSIO(19641.4,DA(1),1,"B",$E(X,1,30),DA)=""
"^DD",19641.4,19641.42,.01,1,1,2)
K ^DSIO(19641.4,DA(1),1,"B",$E(X,1,30),DA)
"^DD",19641.4,19641.42,.01,3)
Answer must be 1-45 characters in length.
"^DD",19641.4,19641.42,.01,"DT")
3140127
"^DD",19641.4,19641.42,1,0)
XECUTE^K^^1;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",19641.4,19641.42,1,3)
This is Standard MUMPS code where X is the data being passed in and DFN is the patient IEN.
"^DD",19641.4,19641.42,1,9)
@
"^DD",19641.4,19641.42,1,"DT")
3140127
"^DD",19641.41,19641.41,0)
FIELD^^1^2
"^DD",19641.41,19641.41,0,"DDA")
N
"^DD",19641.41,19641.41,0,"DT")
3140123
"^DD",19641.41,19641.41,0,"IX","B",19641.41,.01)

"^DD",19641.41,19641.41,0,"IX","C",19641.411,.01)

"^DD",19641.41,19641.41,0,"NM","DSIO TIU DISCREET DATA")

"^DD",19641.41,19641.41,.01,0)
PATIENT^R*P2'X^DPT(^0;1^S DIC("S")="I $P(^DPT(Y,0),U,2)=""F""" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X S:$D(X) DINUM=X
"^DD",19641.41,19641.41,.01,1,0)
^.1
"^DD",19641.41,19641.41,.01,1,1,0)
19641.41^B
"^DD",19641.41,19641.41,.01,1,1,1)
S ^DSIO(19641.41,"B",$E(X,1,30),DA)=""
"^DD",19641.41,19641.41,.01,1,1,2)
K ^DSIO(19641.41,"B",$E(X,1,30),DA)
"^DD",19641.41,19641.41,.01,3)

"^DD",19641.41,19641.41,.01,12)
Only female patients.
"^DD",19641.41,19641.41,.01,12.1)
S DIC("S")="I $P(^DPT(Y,0),U,2)=""F"""
"^DD",19641.41,19641.41,.01,"DT")
3140123
"^DD",19641.41,19641.41,1,0)
NOTE^19641.411PA^^1;0
"^DD",19641.41,19641.411,0)
NOTE SUB-FIELD^^1^2
"^DD",19641.41,19641.411,0,"DT")
3140123
"^DD",19641.41,19641.411,0,"IX","B",19641.411,.01)

"^DD",19641.41,19641.411,0,"NM","NOTE")

"^DD",19641.41,19641.411,0,"UP")
19641.41
"^DD",19641.41,19641.411,.01,0)
NOTE^P8925'X^TIU(8925,^0;1^S:$D(X) DINUM=X
"^DD",19641.41,19641.411,.01,1,0)
^.1
"^DD",19641.41,19641.411,.01,1,1,0)
19641.411^B
"^DD",19641.41,19641.411,.01,1,1,1)
S ^DSIO(19641.41,DA(1),1,"B",$E(X,1,30),DA)=""
"^DD",19641.41,19641.411,.01,1,1,2)
K ^DSIO(19641.41,DA(1),1,"B",$E(X,1,30),DA)
"^DD",19641.41,19641.411,.01,1,2,0)
19641.41^C^MUMPS
"^DD",19641.41,19641.411,.01,1,2,1)
S ^DSIO(19641.41,"C",DA,DA(1))=""
"^DD",19641.41,19641.411,.01,1,2,2)
K ^DSIO(19641.41,"C",DA(1),DA)
"^DD",19641.41,19641.411,.01,1,2,"DT")
3140124
"^DD",19641.41,19641.411,.01,12.1)
S DIC("S")="I $P(^TIU(8925,Y,0),U,2)=DA(1)"
"^DD",19641.41,19641.411,.01,"DT")
3140124
"^DD",19641.41,19641.411,1,0)
ELEMENTS^19641.4111A^^1;0
"^DD",19641.41,19641.4111,0)
ELEMENTS SUB-FIELD^^.02^2
"^DD",19641.41,19641.4111,0,"DT")
3140123
"^DD",19641.41,19641.4111,0,"IX","B",19641.4111,.01)

"^DD",19641.41,19641.4111,0,"NM","ELEMENTS")

"^DD",19641.41,19641.4111,0,"UP")
19641.411
"^DD",19641.41,19641.4111,.01,0)
FIELD^RF^^0;1^K:$L(X)>45!($L(X)<1) X
"^DD",19641.41,19641.4111,.01,1,0)
^.1
"^DD",19641.41,19641.4111,.01,1,1,0)
19641.4111^B
"^DD",19641.41,19641.4111,.01,1,1,1)
S ^DSIO(19641.41,DA(2),1,DA(1),1,"B",$E(X,1,30),DA)=""
"^DD",19641.41,19641.4111,.01,1,1,2)
K ^DSIO(19641.41,DA(2),1,DA(1),1,"B",$E(X,1,30),DA)
"^DD",19641.41,19641.4111,.01,3)
Answer must be 1-45 characters in length.
"^DD",19641.41,19641.4111,.01,"DT")
3140124
"^DD",19641.41,19641.4111,.02,0)
DATA^F^^0;2^K:$L(X)>200!($L(X)<1) X
"^DD",19641.41,19641.4111,.02,3)
Answer must be 1-200 characters in length.
"^DD",19641.41,19641.4111,.02,"DT")
3140124
"^DIC",19641,19641,0)
DSIO PATIENT^19641
"^DIC",19641,19641,0,"GL")
^DSIO(19641,
"^DIC",19641,"B","DSIO PATIENT",19641)

"^DIC",19641.1,19641.1,0)
DSIO NON-VA ENTITIES^19641.1
"^DIC",19641.1,19641.1,0,"GL")
^DSIO(19641.1,
"^DIC",19641.1,"B","DSIO NON-VA ENTITIES",19641.1)

"^DIC",19641.2,19641.2,0)
DSIO TRACKING HISTORY^19641.2
"^DIC",19641.2,19641.2,0,"GL")
^DSIO(19641.2,
"^DIC",19641.2,"B","DSIO TRACKING HISTORY",19641.2)

"^DIC",19641.4,19641.4,0)
DSIO TIU DISCREET CONTROL^19641.4
"^DIC",19641.4,19641.4,0,"GL")
^DSIO(19641.4,
"^DIC",19641.4,19641.4,"%",0)
^1.005^^
"^DIC",19641.4,"B","DSIO TIU DISCREET CONTROL",19641.4)

"^DIC",19641.41,19641.41,0)
DSIO TIU DISCREET DATA^19641.41
"^DIC",19641.41,19641.41,0,"GL")
^DSIO(19641.41,
"^DIC",19641.41,"B","DSIO TIU DISCREET DATA",19641.41)

**END**
**END**
