KIDS Distribution saved on Jun 13, 2014@10:05:19
DSIO 1.0 S13 B2
**KIDS**:DSIO 1.0^

**INSTALL NAME**
DSIO 1.0
"BLD",9691,0)
DSIO 1.0^^0^3140613^n
"BLD",9691,4,0)
^9.64PA^19641.11^1
"BLD",9691,4,19641.11,0)
19641.11
"BLD",9691,4,19641.11,222)
y^y^f^^^^n
"BLD",9691,4,"B",19641.11,19641.11)

"BLD",9691,6.3)
48
"BLD",9691,"INID")
^
"BLD",9691,"INIT")

"BLD",9691,"KRN",0)
^9.67PA^779.2^20
"BLD",9691,"KRN",.4,0)
.4
"BLD",9691,"KRN",.401,0)
.401
"BLD",9691,"KRN",.402,0)
.402
"BLD",9691,"KRN",.403,0)
.403
"BLD",9691,"KRN",.403,"NM",0)
^9.68A^^
"BLD",9691,"KRN",.5,0)
.5
"BLD",9691,"KRN",.5,"NM",0)
^9.68A^^
"BLD",9691,"KRN",.84,0)
.84
"BLD",9691,"KRN",3.6,0)
3.6
"BLD",9691,"KRN",3.8,0)
3.8
"BLD",9691,"KRN",9.2,0)
9.2
"BLD",9691,"KRN",9.8,0)
9.8
"BLD",9691,"KRN",9.8,"NM",0)
^9.68A^9^5
"BLD",9691,"KRN",9.8,"NM",1,0)
DSIO0^^0^B18369489
"BLD",9691,"KRN",9.8,"NM",2,0)
DSIO1^^0^B147716063
"BLD",9691,"KRN",9.8,"NM",3,0)
DSIO2^^0^B50837968
"BLD",9691,"KRN",9.8,"NM",4,0)
DSIO3^^0^B101240698
"BLD",9691,"KRN",9.8,"NM",9,0)
DSIO4^^0^B258263746
"BLD",9691,"KRN",9.8,"NM","B","DSIO0",1)

"BLD",9691,"KRN",9.8,"NM","B","DSIO1",2)

"BLD",9691,"KRN",9.8,"NM","B","DSIO2",3)

"BLD",9691,"KRN",9.8,"NM","B","DSIO3",4)

"BLD",9691,"KRN",9.8,"NM","B","DSIO4",9)

"BLD",9691,"KRN",19,0)
19
"BLD",9691,"KRN",19,"NM",0)
^9.68A^^0
"BLD",9691,"KRN",19.1,0)
19.1
"BLD",9691,"KRN",19.1,"NM",0)
^9.68A^^
"BLD",9691,"KRN",101,0)
101
"BLD",9691,"KRN",409.61,0)
409.61
"BLD",9691,"KRN",409.61,"NM",0)
^9.68A^^
"BLD",9691,"KRN",771,0)
771
"BLD",9691,"KRN",779.2,0)
779.2
"BLD",9691,"KRN",870,0)
870
"BLD",9691,"KRN",8989.51,0)
8989.51
"BLD",9691,"KRN",8989.51,"NM",0)
^9.68A^^0
"BLD",9691,"KRN",8989.52,0)
8989.52
"BLD",9691,"KRN",8989.52,"NM",0)
^9.68A^^
"BLD",9691,"KRN",8994,0)
8994
"BLD",9691,"KRN",8994,"NM",0)
^9.68A^2^2
"BLD",9691,"KRN",8994,"NM",1,0)
DSIO IHE PATIENT LIST^^0
"BLD",9691,"KRN",8994,"NM",2,0)
DSIO IHE SAVE^^0
"BLD",9691,"KRN",8994,"NM","B","DSIO IHE PATIENT LIST",1)

"BLD",9691,"KRN",8994,"NM","B","DSIO IHE SAVE",2)

"BLD",9691,"KRN","B",.4,.4)

"BLD",9691,"KRN","B",.401,.401)

"BLD",9691,"KRN","B",.402,.402)

"BLD",9691,"KRN","B",.403,.403)

"BLD",9691,"KRN","B",.5,.5)

"BLD",9691,"KRN","B",.84,.84)

"BLD",9691,"KRN","B",3.6,3.6)

"BLD",9691,"KRN","B",3.8,3.8)

"BLD",9691,"KRN","B",9.2,9.2)

"BLD",9691,"KRN","B",9.8,9.8)

"BLD",9691,"KRN","B",19,19)

"BLD",9691,"KRN","B",19.1,19.1)

"BLD",9691,"KRN","B",101,101)

"BLD",9691,"KRN","B",409.61,409.61)

"BLD",9691,"KRN","B",771,771)

"BLD",9691,"KRN","B",779.2,779.2)

"BLD",9691,"KRN","B",870,870)

"BLD",9691,"KRN","B",8989.51,8989.51)

"BLD",9691,"KRN","B",8989.52,8989.52)

"BLD",9691,"KRN","B",8994,8994)

"BLD",9691,"PRE")

"BLD",9691,"PRET")

"BLD",9691,"QDEF")
^^^^NO^^^^NO^^NO
"BLD",9691,"QUES",0)
^9.62^^
"BLD",9691,"REQB",0)
^9.611^^
"FIA",19641.11)
DSIO PERSON
"FIA",19641.11,0)
^DSIO(19641.11,
"FIA",19641.11,0,0)
19641.11IO
"FIA",19641.11,0,1)
y^y^f^^^^n
"FIA",19641.11,0,10)

"FIA",19641.11,0,11)

"FIA",19641.11,0,"RLRO")

"FIA",19641.11,19641.11)
0
"IX",19641.11,19641.11,"C",0)
19641.11^C^Uniqueness Index for Key 'A' of File #19641.11^R^^R^IR^I^19641.11^^^^^LS
"IX",19641.11,19641.11,"C",1)
S ^DSIO(19641.11,"C",X(1),X(2),DA)=""
"IX",19641.11,19641.11,"C",2)
K ^DSIO(19641.11,"C",X(1),X(2),DA)
"IX",19641.11,19641.11,"C",2.5)
K ^DSIO(19641.11,"C")
"IX",19641.11,19641.11,"C",11.1,0)
^.114IA^2^2
"IX",19641.11,19641.11,"C",11.1,1,0)
1^F^19641.11^.05^^1
"IX",19641.11,19641.11,"C",11.1,2,0)
2^F^19641.11^.01^^2
"KEY",19641.11,19641.11,"A",0)
19641.11^A^P^1221
"KEY",19641.11,19641.11,"A",2,0)
^.312IA^2^2
"KEY",19641.11,19641.11,"A",2,1,0)
.05^19641.11^1
"KEY",19641.11,19641.11,"A",2,2,0)
.01^19641.11^2
"KEYPTR",19641.11,19641.11,"A")
19641.11^C
"KRN",8994,3969,-1)
0^2
"KRN",8994,3969,0)
DSIO IHE SAVE^SAVE^DSIO3^1
"KRN",8994,3969,2,0)
^8994.02A^11^11
"KRN",8994,3969,2,1,0)
DFN^1^^^2
"KRN",8994,3969,2,2,0)
DIRECT^1^^^4
"KRN",8994,3969,2,3,0)
DTC^1^^^5
"KRN",8994,3969,2,4,0)
DTIE^1^^^6
"KRN",8994,3969,2,5,0)
DTYE^1^^^7
"KRN",8994,3969,2,6,0)
TITLE^1^^^8
"KRN",8994,3969,2,7,0)
FAC^1^^^9
"KRN",8994,3969,2,8,0)
REC^1^^^10
"KRN",8994,3969,2,9,0)
DOC^2^^^11
"KRN",8994,3969,2,10,0)
GUID^1^^^3
"KRN",8994,3969,2,11,0)
IEN^1^^^1
"KRN",8994,3969,2,"B","DFN",1)

"KRN",8994,3969,2,"B","DIRECT",2)

"KRN",8994,3969,2,"B","DOC",9)

"KRN",8994,3969,2,"B","DTC",3)

"KRN",8994,3969,2,"B","DTIE",4)

"KRN",8994,3969,2,"B","DTYE",5)

"KRN",8994,3969,2,"B","FAC",7)

"KRN",8994,3969,2,"B","GUID",10)

"KRN",8994,3969,2,"B","IEN",11)

"KRN",8994,3969,2,"B","REC",8)

"KRN",8994,3969,2,"B","TITLE",6)

"KRN",8994,3969,2,"PARAMSEQ",1,11)

"KRN",8994,3969,2,"PARAMSEQ",2,1)

"KRN",8994,3969,2,"PARAMSEQ",3,10)

"KRN",8994,3969,2,"PARAMSEQ",4,2)

"KRN",8994,3969,2,"PARAMSEQ",5,3)

"KRN",8994,3969,2,"PARAMSEQ",6,4)

"KRN",8994,3969,2,"PARAMSEQ",7,5)

"KRN",8994,3969,2,"PARAMSEQ",8,6)

"KRN",8994,3969,2,"PARAMSEQ",9,7)

"KRN",8994,3969,2,"PARAMSEQ",10,8)

"KRN",8994,3969,2,"PARAMSEQ",11,9)

"KRN",8994,3972,-1)
0^1
"KRN",8994,3972,0)
DSIO IHE PATIENT LIST^IHELIST^DSIO3^4^^^^1
"KRN",8994,3972,2,0)
^8994.02A^2^2
"KRN",8994,3972,2,1,0)
DFN^1^^1^1
"KRN",8994,3972,2,2,0)
SORT^1^^^2
"KRN",8994,3972,2,"B","DFN",1)

"KRN",8994,3972,2,"B","SORT",2)

"KRN",8994,3972,2,"PARAMSEQ",1,1)

"KRN",8994,3972,2,"PARAMSEQ",2,2)

"MBREQ")
0
"ORD",16,8994)
8994;16;1;;;;;;;RPCDEL^XPDIA1
"ORD",16,8994,0)
REMOTE PROCEDURE
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
5
"RTN","DSIO0")
0^1^B18369489
"RTN","DSIO0",1,0)
DSIO0 ;DSS/TFF - DSIO OCNT SUPPORT;06/28/2013 15:19
"RTN","DSIO0",2,0)
 ;;1.0;DSS,INC OPEN SOURCE;;28 Jan 2013;Build 48
"RTN","DSIO0",3,0)
 ;Copyright 1995-2014,Document Storage Systems Inc. All Rights Reserved
"RTN","DSIO0",4,0)
 ;
"RTN","DSIO0",5,0)
 ;
"RTN","DSIO0",6,0)
 ; Documented API and ICRs
"RTN","DSIO0",7,0)
 ; -----------------------
"RTN","DSIO0",8,0)
 ;
"RTN","DSIO0",9,0)
 Q
"RTN","DSIO0",10,0)
 ;
"RTN","DSIO0",11,0)
COUNT(RET) ; DSIO GET CPRS COUNTDOWN
"RTN","DSIO0",12,0)
 ;
"RTN","DSIO0",13,0)
 ; THIS IS NECESSARY BECAUSE THE OCNT NEEDS TO SHUTDOWN BEFORE CPRS DOES
"RTN","DSIO0",14,0)
 ;
"RTN","DSIO0",15,0)
 N PAR,OUT S RET=""
"RTN","DSIO0",16,0)
 F PAR="ORWOR TIMEOUT CHART","ORWOR TIMEOUT COUNTDOWN" D
"RTN","DSIO0",17,0)
 .D GET1^DSICXPR(.OUT,"~"_PAR) I +$G(OUT)>-1 S RET=RET+OUT
"RTN","DSIO0",18,0)
 Q
"RTN","DSIO0",19,0)
 ;
"RTN","DSIO0",20,0)
PARAM(RET) ; DSIO OCNT GET LOCATION
"RTN","DSIO0",21,0)
 N OUT,ERR,SYS S RET=""
"RTN","DSIO0",22,0)
 D ENVAL^XPAR(.OUT,"DSIO OCNT LOCATION",,"ERR") Q:$D(ERR)
"RTN","DSIO0",23,0)
 I $D(OUT) D
"RTN","DSIO0",24,0)
 .S SYS=+$$GET1^DIQ(8989.3,"1,",.01,"I") D
"RTN","DSIO0",25,0)
 ..I $G(OUT(SYS_";DIC(4.2,",1))'="" S RET=OUT(SYS_";DIC(4.2,",1)
"RTN","DSIO0",26,0)
 .I $G(OUT(+$G(DUZ(2))_";DIC(4,",1))'="" S RET=OUT(+$G(DUZ(2))_";DIC(4,",1)
"RTN","DSIO0",27,0)
 Q
"RTN","DSIO0",28,0)
 ;
"RTN","DSIO0",29,0)
DIALK(RET,CLASS) ; DSIO OCNT DIALOG LOOKUP
"RTN","DSIO0",30,0)
 ; DIALOG LOOKUP BY CLASSNAME
"RTN","DSIO0",31,0)
 ;
"RTN","DSIO0",32,0)
 S RET=$$FIND1^DIC(19641.49,,"X",$G(CLASS),"C")
"RTN","DSIO0",33,0)
 Q
"RTN","DSIO0",34,0)
 ;
"RTN","DSIO0",35,0)
POP(RET,IEN,CONTROL) ; DSIO OCNT POPULATE
"RTN","DSIO0",36,0)
 ;
"RTN","DSIO0",37,0)
 ; LOOK IN THE OCNT CONFIGURATION FILE FOR THE CONTROL AND RETURN
"RTN","DSIO0",38,0)
 ; THE CONFIGURATION/STARTUP VALUES
"RTN","DSIO0",39,0)
 ;
"RTN","DSIO0",40,0)
 ; FOR MULTI VALUED CONTROLS
"RTN","DSIO0",41,0)
 ; =========================
"RTN","DSIO0",42,0)
 ;   DIALOGS : 19641.49
"RTN","DSIO0",43,0)
 ;   ------------------
"RTN","DSIO0",44,0)
 ;   IEN ^ DISPLAY NAME ^ CLASS NAME
"RTN","DSIO0",45,0)
 ;   - FOR TLISTBOX CONTROLS ONLY
"RTN","DSIO0",46,0)
 ;
"RTN","DSIO0",47,0)
 ;   OTHERWISE
"RTN","DSIO0",48,0)
 ;   ---------
"RTN","DSIO0",49,0)
 ;   TEXT ^ INDEX
"RTN","DSIO0",50,0)
 ;
"RTN","DSIO0",51,0)
 ; FOR SINGLE VALUED CONTROLS
"RTN","DSIO0",52,0)
 ; ==========================
"RTN","DSIO0",53,0)
 ;   TEXT
"RTN","DSIO0",54,0)
 ;
"RTN","DSIO0",55,0)
 N TITLE,OUT,FILE,EN,ERR,ITM,I S RET(0)=""
"RTN","DSIO0",56,0)
 S CONTROL=$$UP^XLFSTR($G(CONTROL)) Q:CONTROL=""
"RTN","DSIO0",57,0)
 S TITLE=$$TITLE^DSIO3(.OUT,IEN) Q:TITLE<1
"RTN","DSIO0",58,0)
 F FILE=19641.481,19641.482 S EN=$$FIND1^DIC(FILE,","_TITLE_",","X",CONTROL) Q:EN>0
"RTN","DSIO0",59,0)
 Q:EN<1
"RTN","DSIO0",60,0)
 ;
"RTN","DSIO0",61,0)
 ; MULTI CONTROL
"RTN","DSIO0",62,0)
 I FILE=19641.481 D  Q
"RTN","DSIO0",63,0)
 .K OUT D GETS^DIQ(FILE,EN_","_TITLE_",","1*","I","OUT","ERR") Q:$D(ERR)
"RTN","DSIO0",64,0)
 .I $D(OUT) S ITM=$NA(OUT) F I=0:1 S ITM=$Q(@ITM) Q:ITM=""  D
"RTN","DSIO0",65,0)
 ..S RET(I)=@ITM_U_$$GET1^DIQ(19641.49,@ITM_",",.01)_U_$$GET1^DIQ(19641.49,@ITM_",",.03)
"RTN","DSIO0",66,0)
 .Q:$D(OUT)
"RTN","DSIO0",67,0)
 .K OUT D GETS^DIQ(FILE,EN_","_TITLE_",","2*","I","OUT","ERR") Q:$D(ERR)
"RTN","DSIO0",68,0)
 .I $D(OUT) S I=0,ITM=$NA(OUT) F  S ITM=$Q(@ITM) Q:ITM=""  D
"RTN","DSIO0",69,0)
 ..I $QS(ITM,3)=.01 S $P(RET(I),U,2)=@ITM Q
"RTN","DSIO0",70,0)
 ..S $P(RET(I),U)=@ITM,I=I+1
"RTN","DSIO0",71,0)
 ;
"RTN","DSIO0",72,0)
 ; SINGLE CONTROL
"RTN","DSIO0",73,0)
 I FILE=19641.482 D  Q
"RTN","DSIO0",74,0)
 .S RET(0)=$$GET1^DIQ(FILE,EN_","_TITLE_",",.02)
"RTN","DSIO0",75,0)
 Q
"RTN","DSIO0",76,0)
 ;
"RTN","DSIO0",77,0)
POPD(RET,IEN,CONTROL) ; DSIO OCNT DIALOG POPULATE
"RTN","DSIO0",78,0)
 ;
"RTN","DSIO0",79,0)
 ; LOOK IN THE OCNT DIALOGS FILE FOR THE CONTROL AND RETURN
"RTN","DSIO0",80,0)
 ; THE CONFIGURATION/STARTUP VALUES
"RTN","DSIO0",81,0)
 ;
"RTN","DSIO0",82,0)
 ; FOR MULTI VALUED CONTROLS
"RTN","DSIO0",83,0)
 ; =========================
"RTN","DSIO0",84,0)
 ;   TEXT ^ INDEX
"RTN","DSIO0",85,0)
 ;
"RTN","DSIO0",86,0)
 ; FOR SINGLE VALUED CONTROLS
"RTN","DSIO0",87,0)
 ; ==========================
"RTN","DSIO0",88,0)
 ;   TEXT
"RTN","DSIO0",89,0)
 ;
"RTN","DSIO0",90,0)
 N FILE,EN,ERR,ITM,I S RET(0)=""
"RTN","DSIO0",91,0)
 S CONTROL=$$UP^XLFSTR($G(CONTROL)) Q:CONTROL=""
"RTN","DSIO0",92,0)
 F FILE=19641.491,19641.492 S EN=$$FIND1^DIC(FILE,","_IEN_",","X",CONTROL) Q:EN>0
"RTN","DSIO0",93,0)
 Q:EN<1
"RTN","DSIO0",94,0)
 ;
"RTN","DSIO0",95,0)
 ; MULTI CONTROL
"RTN","DSIO0",96,0)
 I FILE=19641.491 D  Q
"RTN","DSIO0",97,0)
 .K OUT D GETS^DIQ(FILE,EN_","_IEN_",","1*","I","OUT","ERR") Q:$D(ERR)
"RTN","DSIO0",98,0)
 .I $D(OUT) S I=0,ITM=$NA(OUT) F  S ITM=$Q(@ITM) Q:ITM=""  D
"RTN","DSIO0",99,0)
 ..I $QS(ITM,3)=.01 S $P(RET(I),U,2)=@ITM Q
"RTN","DSIO0",100,0)
 ..S $P(RET(I),U)=@ITM,I=I+1
"RTN","DSIO0",101,0)
 ;
"RTN","DSIO0",102,0)
 ; SINGLE CONTROL
"RTN","DSIO0",103,0)
 I FILE=19641.492 D  Q
"RTN","DSIO0",104,0)
 .S RET(0)=$$GET1^DIQ(FILE,EN_","_IEN_",",.02)
"RTN","DSIO0",105,0)
 Q
"RTN","DSIO0",106,0)
 ;
"RTN","DSIO0",107,0)
RESTORE(RET,IEN,DIALOG) ; DSIO OCNT RESTORE
"RTN","DSIO0",108,0)
 ;
"RTN","DSIO0",109,0)
 ; RESTORE THE DISCREET VALUES OF A LAST USED OCNT
"RTN","DSIO0",110,0)
 ;
"RTN","DSIO0",111,0)
 N FLE,MIENS,OUT,ERR,I,ND,GET,GL,IENS,CK,CON,MULT,FLD,VAL S RET(0)=""
"RTN","DSIO0",112,0)
 Q:'$$FIND1^DIC(19641.41,,"A",IEN)
"RTN","DSIO0",113,0)
 I +$G(DIALOG)>0 S FLE=19641.4121,MIENS=","_DIALOG_","_IEN_","
"RTN","DSIO0",114,0)
 I +$G(DIALOG)<1 S FLE=19641.411,MIENS=","_IEN_","
"RTN","DSIO0",115,0)
 D LIST^DIC(FLE,MIENS,,"P",,,,"C",,,"OUT","ERR")
"RTN","DSIO0",116,0)
 Q:$D(ERR)
"RTN","DSIO0",117,0)
 S I=0,ND=$NA(OUT) F  S ND=$Q(@ND) Q:ND=""  D
"RTN","DSIO0",118,0)
 .Q:$QL(ND)<3
"RTN","DSIO0",119,0)
 .K GET,GL,IENS S GET=$$GET1^DIQ(FLE,$P(@ND,U)_MIENS,.01,"I")
"RTN","DSIO0",120,0)
 .S GL=$TR($P($P(GET,U,";",2),"(",2),",",""),IENS=$P(GET,";")
"RTN","DSIO0",121,0)
 .S CON=$P(@ND,U,2)
"RTN","DSIO0",122,0)
 .Q:CON=""  Q:$D(CK(CON))
"RTN","DSIO0",123,0)
 .S CK(CON)=""
"RTN","DSIO0",124,0)
 .;
"RTN","DSIO0",125,0)
 .; SINGLE
"RTN","DSIO0",126,0)
 .I GL=19641.43 D  Q
"RTN","DSIO0",127,0)
 ..S RET(I)=CON_U_$$GET1^DIQ(GL,IENS_",",1.1),I=I+1
"RTN","DSIO0",128,0)
 .;
"RTN","DSIO0",129,0)
 .K MULT
"RTN","DSIO0",130,0)
 .; MULTIPLE
"RTN","DSIO0",131,0)
 .I GL=19641.44 S FLD="1.1*" D  Q
"RTN","DSIO0",132,0)
 ..D GETS^DIQ(GL,IENS_",",FLD,,"MULT") Q:'$D(MULT)
"RTN","DSIO0",133,0)
 ..S VAL=$NA(MULT) F  S VAL=$Q(@VAL) Q:VAL=""  D
"RTN","DSIO0",134,0)
 ...I $QS(VAL,3)=.01 S RET(I)=CON_U_U_@VAL Q
"RTN","DSIO0",135,0)
 ...S $P(RET(I),U,2)=@VAL,I=I+1
"RTN","DSIO0",136,0)
 .;
"RTN","DSIO0",137,0)
 .; WORD PROCESSING
"RTN","DSIO0",138,0)
 .I GL=19641.45 S FLD="1.1" D  Q
"RTN","DSIO0",139,0)
 ..D GETS^DIQ(GL,IENS_",",FLD,,"MULT") Q:'$D(MULT)
"RTN","DSIO0",140,0)
 ..S VAL=$NA(MULT) F  S VAL=$Q(@VAL) Q:VAL=""  D
"RTN","DSIO0",141,0)
 ...Q:$QL(VAL)<4
"RTN","DSIO0",142,0)
 ...S RET(I)=CON_U_@VAL,I=I+1
"RTN","DSIO0",143,0)
 Q
"RTN","DSIO1")
0^2^B147716063
"RTN","DSIO1",1,0)
DSIO1 ;DSS/TFF - DSIO GENERAL RPCS;06/28/2013 15:19
"RTN","DSIO1",2,0)
 ;;1.0;DSS,INC OPEN SOURCE;;28 Jan 2013;Build 48
"RTN","DSIO1",3,0)
 ;Copyright 1995-2014,Document Storage Systems Inc. All Rights Reserved
"RTN","DSIO1",4,0)
 ;
"RTN","DSIO1",5,0)
 ;
"RTN","DSIO1",6,0)
 ; Documented API and ICRs
"RTN","DSIO1",7,0)
 ; -----------------------
"RTN","DSIO1",8,0)
 ;
"RTN","DSIO1",9,0)
 Q
"RTN","DSIO1",10,0)
 ;
"RTN","DSIO1",11,0)
PATIENT1(RET,KEY) ; RPC: DSIO FEMALE PATIENT FIND
"RTN","DSIO1",12,0)
 ;
"RTN","DSIO1",13,0)
 ; X-REFERENCES:
"RTN","DSIO1",14,0)
 ; -------------
"RTN","DSIO1",15,0)
 ; SSN: SSN
"RTN","DSIO1",16,0)
 ;  BS: LAST 4
"RTN","DSIO1",17,0)
 ; BS5: FIRST LETTER OF LAST NAME + LAST 4 OF SSN
"RTN","DSIO1",18,0)
 ;
"RTN","DSIO1",19,0)
 ; KEY: FULL SSN, FIRST LETTER OF LAST NAME + LAST 4 OF SSN
"RTN","DSIO1",20,0)
 ;
"RTN","DSIO1",21,0)
 ; RETURN FORMAT
"RTN","DSIO1",22,0)
 ; -------------
"RTN","DSIO1",23,0)
 ; DFN^LASTNAME,FIRSTNAME^SSN(LAST 4)^DATE OF BIRTH^VETERAN STATUS^
"RTN","DSIO1",24,0)
 ; LOCATION(WARD)^ROOM/BED^SERVICE CONNECTED^CURRENTLY TRACKING
"RTN","DSIO1",25,0)
 ;
"RTN","DSIO1",26,0)
 ; CURRENTLY TRACKING: 0:NO,1:YES,2:FLAG
"RTN","DSIO1",27,0)
 ;
"RTN","DSIO1",28,0)
 ; IF NOTHING IS FOUND: RET(0)="-1^Patient(s) not found."
"RTN","DSIO1",29,0)
 ;
"RTN","DSIO1",30,0)
 N FLD,SCR,IX,OUT,ERR S RET(0)="-1^Patient not found." Q:$G(KEY)=""
"RTN","DSIO1",31,0)
 S FLD="@;.01;1901;.1;.101;.301",SCR="I $P(^(0),U,2)=""F"""
"RTN","DSIO1",32,0)
 ; DFN^NAME^VETERAN (Y/N)?^WARD LOCATION^ROOM-BED^SERVICE CONNECTED?
"RTN","DSIO1",33,0)
 ;
"RTN","DSIO1",34,0)
 ; LIST BY FULL SSN
"RTN","DSIO1",35,0)
 I KEY?9N!(KEY?3N1"-"2N1"-"4N) S KEY=$TR(KEY,"-",""),IX="SSN"
"RTN","DSIO1",36,0)
 ;
"RTN","DSIO1",37,0)
 ; LIST BY LAST 4
"RTN","DSIO1",38,0)
 I KEY?4N S IX="BS"
"RTN","DSIO1",39,0)
 ;
"RTN","DSIO1",40,0)
 ; LIST BY FIRST LETTER OF LAST NAME + LAST 4 OF SSN
"RTN","DSIO1",41,0)
 I KEY?1A4N S IX="BS5"
"RTN","DSIO1",42,0)
 ;
"RTN","DSIO1",43,0)
 D:$D(IX) LIST^DIC(2,,FLD,"P",,,KEY,IX,SCR,,"OUT","ERR") Q:$D(ERR)
"RTN","DSIO1",44,0)
 D:$D(OUT) BUILD1
"RTN","DSIO1",45,0)
 ;
"RTN","DSIO1",46,0)
 Q
"RTN","DSIO1",47,0)
 ;
"RTN","DSIO1",48,0)
BUILD1 ; FORMAT THE RETURN ARRAY
"RTN","DSIO1",49,0)
 N I,Z,DFN,SSN S I=0,Z=$NA(OUT) F  S Z=$Q(@Z) Q:Z=""  D
"RTN","DSIO1",50,0)
 .Q:$QS(Z,2)<1
"RTN","DSIO1",51,0)
 .K DFN,SSN S DFN=$P(@Z,U)
"RTN","DSIO1",52,0)
 .S SSN=$$SSN^DPTLK1(DFN) I SSN?.N S SSN=$E(SSN,6,9)
"RTN","DSIO1",53,0)
 .S RET(I)=DFN_U_$$NAME^DSIO2($P(@Z,U,2))_U_SSN_U_$$FMTE^DSIO2($$DOB^DPTLK1(DFN,0))_U
"RTN","DSIO1",54,0)
 .S RET(I)=RET(I)_$P(@Z,U,3,99)_U_+$$GET1^DIQ(19641,DFN,.02,"I"),I=I+1
"RTN","DSIO1",55,0)
 Q
"RTN","DSIO1",56,0)
 ;
"RTN","DSIO1",57,0)
PATIENT2(RET,KEY,SORT) ; RPC: DSIO FEMALE PATIENT SEARCH
"RTN","DSIO1",58,0)
 ;
"RTN","DSIO1",59,0)
 ;  KEY: PARTIAL NAME - TO - FULL NAME
"RTN","DSIO1",60,0)
 ; SORT: PAGE#,CT
"RTN","DSIO1",61,0)
 ;
"RTN","DSIO1",62,0)
 ; FEMALE PATIENTS WITH PAGING (SEE PATIENT FOR MORE DETAILS)
"RTN","DSIO1",63,0)
 ;
"RTN","DSIO1",64,0)
 ; ALONG WITH THE EXISTING OUTPUT THE FOLLOWING IS INCLUDED:
"RTN","DSIO1",65,0)
 ; SSN^CITY^STATE^ZIP
"RTN","DSIO1",66,0)
 ;
"RTN","DSIO1",67,0)
 N OUT,FM,SCR,ERR,TO S KEY=$G(KEY)
"RTN","DSIO1",68,0)
 S OUT=$NA(^TMP($J,"DSIO PATALL")),FM=$NA(^TMP($J,"DSIO PATALL1"))
"RTN","DSIO1",69,0)
 S RET=$NA(^TMP($J,"DSIO PATIENT")) K @OUT,@FM,@RET
"RTN","DSIO1",70,0)
 S @RET@(0)="-1^Patient(s) not found."
"RTN","DSIO1",71,0)
 ;
"RTN","DSIO1",72,0)
 ; ALL PATIENTS
"RTN","DSIO1",73,0)
 I $G(KEY)="" D  Q:$D(ERR)  D BUILD2 Q
"RTN","DSIO1",74,0)
 .S SCR="S @OUT@($P(^DPT(Y,0),U),0)=Y,TO=$G(TO)+1"
"RTN","DSIO1",75,0)
 .D LIST^DIC(2,,"@","P",,,"F","ASX",SCR,,FM,"ERR") K @FM
"RTN","DSIO1",76,0)
 ;
"RTN","DSIO1",77,0)
 ; LIST BY LAST NAME, PARTIAL LAST NAME, OR FULL NAME
"RTN","DSIO1",78,0)
 S SCR="S:$E($P(^DPT(Y,0),U),1,$L(KEY))=KEY @OUT@($P(^DPT(Y,0),U),0)=Y,TO=$G(TO)+1"
"RTN","DSIO1",79,0)
 D LIST^DIC(2,,"@","P",,,"F","ASX",SCR,,FM,"ERR") K @FM
"RTN","DSIO1",80,0)
 D:'$D(ERR) BUILD2
"RTN","DSIO1",81,0)
 ;
"RTN","DSIO1",82,0)
 Q
"RTN","DSIO1",83,0)
 ;
"RTN","DSIO1",84,0)
BUILD2 ; FORMAT THE RETURN GLOBAL
"RTN","DSIO1",85,0)
 N CT,DFN,SSN,FD,R,ERR
"RTN","DSIO1",86,0)
 D SORT^DSIO2($NA(@OUT),RET,$G(SORT),$G(TO))
"RTN","DSIO1",87,0)
 S CT="" F  S CT=$O(@RET@(CT)) Q:CT=""  D
"RTN","DSIO1",88,0)
 .Q:CT=0
"RTN","DSIO1",89,0)
 .K DFN,SSN,FD,R S DFN=@RET@(CT)
"RTN","DSIO1",90,0)
 .S SSN=$$SSN^DPTLK1(DFN) I SSN?.N S SSN=$E(SSN,6,9)
"RTN","DSIO1",91,0)
 .F FD=.01,1901,.1,.101,.301,.09,.114,.115,.116 S R=$G(R)_$$GET1^DIQ(2,DFN,FD,,,"ERR")_U
"RTN","DSIO1",92,0)
 .S @RET@(CT)=DFN_U_$$NAME^DSIO2($P(R,U))_U_SSN_U_$$FMTE^DSIO2($$DOB^DPTLK1(DFN,0))_U
"RTN","DSIO1",93,0)
 .S @RET@(CT)=@RET@(CT)_$P(R,U,2,5)_U_+$$GET1^DIQ(19641,DFN,.02,"I",,"ERR")_U_$P(R,U,6,9)
"RTN","DSIO1",94,0)
 Q
"RTN","DSIO1",95,0)
 ;
"RTN","DSIO1",96,0)
INFO(RET,DFN,LIST) ; RPC: DSIO PATIENT INFORMATION
"RTN","DSIO1",97,0)
 ; GET PATIENT INFORMATION BY FIELD NAME OR NUMBER
"RTN","DSIO1",98,0)
 ; RETURN: LIST
"RTN","DSIO1",99,0)
 ;
"RTN","DSIO1",100,0)
 S RET(0)=-1 Q:'$D(LIST)  K RET
"RTN","DSIO1",101,0)
 I '$$CHECK^DSIO2($G(DFN)) S RET(0)="-1^Patient entry not found." Q
"RTN","DSIO1",102,0)
 N FLD,NM,FLG S FLD=$NA(LIST) F  S FLD=$Q(@FLD) Q:FLD=""  K NM D
"RTN","DSIO1",103,0)
 .I @FLD<.0000001 S NM=$$FLDNUM^DILFD(19641,$$UP^XLFSTR(@FLD))
"RTN","DSIO1",104,0)
 .E  I $$VFIELD^DILFD(19641,@FLD) S NM=@FLD
"RTN","DSIO1",105,0)
 .I $D(NM)&(+$G(NM)'=0) D
"RTN","DSIO1",106,0)
 ..I $P(^DD(19641,NM,0),U,2)["D" D
"RTN","DSIO1",107,0)
 ...S LIST($QS(FLD,1))=@FLD_U_$$FMTE^XLFDT($$GET1^DIQ(19641,DFN_",",NM,"I"),"5Z")
"RTN","DSIO1",108,0)
 ..E  S LIST($QS(FLD,1))=@FLD_U_$$GET1^DIQ(19641,DFN_",",NM)
"RTN","DSIO1",109,0)
 M RET=LIST
"RTN","DSIO1",110,0)
 Q
"RTN","DSIO1",111,0)
 ;
"RTN","DSIO1",112,0)
TRCLIST(RET,TYP,SORT) ; RPC: DSIO GET TRACKING
"RTN","DSIO1",113,0)
 ;
"RTN","DSIO1",114,0)
 ; RETURN MATERNITY TRACKING LISTS
"RTN","DSIO1",115,0)
 ;
"RTN","DSIO1",116,0)
 ; INPUT PARAMETERS:
"RTN","DSIO1",117,0)
 ; -----------------
"RTN","DSIO1",118,0)
 ; ALL: ALL LOGS
"RTN","DSIO1",119,0)
 ;   T: ALL CURRENTLY TRACKED PATIENTS
"RTN","DSIO1",120,0)
 ;   F: ALL CURRENTLY FLAGGED PATIENTS
"RTN","DSIO1",121,0)
 ; DFN: ALL LOGS FOR A PATIENT
"RTN","DSIO1",122,0)
 ;  F#: ALL CURRENTLY FLAGGED LOGS FOR A PATIENT
"RTN","DSIO1",123,0)
 ;
"RTN","DSIO1",124,0)
 ; SORT: PAGE#,CT
"RTN","DSIO1",125,0)
 ;
"RTN","DSIO1",126,0)
 N LOG,FLD,ERR,DFN,NM S TYP=$G(TYP)
"RTN","DSIO1",127,0)
 S LOG=$NA(^TMP($J,"DSIO TLOGS")),RET=$NA(^TMP($J,"DSIO TRACK"))
"RTN","DSIO1",128,0)
 K @LOG,@RET S @RET@(0)="-1^No entries found.",FLD="@;.01I;.02IE;.04E;.03I"
"RTN","DSIO1",129,0)
 ;
"RTN","DSIO1",130,0)
 ; GET ALL LOGS
"RTN","DSIO1",131,0)
 ; L^IEN^TRACKING DT(E)^DFN^LASTNAME,FIRSTNAME^USER^ACTION^SOURCE^REASON|REASON
"RTN","DSIO1",132,0)
 ; C^IEN^COMMENT
"RTN","DSIO1",133,0)
 I TYP="ALL"!(TYP="") D  S NM=1
"RTN","DSIO1",134,0)
 .D LIST^DIC(19641.2,,,"IP",,,,"C",,,LOG,"ERR")
"RTN","DSIO1",135,0)
 ;
"RTN","DSIO1",136,0)
 ; GET ALL CURRENTLY TRACKED PATIENTS
"RTN","DSIO1",137,0)
 ; P^DFN^LASTNAME,FIRSTNAME^LAST 4^DOB^PHONE^EDD
"RTN","DSIO1",138,0)
 E  I TYP="T" D  S NM=4
"RTN","DSIO1",139,0)
 .D LIST^DIC(19641.2,,,"P",,,,"TRACKING",,,LOG,"ERR")
"RTN","DSIO1",140,0)
 ;
"RTN","DSIO1",141,0)
 ; GET ALL CURRENTLY FLAGGED PATIENTS
"RTN","DSIO1",142,0)
 ; P^DFN^LASTNAME,FIRSTNAME^LAST 4^DOB^PHONE^REASON
"RTN","DSIO1",143,0)
 E  I TYP="F" D  S NM=5
"RTN","DSIO1",144,0)
 .D LIST^DIC(19641.2,,,"P",,,,"FLAGGED",,,LOG,"ERR")
"RTN","DSIO1",145,0)
 ;
"RTN","DSIO1",146,0)
 ; GET ALL LOGS FOR A PATIENT
"RTN","DSIO1",147,0)
 ; L^IEN^TRACKING DT(E)^DFN^LASTNAME,FIRSTNAME^USER^ACTION^SOURCE^REASON|REASON
"RTN","DSIO1",148,0)
 ; C^IEN^COMMENT
"RTN","DSIO1",149,0)
 E  I TYP?.N&(TYP'="") D  S NM=2
"RTN","DSIO1",150,0)
 .S DFN=TYP
"RTN","DSIO1",151,0)
 .D LIST^DIC(19641.24,","_DFN_",",,"IP",,,,"B",,,LOG,"ERR")
"RTN","DSIO1",152,0)
 ;
"RTN","DSIO1",153,0)
 ; GET CURRENTLY FLAGGED ENTRIES FOR A PATIENT
"RTN","DSIO1",154,0)
 ; L^IEN^TRACKING DT(E)^DFN^LASTNAME,FIRSTNAME^USER^ACTION^SOURCE^REASON|REASON
"RTN","DSIO1",155,0)
 ; C^IEN^COMMENT
"RTN","DSIO1",156,0)
 E  I TYP?1"F"1.N D  S NM=3
"RTN","DSIO1",157,0)
 .S DFN=$E(TYP,2,$L(TYP))
"RTN","DSIO1",158,0)
 .D LIST^DIC(19641.24,","_DFN_",",,"IP",,,,"FLAG",,,LOG,"ERR")
"RTN","DSIO1",159,0)
 ;
"RTN","DSIO1",160,0)
 Q:$D(ERR)
"RTN","DSIO1",161,0)
 D FORMAT(NM) K @LOG
"RTN","DSIO1",162,0)
 ;
"RTN","DSIO1",163,0)
 Q
"RTN","DSIO1",164,0)
 ;
"RTN","DSIO1",165,0)
FORMAT(TYP) ; FORMAT AND PAGE THE RETURN OF TRCLIST
"RTN","DSIO1",166,0)
 ;
"RTN","DSIO1",167,0)
 ; IF RESULTS THEN THE ZERO NODE = TOTAL NUMBER OF RESULTS
"RTN","DSIO1",168,0)
 ;
"RTN","DSIO1",169,0)
 ; ALL(1), DFN(2), F#(3): 
"RTN","DSIO1",170,0)
 ;   L^IEN^TRACKING DT(E)^DFN^LASTNAME,FIRSTNAME^USER^ACTION^SOURCE^REASON|REASON
"RTN","DSIO1",171,0)
 ;   C^IEN^COMMENT
"RTN","DSIO1",172,0)
 ;
"RTN","DSIO1",173,0)
 ;   T(4): P^DFN^LASTNAME,FIRSTNAME^LAST 4^DOB^PHONE^EDD
"RTN","DSIO1",174,0)
 ;
"RTN","DSIO1",175,0)
 ;   F(5): P^DFN^LASTNAME,FIRSTNAME^LAST 4^DOB^PHONE^REASON
"RTN","DSIO1",176,0)
 ;
"RTN","DSIO1",177,0)
 N STRT,T,CT,Z,L,IENS,SSN,FD,AC,RES,FLG,R,COM,C
"RTN","DSIO1",178,0)
 S CT=1,(STRT,T)=0 I $G(SORT)?.N1",".N D
"RTN","DSIO1",179,0)
 .S STRT=$$FN^DSIO2($P(SORT,","),$P(SORT,",",2))
"RTN","DSIO1",180,0)
 S Z=STRT F  S Z=$O(@LOG@("DILIST",Z)) Q:'Z!(T=$P($G(SORT),",",2))  D
"RTN","DSIO1",181,0)
 .K L S L=@LOG@("DILIST",Z,0)
"RTN","DSIO1",182,0)
 .;
"RTN","DSIO1",183,0)
 .I TYP<4 D
"RTN","DSIO1",184,0)
 ..I TYP=1 K DFN S DFN=$P(L,U)
"RTN","DSIO1",185,0)
 ..K IENS S IENS=$P(L,U,3) S:IENS'["," IENS=IENS_","_DFN
"RTN","DSIO1",186,0)
 ..I $P(IENS,",")="" S $P(IENS,",")=$P(L,U)
"RTN","DSIO1",187,0)
 ..S @RET@(CT)="L^"_IENS_U_$$FMTE^XLFDT($P(L,U,2),"5Z")_U_DFN_U
"RTN","DSIO1",188,0)
 ..S @RET@(CT)=@RET@(CT)_$$NAME^DSIO2($$GET1^DIQ(2,DFN,.01))_U
"RTN","DSIO1",189,0)
 ..S AC="E" F FD=.03,.02,.04 D
"RTN","DSIO1",190,0)
 ...I FD=.03 S @RET@(CT)=@RET@(CT)_$$NAME^DSIO2($$GET1^DIQ(19641.24,IENS,FD,AC))_U,AC="I" Q
"RTN","DSIO1",191,0)
 ...S @RET@(CT)=@RET@(CT)_$$TITLE^XLFSTR($$GET1^DIQ(19641.24,IENS,FD,AC))_U
"RTN","DSIO1",192,0)
 ..;INCLUDE RESONS AND COMMENTS
"RTN","DSIO1",193,0)
 ..D RES,COM
"RTN","DSIO1",194,0)
 .;
"RTN","DSIO1",195,0)
 .I TYP>3 D
"RTN","DSIO1",196,0)
 ..K DFN S DFN=$P(L,U)
"RTN","DSIO1",197,0)
 ..K IENS S IENS=$P(L,U,4) S:IENS'["," IENS=IENS_","_DFN
"RTN","DSIO1",198,0)
 ..S SSN=$$SSN^DPTLK1(DFN) I SSN?.N S SSN=$E(SSN,6,9)
"RTN","DSIO1",199,0)
 ..S @RET@(CT)="P^"_DFN_U_$$NAME^DSIO2($$GET1^DIQ(2,DFN,.01))_U
"RTN","DSIO1",200,0)
 ..S @RET@(CT)=@RET@(CT)_SSN_U_$$FMTE^DSIO2($$DOB^DPTLK1(DFN,0))_U_$$GET1^DIQ(2,DFN,.131)_U
"RTN","DSIO1",201,0)
 .I TYP=4 S @RET@(CT)=@RET@(CT)_$$FMTE^XLFDT($$GET1^DIQ(790,DFN_",",.14,"I"),"5DZ")
"RTN","DSIO1",202,0)
 .I TYP=5 D RES
"RTN","DSIO1",203,0)
 .;
"RTN","DSIO1",204,0)
 .S T=T+1,CT=CT+1
"RTN","DSIO1",205,0)
 ;
"RTN","DSIO1",206,0)
 I T>0 S @RET@(0)=$O(@LOG@("DILIST",""),-1)
"RTN","DSIO1",207,0)
 Q
"RTN","DSIO1",208,0)
 ;
"RTN","DSIO1",209,0)
RES ; INCLUDE REASONS
"RTN","DSIO1",210,0)
 K RES D GETS^DIQ(19641.24,IENS,"1*","I","RES")
"RTN","DSIO1",211,0)
 K FLG I $D(RES) S R=$NA(RES) F  S R=$Q(@R) Q:R=""  D
"RTN","DSIO1",212,0)
 .I '$D(FLG) S $E(@RET@(CT),$L(@RET@(CT))+1)=$$TITLE^XLFSTR(@R) S FLG=1
"RTN","DSIO1",213,0)
 .E  S $E(@RET@(CT),$L(@RET@(CT))+1)="|"_$$TITLE^XLFSTR(@R)
"RTN","DSIO1",214,0)
 Q
"RTN","DSIO1",215,0)
 ;
"RTN","DSIO1",216,0)
COM ; INCLUDE COMMENTS
"RTN","DSIO1",217,0)
 K COM D GETS^DIQ(19641.24,IENS,2,,"COM")
"RTN","DSIO1",218,0)
 I $D(COM) S C=$NA(COM) F  S C=$Q(@C) Q:C=""  D
"RTN","DSIO1",219,0)
 .Q:$QL(C)<4
"RTN","DSIO1",220,0)
 .S CT=CT+1,@RET@(CT)="C^"_IENS_U_@C
"RTN","DSIO1",221,0)
 Q
"RTN","DSIO1",222,0)
 ;
"RTN","DSIO1",223,0)
REC(RET,DFN,ACT,RES,COM,SOR) ; RPC: DSIO CREATE TRACKING LOG
"RTN","DSIO1",224,0)
 ;
"RTN","DSIO1",225,0)
 ; CREATE A TRACKING LOG AND POSSIBLY CHANGE
"RTN","DSIO1",226,0)
 ; THE PATIENT'S TRACKING STATUS
"RTN","DSIO1",227,0)
 ;
"RTN","DSIO1",228,0)
 ; MCC DASHBOARD PURPOSE -  TO CHANGE THE TRACKING STATUS OF A PATIENT
"RTN","DSIO1",229,0)
 ;
"RTN","DSIO1",230,0)
 ; INPUT PARAMETER:
"RTN","DSIO1",231,0)
 ;  DFN : PATIENT NUMBER
"RTN","DSIO1",232,0)
 ;  ACT : ACTION (0:STOP,1:START,2:FLAG,3:REJECT,4:ACCEPT)
"RTN","DSIO1",233,0)
 ;  RES : REASON  - #^#^#
"RTN","DSIO1",234,0)
 ;  COM : COMMENT - ARRAY
"RTN","DSIO1",235,0)
 ;  SOR : SOURCE  - DEFAULT IS DASHBOARD
"RTN","DSIO1",236,0)
 ;
"RTN","DSIO1",237,0)
 ; RETURN:
"RTN","DSIO1",238,0)
 ; -1/1^COMMENT
"RTN","DSIO1",239,0)
 ;
"RTN","DSIO1",240,0)
 Q:$G(DFN)=""!($G(ACT)="")
"RTN","DSIO1",241,0)
 N CT,ACT1,IEN,DB,IPT,I,%X,%Y
"RTN","DSIO1",242,0)
 S RES=$G(RES),COM=$G(COM),RET="-1^M Error - Check the trap."
"RTN","DSIO1",243,0)
 ; 
"RTN","DSIO1",244,0)
 I '$$CHECK^DSIO2($G(DFN)) S RET="-1^Patient entry not found." Q
"RTN","DSIO1",245,0)
 S CT=$$GET1^DIQ(19641,DFN_",",.02,"I")
"RTN","DSIO1",246,0)
 ;
"RTN","DSIO1",247,0)
 S (ACT,ACT1)=$$STAT(ACT) I ACT="" D  Q
"RTN","DSIO1",248,0)
 .S RET="-1^EVENT TYPE could not be identified."
"RTN","DSIO1",249,0)
 I ACT<2&(CT=ACT) S RET="-1^Tracking status already "_$$STAT(ACT,1)_"." Q
"RTN","DSIO1",250,0)
 D
"RTN","DSIO1",251,0)
 .I ACT>2 S ACT=$S(ACT=3:0,ACT=4:1,1:"") Q:ACT=""
"RTN","DSIO1",252,0)
 .I CT'=""&(ACT=CT!(ACT=2&(CT'=0))) D TRAK^DSIO2(DFN,ACT1) Q
"RTN","DSIO1",253,0)
 .S IPT(19641,DFN_",",.02)=ACT D FILE^DIE("I","IPT") K IPT I ACT1>2 D
"RTN","DSIO1",254,0)
 ..S IEN=+$G(^TMP($J,"DSIO TRAK")) K ^TMP($J,"DSIO TRAK")
"RTN","DSIO1",255,0)
 ..S IPT(19641.24,IEN_","_DFN_",",.02)=ACT1 D FILE^DIE("I","IPT") K IPT
"RTN","DSIO1",256,0)
 ;
"RTN","DSIO1",257,0)
 I '$D(IEN) S IEN=+$G(^TMP($J,"DSIO TRAK")) K ^TMP($J,"DSIO TRAK")
"RTN","DSIO1",258,0)
 I IEN<1 S RET="-1^Tracking log not created." Q
"RTN","DSIO1",259,0)
 ;
"RTN","DSIO1",260,0)
 ;"DASHBOARD" AND "FILEMAN" ARE SYSTEM ENTRIES (SOURCE)
"RTN","DSIO1",261,0)
 S SOR=$$UP^XLFSTR($G(SOR,"DASHBOARD"))
"RTN","DSIO1",262,0)
 S IPT(19641.22,"?+1,",.01)=SOR,IPT(19641.22,"?+1,",.02)=1
"RTN","DSIO1",263,0)
 D UPDATE^DIE(,"IPT","DB") K IPT
"RTN","DSIO1",264,0)
 I DB(1)<1 S RET="-1^Unable to define source." Q
"RTN","DSIO1",265,0)
 S IPT(19641.24,IEN_","_DFN_",",.04)=SOR D FILE^DIE("I","IPT","ERR") K IPT
"RTN","DSIO1",266,0)
 ;"DASHBOARD" DOES NOT WANT MULTIPLE MESSAGES
"RTN","DSIO1",267,0)
 ; SO THIS WILL BE OVERWRITTEN BY SUCCESS
"RTN","DSIO1",268,0)
 I $D(ERR) S RET="1^Unable to set the source as """_SOR_"""."
"RTN","DSIO1",269,0)
 ;
"RTN","DSIO1",270,0)
 ;REASON AND COMMENT
"RTN","DSIO1",271,0)
 F I=1:1:$L(RES,U) D
"RTN","DSIO1",272,0)
 .S IPT(19641.23,"?+1,",.01)=$P(RES,U,I) D UPDATE^DIE(,"IPT") K IPT
"RTN","DSIO1",273,0)
 .S IPT(19641.241,"?+1,"_IEN_","_DFN_",",.01)=$P(RES,U,I) D UPDATE^DIE(,"IPT") K IPT
"RTN","DSIO1",274,0)
 ;
"RTN","DSIO1",275,0)
 ; WE CAN'T PROCESS THE ZERO NODE WITH WP^DIE SO INSTEAD OF MERGING
"RTN","DSIO1",276,0)
 ; WE CAN USE %XY^%RCR TO CONCATENATE A SUBSCRIPT
"RTN","DSIO1",277,0)
 ;
"RTN","DSIO1",278,0)
 K ^TMP($J,"DSIO REC")
"RTN","DSIO1",279,0)
 S %X="COM(",%Y="^TMP($J,""DSIO REC"",1" D %XY^%RCR
"RTN","DSIO1",280,0)
 D WP^DIE(19641.24,IEN_","_DFN_",",2,"K","^TMP($J,""DSIO REC"")")
"RTN","DSIO1",281,0)
 K ^TMP($J,"DSIO REC")
"RTN","DSIO1",282,0)
 S RET="1^SUCCESS"
"RTN","DSIO1",283,0)
 Q
"RTN","DSIO1",284,0)
 ;
"RTN","DSIO1",285,0)
STAT(ACT,FL) ; WRITE THE STAT IF FL = DO THE INVERSE
"RTN","DSIO1",286,0)
 I ACT'?1N S ACT=$$UP^XLFSTR(ACT) D
"RTN","DSIO1",287,0)
 .S ACT=$S(ACT["STO":0,ACT["STA":1,ACT["FL":2,ACT["RE":3,ACT["AC":4,1:"")
"RTN","DSIO1",288,0)
 I +$G(FL)&(ACT?1N) D
"RTN","DSIO1",289,0)
 .S ACT=$S(ACT=0:"STOPPED",ACT=1:"STARTED",1:ACT)
"RTN","DSIO1",290,0)
 Q ACT
"RTN","DSIO1",291,0)
 ;
"RTN","DSIO1",292,0)
SELECT(RET,TYP) ; RPC: DSIO SELECT LIST
"RTN","DSIO1",293,0)
 ;
"RTN","DSIO1",294,0)
 ; RETURN DROP DOWN LIST
"RTN","DSIO1",295,0)
 ;
"RTN","DSIO1",296,0)
 ; INPUT PARAMETER:
"RTN","DSIO1",297,0)
 ;  TYP : 'S' FOR FILE 19641.22
"RTN","DSIO1",298,0)
 ;  TYP : 'R' FOR FILE 19641.23
"RTN","DSIO1",299,0)
 ;
"RTN","DSIO1",300,0)
 ;  LETTER^ENTRY^A : ADD AN ENTRY TO ONE OF THE ABOVE FILES
"RTN","DSIO1",301,0)
 ;  LETTER^ENTRY^D : DELETE AN ENTRY FROM ONE OF THE ABOVE FILES
"RTN","DSIO1",302,0)
 ;
"RTN","DSIO1",303,0)
 ;  RETURN LIST FOR SUCCESS OR RET(0)="-1^MESSAGE" FOR FAILURE
"RTN","DSIO1",304,0)
 ;
"RTN","DSIO1",305,0)
 N FILE,FLD,DIK,DA,X,Y,IPT,OUT,ERR,I,Z
"RTN","DSIO1",306,0)
 S TYP=$G(TYP) S RET(0)="-1^Bad input parameter value."
"RTN","DSIO1",307,0)
 S FILE=$S($P(TYP,U)="S":19641.22,$P(TYP,U)="R":19641.23,1:"") Q:FILE=""
"RTN","DSIO1",308,0)
 S FLD=$S(FILE=19641.22:"@;.01;.02I",FILE=19641.23:"@;.01")
"RTN","DSIO1",309,0)
 I TYP["^"&($P(TYP,U,3)="D") D
"RTN","DSIO1",310,0)
 .S DA=$$FIND1^DIC(FILE,,"X",$$UP^XLFSTR($P(TYP,U,2)))
"RTN","DSIO1",311,0)
 .S DIK="^DSIO("_FILE_"," D ^DIK
"RTN","DSIO1",312,0)
 I TYP["^"&($P(TYP,U,3)="A") D
"RTN","DSIO1",313,0)
 .S IPT(FILE,"?+1,",.01)=$$UP^XLFSTR($P(TYP,U,2)) D UPDATE^DIE(,"IPT") K IPT
"RTN","DSIO1",314,0)
 D LIST^DIC(FILE,,FLD,"P",,,,,"I '+$P(^(0),U,2)=1",,"OUT","ERR") D
"RTN","DSIO1",315,0)
 .I $D(ERR) S RET(0)="-1^There was an error in generating the list." Q
"RTN","DSIO1",316,0)
 .S I=0,Z=$NA(OUT) F  S Z=$Q(@Z) Q:Z=""  D
"RTN","DSIO1",317,0)
 ..Q:$QS(Z,2)<1
"RTN","DSIO1",318,0)
 ..S RET(I)=$$TITLE^XLFSTR($P(@Z,U,2)),I=I+1
"RTN","DSIO1",319,0)
 .I +RET(0)=-1 S RET(0)="-1^No entries."
"RTN","DSIO1",320,0)
 Q
"RTN","DSIO1",321,0)
 ;
"RTN","DSIO1",322,0)
GET(RET,DFN,ITEM) ; RPC: DSIO GET SINGLE VALUE
"RTN","DSIO1",323,0)
 ;
"RTN","DSIO1",324,0)
 ; RETURN = LITERAL
"RTN","DSIO1",325,0)
 ;
"RTN","DSIO1",326,0)
 S DFN=+$G(DFN) I DFN<1 S RET="-1^Invalid DFN" Q
"RTN","DSIO1",327,0)
 S ITEM=$$UP^XLFSTR($G(ITEM)) S RET=-1
"RTN","DSIO1",328,0)
 ;
"RTN","DSIO1",329,0)
 ; INSTITUTION
"RTN","DSIO1",330,0)
 I ITEM="INSTITUTION" D  Q
"RTN","DSIO1",331,0)
 .;IEN^NAME^LATESTDATE^DOMAIN^STREET1^STREET2^CITY^STATE^ZIP^HOMESITE
"RTN","DSIO1",332,0)
 .N PAT D FAC^DSIO3V2 S RET=PAT("facility",$O(PAT("facility","")))
"RTN","DSIO1",333,0)
 Q
"RTN","DSIO1",334,0)
 ;
"RTN","DSIO1",335,0)
SENT(RET,IEN,NAME,TYP,ACT,PCON,ADDR,PHONE) ; RPC: DSIO SAVE NON VA ENTITY
"RTN","DSIO1",336,0)
 ;
"RTN","DSIO1",337,0)
 ;  ADDR LABELS: 1,2,3,CITY,STATE,ZIP
"RTN","DSIO1",338,0)
 ; PHONE LABELS: H,MC,WP,FAX
"RTN","DSIO1",339,0)
 ;
"RTN","DSIO1",340,0)
 ; RETURN:
"RTN","DSIO1",341,0)
 ; IEN OR -1^MESSAGE
"RTN","DSIO1",342,0)
 ;
"RTN","DSIO1",343,0)
 D ABSURD^DSIO2("NAME,TYP,ACT,PCON,ADDR,PHONE") ;W ABSURD
"RTN","DSIO1",344,0)
 N FLE,FLG,IPT,I,LOC,VAL,ERR
"RTN","DSIO1",345,0)
 S IEN=+$G(IEN),NAME=$$UP^XLFSTR($G(NAME)),FLE=19641.1,RET=-1
"RTN","DSIO1",346,0)
 I +$G(IEN)>0 S FLG=IEN_","
"RTN","DSIO1",347,0)
 E  S FLG="?+1," I NAME="" S RET="-1^New entries require a name." Q
"RTN","DSIO1",348,0)
 S:$G(NAME)'="" IPT(FLE,FLG,.01)=NAME
"RTN","DSIO1",349,0)
 S:$G(TYP)'="" IPT(FLE,FLG,.02)=TYP
"RTN","DSIO1",350,0)
 S:$G(ACT)'="" IPT(FLE,FLG,.03)=ACT
"RTN","DSIO1",351,0)
 S:$G(PCON)'="" IPT(FLE,FLG,.04)=PCON
"RTN","DSIO1",352,0)
 I $D(ADDR) D
"RTN","DSIO1",353,0)
 .S I="" F  S I=$O(ADDR(I)) Q:I=""  D
"RTN","DSIO1",354,0)
 ..S LOC=$$UP^XLFSTR($P(ADDR(I),U)),VAL=$P(ADDR(I),U,2)
"RTN","DSIO1",355,0)
 ..I LOC[1 S:VAL'="" IPT(FLE,FLG,1.1)=VAL Q
"RTN","DSIO1",356,0)
 ..I LOC[2 S:VAL'="" IPT(FLE,FLG,1.2)=VAL Q
"RTN","DSIO1",357,0)
 ..I LOC[3 S:VAL'="" IPT(FLE,FLG,1.3)=VAL Q
"RTN","DSIO1",358,0)
 ..I LOC="CITY" S:VAL'="" IPT(FLE,FLG,1.4)=VAL Q
"RTN","DSIO1",359,0)
 ..I LOC="STATE" S:VAL'="" IPT(FLE,FLG,1.5)=VAL Q
"RTN","DSIO1",360,0)
 ..I LOC="ZIP" S:VAL'="" IPT(FLE,FLG,1.6)=VAL Q
"RTN","DSIO1",361,0)
 I $D(PHONE) D
"RTN","DSIO1",362,0)
 .S I="" F  S I=$O(PHONE(I)) Q:I=""  D
"RTN","DSIO1",363,0)
 ..S LOC=$$UP^XLFSTR($P(PHONE(I),U)),VAL=$P(PHONE(I),U,2)
"RTN","DSIO1",364,0)
 ..I LOC="H" S:VAL'="" IPT(FLE,FLG,2.1)=VAL Q
"RTN","DSIO1",365,0)
 ..I LOC="MC" S:VAL'="" IPT(FLE,FLG,2.2)=VAL Q
"RTN","DSIO1",366,0)
 ..I LOC="WP" S:VAL'="" IPT(FLE,FLG,2.3)=VAL Q
"RTN","DSIO1",367,0)
 ..I LOC="FAX" S:VAL'="" IPT(FLE,FLG,2.4)=VAL Q
"RTN","DSIO1",368,0)
 D UPDATE^DIE("E","IPT",$S(+$G(IEN)>0:"",1:"IEN"),"ERR") K IPT
"RTN","DSIO1",369,0)
 ;I $D(ERR)!((+$G(IEN(1))<1&(+$G(IEN)<1))) D  Q    ;WO ABSURD
"RTN","DSIO1",370,0)
 ;.S RET="-1^"_$G(ERR("DIERR",1,"TEXT",1))         ;WO ABSURD
"RTN","DSIO1",371,0)
 S RET=$S(+$G(IEN)>0:IEN,+$G(IEN(1))>0:IEN(1),1:-1)
"RTN","DSIO1",372,0)
 Q
"RTN","DSIO1",373,0)
 ;
"RTN","DSIO1",374,0)
RENT(RET,TYP,SORT) ; RPC: DSIO RETURN ENTITY
"RTN","DSIO1",375,0)
 ;
"RTN","DSIO1",376,0)
 ; SORT: PAGE#,CT
"RTN","DSIO1",377,0)
 ;
"RTN","DSIO1",378,0)
 ; RETURN: GLOBAL ARRAY
"RTN","DSIO1",379,0)
 ;
"RTN","DSIO1",380,0)
 ; IEN^NAME^TYPE^INACTIVE^PRIMARY PROVIDER NAME^STREET ADDRESS 1
"RTN","DSIO1",381,0)
 ; ^STREET ADDRESS 2^STREET ADDRESS 3^CITY^STATE^ZIP CODE
"RTN","DSIO1",382,0)
 ; ^PHONE NUMBER (HOME)^PHONE NUMBER (OFFICE)^PHONE NUMBER (CELL)^FAX NUMBER
"RTN","DSIO1",383,0)
 ;
"RTN","DSIO1",384,0)
 ; TYP - F        (FACILITIES)
"RTN","DSIO1",385,0)
 ;       P        (PROVIDERS)
"RTN","DSIO1",386,0)
 ;       NULL     (ALL ENTITIES)
"RTN","DSIO1",387,0)
 ;       IEN/NAME (SINGLE ENTITY)
"RTN","DSIO1",388,0)
 ;
"RTN","DSIO1",389,0)
 N FLD,IEN,OUT,ERR,TO,CT
"RTN","DSIO1",390,0)
 S TYP=$$UP^XLFSTR($G(TYP,"B"))
"RTN","DSIO1",391,0)
 S RET=$NA(^TMP($J,"DSIO RENTRET")),OUT=$NA(^TMP($J,"DSIO RENT"))
"RTN","DSIO1",392,0)
 K @RET,@OUT S @RET@(0)="-1^No entries found."
"RTN","DSIO1",393,0)
 S FLD="@;.01;.02;.03;.04E;1.1;1.2;1.3;1.4;1.5I;1.6;2.1;2.2;2.3;2.4"
"RTN","DSIO1",394,0)
 I TYP?.N!($L(TYP)>1)&(TYP'="") D  Q
"RTN","DSIO1",395,0)
 .I TYP?.N S IEN=$$FIND1^DIC(19641.1,,"A",TYP) Q:IEN=0
"RTN","DSIO1",396,0)
 .S:'$D(IEN) IEN=$$FIND1^DIC(19641.1,,"X",TYP) Q:IEN=0
"RTN","DSIO1",397,0)
 .D GETS^DIQ(19641.1,IEN_",","*","E","OUT") Q:'$D(OUT)
"RTN","DSIO1",398,0)
 .S @RET@(0)=IEN,CT=$NA(OUT) F  S CT=$Q(@CT) Q:CT=""  S @RET@(0)=@RET@(0)_U_@CT
"RTN","DSIO1",399,0)
 .S $P(@RET@(0),U,10)=$$GET1^DIQ(19641.1,IEN_",",1.5,"I")
"RTN","DSIO1",400,0)
 .S $P(@RET@(0),U,2)=$$TITLE^XLFSTR($P(@RET@(0),U,2))
"RTN","DSIO1",401,0)
 .S $P(@RET@(0),U,5)=$$TITLE^XLFSTR($P(@RET@(0),U,5))
"RTN","DSIO1",402,0)
 D LIST^DIC(19641.1,,FLD,"P",,,,$G(TYP),"S TO=$G(TO)+1",,OUT,"ERR") Q:$D(ERR)
"RTN","DSIO1",403,0)
 D SORT^DSIO2($NA(@OUT@("DILIST")),RET,$G(SORT),$G(TO))
"RTN","DSIO1",404,0)
 S CT="" F  S CT=$O(@RET@(CT)) Q:CT=""  D
"RTN","DSIO1",405,0)
 .Q:CT=0
"RTN","DSIO1",406,0)
 .S $P(@RET@(CT),U,2)=$$TITLE^XLFSTR($P(@RET@(CT),U,2))
"RTN","DSIO1",407,0)
 .S $P(@RET@(CT),U,5)=$$TITLE^XLFSTR($P(@RET@(CT),U,5))
"RTN","DSIO1",408,0)
 Q
"RTN","DSIO2")
0^3^B50837968
"RTN","DSIO2",1,0)
DSIO2 ;DSS/TFF - DSIO X-REFERENCES AND UTILITIES;06/28/2013 15:19
"RTN","DSIO2",2,0)
 ;;1.0;DSS,INC OPEN SOURCE;;28 Jan 2013;Build 48
"RTN","DSIO2",3,0)
 ;Copyright 1995-2014,Document Storage Systems Inc. All Rights Reserved
"RTN","DSIO2",4,0)
 ;
"RTN","DSIO2",5,0)
 ;
"RTN","DSIO2",6,0)
 ; Documented API and ICRs
"RTN","DSIO2",7,0)
 ; -----------------------
"RTN","DSIO2",8,0)
 ;
"RTN","DSIO2",9,0)
 Q
"RTN","DSIO2",10,0)
 ;
"RTN","DSIO2",11,0)
 ;=====================================================================
"RTN","DSIO2",12,0)
 ;                       X - R E F  S U P P O R T
"RTN","DSIO2",13,0)
 ;=====================================================================
"RTN","DSIO2",14,0)
 ;
"RTN","DSIO2",15,0)
TRAK(DFN,ANS) ; CREATE A TRACKING ENTRY FROM DSIO PATIENT WHEN THE
"RTN","DSIO2",16,0)
 ;              CURRENTLY TRACKING STATUS CHANGES (.02)
"RTN","DSIO2",17,0)
 ;
"RTN","DSIO2",18,0)
 Q:$G(ANS)=""
"RTN","DSIO2",19,0)
 N FM,IPT,DIC,DA,DG,DLAYGO,DR,N,X,Y,IEN S DLAYGO=19641.2
"RTN","DSIO2",20,0)
 S FM(1)=$$FIND1^DIC(19641.22,,"O","FILEMAN")
"RTN","DSIO2",21,0)
 I FM(1)<1 K FM D
"RTN","DSIO2",22,0)
 .S IPT(19641.22,"?+1,",.01)="FILEMAN" D UPDATE^DIE(,"IPT","FM") K IPT
"RTN","DSIO2",23,0)
 .S IPT(19641.22,FM(1)_",",.02)=1 D FILE^DIE("I","IPT") K IPT
"RTN","DSIO2",24,0)
 S DIC="^DSIO(19641.2,",DIC(0)="XL",X="`"_DFN D ^DIC I +Y>0 D
"RTN","DSIO2",25,0)
 .S IPT(19641.24,"+1,"_DFN_",",.01)=$$NOW^XLFDT D UPDATE^DIE(,"IPT","IEN")
"RTN","DSIO2",26,0)
 .K IPT I $D(IEN(1)) D
"RTN","DSIO2",27,0)
 ..K ^TMP($J,"DSIO TRAK") S ^TMP($J,"DSIO TRAK")=IEN(1)
"RTN","DSIO2",28,0)
 ..S IPT(19641.24,IEN(1)_","_DFN_",",.02)=ANS
"RTN","DSIO2",29,0)
 ..S IPT(19641.24,IEN(1)_","_DFN_",",.03)=DUZ
"RTN","DSIO2",30,0)
 ..S IPT(19641.24,IEN(1)_","_DFN_",",.04)="FILEMAN"
"RTN","DSIO2",31,0)
 ..D FILE^DIE("I","IPT") K IPT
"RTN","DSIO2",32,0)
 Q
"RTN","DSIO2",33,0)
 ;
"RTN","DSIO2",34,0)
SERVICE(SHW,VAL) ; SET OF CODES FOR DSIO TITLE CONFIGURATION .03 FROM
"RTN","DSIO2",35,0)
 ;                 ^DD(9000010,.07,0) VISIT FILE - SERVICE CATEGORY
"RTN","DSIO2",36,0)
 ;
"RTN","DSIO2",37,0)
 N LST,SC,DIR,X,Y,FLG S SHW=$G(SHW),LST=$P(^DD(9000010,.07,0),U,3)
"RTN","DSIO2",38,0)
 W:SHW !,?5,"Select one of the following:",!!
"RTN","DSIO2",39,0)
 S DIR(0)="S^" F SC=1:1:$L(LST,";")-1 D  Q:$D(FLG)
"RTN","DSIO2",40,0)
 .I SHW W ?10,$P($P(LST,";",SC),":"),?20,$P($P(LST,";",SC),":",2),! Q
"RTN","DSIO2",41,0)
 .I $G(VAL)=$P($P(LST,";",SC),":") S FLG=VAL
"RTN","DSIO2",42,0)
 .S DIR(0)=DIR(0)_$P($P(LST,";",SC),":")_":"_$P($P(LST,";",SC),":",2)_$S(SC<($L(LST,";")-1):";",1:"")
"RTN","DSIO2",43,0)
 Q:SHW ""  Q:$D(FLG) FLG
"RTN","DSIO2",44,0)
 S DIR("A")="SERVICE CATEGORY" D ^DIR
"RTN","DSIO2",45,0)
 I Y'?1.1A S Y=""
"RTN","DSIO2",46,0)
 Q Y
"RTN","DSIO2",47,0)
 ;
"RTN","DSIO2",48,0)
 ;=====================================================================
"RTN","DSIO2",49,0)
 ;                      D I S C R E E T  D A T A
"RTN","DSIO2",50,0)
 ;=====================================================================
"RTN","DSIO2",51,0)
 ;
"RTN","DSIO2",52,0)
TRANS(VP) ; TRANSFORM FOR THE DSIO NOTE CONTROL FLD X-REF
"RTN","DSIO2",53,0)
 N IEN,FLE S FLE=$TR($P(VP,"(",2),",",""),IEN=+VP
"RTN","DSIO2",54,0)
 W $$GET1^DIQ(FLE,IEN_",",.01),!
"RTN","DSIO2",55,0)
 Q $$UP^XLFSTR($$GET1^DIQ(FLE,IEN_",",.01))
"RTN","DSIO2",56,0)
 ;
"RTN","DSIO2",57,0)
IMPORT ; IMPORT DIALOG ELEMENTS FROM THE REMINDER DIALOG FILE TO DSIO
"RTN","DSIO2",58,0)
 ;       REMINDER ELEMENTS
"RTN","DSIO2",59,0)
 ;
"RTN","DSIO2",60,0)
 N OUT,ERR,RD,IPT,IEN,SUB S OUT=$NA(^TMP($J,"DSIO BUILD")) K @OUT
"RTN","DSIO2",61,0)
 D LIST^DIC(801.41,,"@","P",,,,"","I $P(^(0),U,4)=""E""",,OUT,"ERR")
"RTN","DSIO2",62,0)
 I $D(ERR) W !,$G(ERR("DIERR",1,"TEXT",1)),! Q
"RTN","DSIO2",63,0)
 S RD=0 F  S RD=$O(@OUT@("DILIST",RD)) Q:'RD  D
"RTN","DSIO2",64,0)
 .S IPT(19641.402,"?+1,",.01)="`"_@OUT@("DILIST",RD,0)
"RTN","DSIO2",65,0)
 .D UPDATE^DIE("E","IPT","IEN","ERR") Q:+$G(IEN(1))<1
"RTN","DSIO2",66,0)
 .K SUB,IPT D GETS^DIQ(801.41,IEN(1)_",","10*","I","SUB")
"RTN","DSIO2",67,0)
 .I $D(SUB) S CT=$NA(SUB) F  S CT=$Q(@CT) Q:CT=""  D
"RTN","DSIO2",68,0)
 ..I $QS(CT,3)=.01 S IPT(19641.4021,"?+1,"_IEN(1)_",",.01)="`"_@CT D
"RTN","DSIO2",69,0)
 ...D UPDATE^DIE("E","IPT") K IPT
"RTN","DSIO2",70,0)
 K @OUT
"RTN","DSIO2",71,0)
 Q
"RTN","DSIO2",72,0)
 ;
"RTN","DSIO2",73,0)
BUILD(MIEN) ; BUILD THE REMINDER DIALOG DISCREET DATA CONTROL
"RTN","DSIO2",74,0)
 ;
"RTN","DSIO2",75,0)
 ; THE GOAL IS TO BREAK DOWN THE REMINDER DIALOG TO ITS ELEMENTS
"RTN","DSIO2",76,0)
 ;
"RTN","DSIO2",77,0)
 N VPIEN,DIR,X,Y,OUT,ERR,IPT,CT
"RTN","DSIO2",78,0)
 S VPIEN=$$GET1^DIQ(19641.4,MIEN_",",.01,"I") Q:VPIEN'["PXRMD"
"RTN","DSIO2",79,0)
 S DIR("A")="DO YOU WANT TO BUILD/REBUILD THE DDCS DIALOG"
"RTN","DSIO2",80,0)
 S DIR(0)="Y",DIR("B")="YES" D ^DIR
"RTN","DSIO2",81,0)
 Q:$D(DIRUT)!(Y=0)
"RTN","DSIO2",82,0)
 ;
"RTN","DSIO2",83,0)
 ;DELETE THE CURRENT MULTIPLE
"RTN","DSIO2",84,0)
 D LIST^DIC(19641.42,","_MIEN_",","@","P",,,,,,,"OUT","ERR")
"RTN","DSIO2",85,0)
 I $D(OUT) D
"RTN","DSIO2",86,0)
 .S CT=$NA(OUT) F  S CT=$Q(@CT) Q:CT=""  D
"RTN","DSIO2",87,0)
 ..Q:$QS(CT,2)<1
"RTN","DSIO2",88,0)
 ..S IPT(19641.42,@CT_","_MIEN_",",.01)="@" D UPDATE^DIE("E","IPT") K IPT
"RTN","DSIO2",89,0)
 ;
"RTN","DSIO2",90,0)
 K OUT,ERR
"RTN","DSIO2",91,0)
 D LIST^DIC(801.412,","_+VPIEN_",","@;2I","P",,,,,,,"OUT","ERR")
"RTN","DSIO2",92,0)
 I +$G(OUT("DILIST",0))<1 W !,"No components found.",! Q
"RTN","DSIO2",93,0)
 S CT=$NA(OUT) F  S CT=$Q(@CT) Q:CT=""  D
"RTN","DSIO2",94,0)
 .Q:$QS(CT,2)<1
"RTN","DSIO2",95,0)
 .D COMP($P(@CT,U,2),$$GET1^DIQ(801.41,$P(@CT,U,2)_",",4,"I"))
"RTN","DSIO2",96,0)
 Q
"RTN","DSIO2",97,0)
 ;
"RTN","DSIO2",98,0)
COMP(IEN,TYP) ; THE DIALOG COMPONENT
"RTN","DSIO2",99,0)
 ;
"RTN","DSIO2",100,0)
 ; THE REMINDER DIALOG SHOULD BE MADE UP OF GROUPS AND/OR ELEMENTS
"RTN","DSIO2",101,0)
 ; THE GROUPS SHOULD BE MADE UP OF ELEMENTS
"RTN","DSIO2",102,0)
 ; AND ELEMENTS SHOULD BE MADE UP OF PROMPTS AND FORCED VALUES
"RTN","DSIO2",103,0)
 ;
"RTN","DSIO2",104,0)
 ; IF A GROUP/ELEMENT SEND TO COMP
"RTN","DSIO2",105,0)
 ;
"RTN","DSIO2",106,0)
 N OUT,ERR,CT
"RTN","DSIO2",107,0)
 I TYP="E" D  ; ELEMENT
"RTN","DSIO2",108,0)
 .S IPT(19641.42,"?+1,"_MIEN_",",.01)="`"_IEN
"RTN","DSIO2",109,0)
 .D UPDATE^DIE("E","IPT") K IPT
"RTN","DSIO2",110,0)
 I TYP="G" D  ; GROUP
"RTN","DSIO2",111,0)
 .D LIST^DIC(801.412,","_IEN_",","@;2I","P",,,,,,,"OUT","ERR")
"RTN","DSIO2",112,0)
 .I +$G(OUT("DILIST",0))>0 S CT=$NA(OUT) F  S CT=$Q(@CT) Q:CT=""  D
"RTN","DSIO2",113,0)
 ..Q:$QS(CT,2)<1
"RTN","DSIO2",114,0)
 ..D COMP($P(@CT,U,2),$$GET1^DIQ(801.41,$P(@CT,U,2)_",",4,"I"))
"RTN","DSIO2",115,0)
 Q
"RTN","DSIO2",116,0)
 ;
"RTN","DSIO2",117,0)
 ;=====================================================================
"RTN","DSIO2",118,0)
 ;                         U T I L I T I E S
"RTN","DSIO2",119,0)
 ;=====================================================================
"RTN","DSIO2",120,0)
 ;
"RTN","DSIO2",121,0)
ABSURD(LIST) ; ABSURDITY
"RTN","DSIO2",122,0)
 ;
"RTN","DSIO2",123,0)
 ; THIS API TURNS NON-EXISTING OR EXISTING BUT EQUAL TO NULL VARIABLES
"RTN","DSIO2",124,0)
 ; INTO THE @. ORIGINALLY I WAS USING @ AS A KIND OF CONFIRMATION BEFORE
"RTN","DSIO2",125,0)
 ; USING FILEMAN API's TO EVEN SET THE PROCESSING ARRAY - THIS INSTEAD
"RTN","DSIO2",126,0)
 ; BEHAVES MORE LIKE THE CALLING APPLICATION DIRECTLY USING UPDATE^DIE
"RTN","DSIO2",127,0)
 ; IN THE INTERAL FORMAT...BUT WE'RE NOT GOING TO DO THAT - WE WANT MAXIMUM
"RTN","DSIO2",128,0)
 ; VALIDATATION BECAUSE WE'RE NOT BUILDING A GUI, WE'RE BUILDING A VISTA
"RTN","DSIO2",129,0)
 ; API THAT CAN ULTIMATLY BE CALLED BY ANYONE. SO THE GUI DEVELOPER WANTS
"RTN","DSIO2",130,0)
 ; NULL TO MEAN DELETE MEANING THAT EVERYTIME YOU CALL AN RPC/API TO EDIT YOU
"RTN","DSIO2",131,0)
 ; BETTER NOW AND PASS ALL THE DATA ELEMENTS BECAUSE IF YOU DON'T YOU'LL
"RTN","DSIO2",132,0)
 ; DELETE THEM INSTEAD. THIS MEANS THAT YOU'LL CALL THE GET VERSION FIRST
"RTN","DSIO2",133,0)
 ; AND PASS IN ALL THE DATA INCLUDING YOUR CHANGE EVEN IF YOU JUST PLAN
"RTN","DSIO2",134,0)
 ; ON CHANGING ONE ELEMENT. THIS ALSO MEANS THAT THE SYSTEM HAS TO TREAT
"RTN","DSIO2",135,0)
 ; EVERYTHING AS IF IT'S BEING EDITIED, NOT ONLY IS THIS INEFFICIENT BUT
"RTN","DSIO2",136,0)
 ; IT ALSO CAUSES A PROBLEM FOR X-REFENCES INTENDED TO FIRE ONLY WHEN A
"RTN","DSIO2",137,0)
 ; DATA ELEMENT TRUELY CHANGES. IT ALSO OPENS THE DOOR FOR A LOT OF
"RTN","DSIO2",138,0)
 ; UNINTENDED DELETES.
"RTN","DSIO2",139,0)
 ;
"RTN","DSIO2",140,0)
 ; HOWEVER, INSTEAD OF REWRITING...EVERYTHING...WE'LL SEND IN A LIST OF
"RTN","DSIO2",141,0)
 ; COMMA DELIMITED VARIABLES THAT ARE OF THE INPUT PARAMETERS FOR THE
"RTN","DSIO2",142,0)
 ; RPC BEING USED AND IF NULL SET THEM TO @ - HOPEFULLY, ONE DAY, THIS
"RTN","DSIO2",143,0)
 ; WILL BE THROWN OUT.
"RTN","DSIO2",144,0)
 ;
"RTN","DSIO2",145,0)
 ; SOME LOGIC IN CALLING ROUTINES MAY NOT BE INVOKED BECAUSE IT WILL ALWAYS
"RTN","DSIO2",146,0)
 ; BE A SET OR KILL BUT IT WILL REMAIN INTACT AS TO NOT RELY ON THIS.
"RTN","DSIO2",147,0)
 ;
"RTN","DSIO2",148,0)
 ; ALSO NOTE, THAT DUE TO ABSURD YOU MAY BE DELETING FIELDS WHILE CREATING
"RTN","DSIO2",149,0)
 ; AN ENTRY, UPDATE^DIE REPORTS AN ERROR BUT THE ENTRY WITH THE SET FIELDS.
"RTN","DSIO2",150,0)
 ; THE QUICK SOLUTION WITHOUT REWRITING FOR ABSURD IS TO COMMEMENT OUT THE
"RTN","DSIO2",151,0)
 ; ERROR REPORTING. EVERYTHING AFFECTED BY ABSURD WILL BE MARKED WITH A
"RTN","DSIO2",152,0)
 ; COMMENT LINE SO THAT IT CAN BE EASILY REMOVED LATER.
"RTN","DSIO2",153,0)
 ; ;ABSURD
"RTN","DSIO2",154,0)
 ; ;W ABSURD (WITH ABSURD)
"RTN","DSIO2",155,0)
 ; ;WO ABSURD (WITHOUT ABSURD)
"RTN","DSIO2",156,0)
 ;
"RTN","DSIO2",157,0)
 ; ARRAY INPUTS ARE EXPECTED TO BE IDENTIFIER^VALUE PAIRS
"RTN","DSIO2",158,0)
 ; EXAMPLE: ARRAY(<SUBSCRIPT>)="ZIP<^ - THE LAST PIECE IS THE VALUE>66666"
"RTN","DSIO2",159,0)
 ;
"RTN","DSIO2",160,0)
 N I,VAR,CT F I=1:1:$L(LIST,",") S VAR=$P(LIST,",",I) D
"RTN","DSIO2",161,0)
 .I '$D(@VAR) S @VAR="@"
"RTN","DSIO2",162,0)
 .E  I $D(@VAR)=10 S CT=$NA(@VAR) F  S CT=$Q(@CT) Q:CT=""  D
"RTN","DSIO2",163,0)
 ..I $P(@CT,U,$L(@CT,U))="" S $P(@CT,U,$L(@CT,U))="@"
"RTN","DSIO2",164,0)
 .E  I $D(@VAR)=1&(@VAR="") S @VAR="@"
"RTN","DSIO2",165,0)
 Q
"RTN","DSIO2",166,0)
 ;
"RTN","DSIO2",167,0)
CHECK(DFN) ; CHECK FOR PATIENT IN DSIO PATIENT
"RTN","DSIO2",168,0)
 N DIC,DA,X,Y
"RTN","DSIO2",169,0)
 S DIC="^DSIO(19641,",DIC(0)="XL",X="`"_DFN D ^DIC I +Y<1 Q 0
"RTN","DSIO2",170,0)
 Q 1
"RTN","DSIO2",171,0)
 ;
"RTN","DSIO2",172,0)
FMTE(VAL) ; CONVERT DATE TO INCLUDE LEADING ZEROES
"RTN","DSIO2",173,0)
 I VAL?1.2N1"/"1.2N1"/"2.4N D
"RTN","DSIO2",174,0)
 .S:$L($P(VAL,"/"))=1 $P(VAL,"/")=0_$P(VAL,"/")
"RTN","DSIO2",175,0)
 .S:$L($P(VAL,"/",2))=1 $P(VAL,"/",2)=0_$P(VAL,"/",2)
"RTN","DSIO2",176,0)
 Q VAL
"RTN","DSIO2",177,0)
 ;
"RTN","DSIO2",178,0)
FN(P,C) ; GET THE NEXT RECORD BY DASHBOARD PAGE AND COUNT FORWARDS
"RTN","DSIO2",179,0)
 Q:P<2 0
"RTN","DSIO2",180,0)
 Q C*(P-1)
"RTN","DSIO2",181,0)
 ;
"RTN","DSIO2",182,0)
SORT(IN,OUT,SORT,TO,DIR,PDT) ; CREATE PAGING (GLOBAL)
"RTN","DSIO2",183,0)
 ;
"RTN","DSIO2",184,0)
 ;  IN = ^TMP(<SUBSCRIPTS PASSED IN>,COUNTER (# OR STRING),HANING 0 (OPTIONAL))
"RTN","DSIO2",185,0)
 ;  TO = TOTAL IF THE CALLER KNOWS THE TOTAL COUNT
"RTN","DSIO2",186,0)
 ;       THIS IS USEFUL FOR SCREENED LISTS
"RTN","DSIO2",187,0)
 ; DIR = DIRECTION 1 OR -1 (REVERSE)
"RTN","DSIO2",188,0)
 ; PDT = PIECE TO TRANSFORM DATE (#|#^CODE)
"RTN","DSIO2",189,0)
 ;
"RTN","DSIO2",190,0)
 N STRT,T,CT,Z,I,VAL,PP,PP1 S M="-1^Nothing found."
"RTN","DSIO2",191,0)
 S (STRT,T)=0 I $G(SORT)?.N1",".N D
"RTN","DSIO2",192,0)
 .S STRT=$$FN($P(SORT,","),$P(SORT,",",2))
"RTN","DSIO2",193,0)
 S CT=1,Z="" F I=0:1 S Z=$O(@IN@(Z),$G(DIR,1)) Q:Z=""  D
"RTN","DSIO2",194,0)
 .Q:I<STRT  Q:Z=0
"RTN","DSIO2",195,0)
 .; WHERE DOES THE VALUE SIT? IS THERE A HANGING ZERO?
"RTN","DSIO2",196,0)
 .S VAL=$S($D(@IN@(Z))=1:@IN@(Z),$D(@IN@(Z,0))=1:@IN@(Z,0),1:"")
"RTN","DSIO2",197,0)
 .I $P($G(SORT),",",2)'="",T>=$P($G(SORT),",",2) S T=T+1 Q
"RTN","DSIO2",198,0)
 .S @OUT@(CT)=VAL,T=T+1,CT=CT+1 I $G(PDT)'="" D
"RTN","DSIO2",199,0)
 ..F PP=1:1:$L(PDT,"|") S PP1=$P($P(PDT,U),"|",PP) D
"RTN","DSIO2",200,0)
 ...S $P(@OUT@(CT-1),U,PP1)=$$FMTE^XLFDT($P(@OUT@(CT-1),U,PP1),$P(PDT,U,2))
"RTN","DSIO2",201,0)
 K:$E(IN,1,4)="^TMP" @IN
"RTN","DSIO2",202,0)
 S @OUT@(0)=$S($O(@OUT@(""),-1)=0:M,+$G(TO)>0:TO,T>0:T,1:M)
"RTN","DSIO2",203,0)
 Q
"RTN","DSIO2",204,0)
 ;
"RTN","DSIO2",205,0)
NAME(NAM) ; TRANSFORM NAME,NAME TO TITLE CASE THATS - Name,Name
"RTN","DSIO2",206,0)
 I NAM["," S NAM=$$TITLE^XLFSTR($P(NAM,","))_","_$$TITLE^XLFSTR($P(NAM,",",2))
"RTN","DSIO2",207,0)
 E  S NAM=$$TITLE^XLFSTR(NAM)
"RTN","DSIO2",208,0)
 Q NAM
"RTN","DSIO2",209,0)
 ;
"RTN","DSIO2",210,0)
VALID(FLE,FLD,IENS,VAL) ; CHECK IF A VALUE IS VALID
"RTN","DSIO2",211,0)
 N VALID,ERR D VAL^DIE($G(FLE),$G(IENS),$G(FLD),,$G(VAL),.VALID,,"ERR")
"RTN","DSIO2",212,0)
 I VALID["^"!($D(ERR)) Q 0
"RTN","DSIO2",213,0)
 Q 1
"RTN","DSIO2",214,0)
 ;
"RTN","DSIO2",215,0)
DT(X) ; VALIDATE AND ATTEMPT TO RETURN A VALID DATE
"RTN","DSIO2",216,0)
 N %DT S %DT="STX" D ^%DT
"RTN","DSIO2",217,0)
 I Y<1 S X=$$DT1(X) I +X=-1 S X=$P(X,U,2)
"RTN","DSIO2",218,0)
 S %DT="STX" D ^%DT
"RTN","DSIO2",219,0)
 Q Y
"RTN","DSIO2",220,0)
 ;
"RTN","DSIO2",221,0)
DT1(VAL) ; TRANSLATE EXTERNAL DATE TIME TO FM DATE TIME
"RTN","DSIO2",222,0)
 ;
"RTN","DSIO2",223,0)
 ; Converts these 9/23/2004 10:53:25 AM
"RTN","DSIO2",224,0)
 ;                2009-10-22 05:00:00.0
"RTN","DSIO2",225,0)
 ;                OCT 12,(, )2012 12:10 AM
"RTN","DSIO2",226,0)
 ;                OCT 12,(, )2012 13:00
"RTN","DSIO2",227,0)
 ;
"RTN","DSIO2",228,0)
 ; THE FM CALL BELOW DOES NOT WORK WITH THE TIME PORTIONS
"RTN","DSIO2",229,0)
 ; OF THE ABOVE FORMAT
"RTN","DSIO2",230,0)
 ; ------------------------------------------------------
"RTN","DSIO2",231,0)
 ; D DT^DILF("E","DEC 12,2014",.RESULT) 
"RTN","DSIO2",232,0)
 ; RESULT=3141212
"RTN","DSIO2",233,0)
 ; RESULT(0)="DEC 12, 2014"
"RTN","DSIO2",234,0)
 ;
"RTN","DSIO2",235,0)
 Q:VAL="" ""
"RTN","DSIO2",236,0)
 I $$FMTH^XLFDT(VAL)'=-1 Q VAL
"RTN","DSIO2",237,0)
 N DATE,FLG,TIME S DATE=-1,FLG=0
"RTN","DSIO2",238,0)
 I $P(VAL," ",2)?.2N.1":".2N.1":".2N.1" ".2A S FLG=1
"RTN","DSIO2",239,0)
 I $P(VAL," ",2)?.2N.1":".2N.1":".2N.1".".2N S FLG=1
"RTN","DSIO2",240,0)
 I VAL?3A1" "1.2N1","4N.1" ".2N.1":".2N.1":".2N.1" ".2A S FLG=2
"RTN","DSIO2",241,0)
 I VAL?3A1" "1.2N1","1" "4N.1" ".2N.1":".2N.1":".2N.1" ".2A S FLG=3
"RTN","DSIO2",242,0)
 I FLG=0 D DT^DILF("E",VAL,.DATE)
"RTN","DSIO2",243,0)
 I FLG=1 D DT^DILF("E",$P(VAL," "),.DATE) S TIME=$$DT2($P(VAL," ",2,99))
"RTN","DSIO2",244,0)
 I FLG=2 D DT^DILF("E",$P(VAL," ",1,2),.DATE) S TIME=$$DT2($P(VAL," ",3,99))
"RTN","DSIO2",245,0)
 I FLG=3 D DT^DILF("E",$P(VAL," ",1,3),.DATE) S TIME=$$DT2($P(VAL," ",4,99))
"RTN","DSIO2",246,0)
 I DATE=-1 Q -1_U_VAL
"RTN","DSIO2",247,0)
 Q DATE_$S($G(TIME)'="":"."_TIME,1:"")
"RTN","DSIO2",248,0)
 ;
"RTN","DSIO2",249,0)
DT2(TM) ; CONVERT TIME
"RTN","DSIO2",250,0)
 N SEC,MIN,HR S TM=$$TRIM^XLFSTR($$UP^XLFSTR(TM)) Q:TM'[":" ""
"RTN","DSIO2",251,0)
 S SEC=$S(TM[" ":$P($P(TM,":",3)," "),TM[".":$P($P(TM,":",3),"."),1:$P(TM,":",3))
"RTN","DSIO2",252,0)
 S:$L(SEC)=1 SEC=0_SEC
"RTN","DSIO2",253,0)
 S MIN=$P(TM,":",2) S:$L(MIN)=1 MIN=0_MIN
"RTN","DSIO2",254,0)
 S HR=$P(TM,":") S:$L(HR)=1 HR=0_HR
"RTN","DSIO2",255,0)
 I HR=12&($P(TM," ",2)="AM"!($E(TM,$L(TM)-1,$L(TM))="AM")) S HR="00"
"RTN","DSIO2",256,0)
 I HR<12&($P(TM," ",2)="PM"!($E(TM,$L(TM)-1,$L(TM))="PM")) S HR=HR+12
"RTN","DSIO2",257,0)
 S TM=HR_MIN_SEC
"RTN","DSIO2",258,0)
 F I=$L(TM):-1:1 Q:$E(TM,I)'=0  I $E(TM,I)=0 S TM=$E(TM,1,I-1)
"RTN","DSIO2",259,0)
 Q $S($G(TM)'="":TM,1:"")
"RTN","DSIO3")
0^4^B101240698
"RTN","DSIO3",1,0)
DSIO3 ;DSS/TFF - DSIO TIU AND IHE SUPPORT;06/28/2013 15:19
"RTN","DSIO3",2,0)
 ;;1.0;DSS,INC OPEN SOURCE;;28 Jan 2013;Build 48
"RTN","DSIO3",3,0)
 ;Copyright 1995-2014,Document Storage Systems Inc. All Rights Reserved
"RTN","DSIO3",4,0)
 ;
"RTN","DSIO3",5,0)
 ;
"RTN","DSIO3",6,0)
 ; Documented API and ICRs
"RTN","DSIO3",7,0)
 ; -----------------------
"RTN","DSIO3",8,0)
 ;
"RTN","DSIO3",9,0)
 Q
"RTN","DSIO3",10,0)
 ;
"RTN","DSIO3",11,0)
CREATE(RET,DFN,TITLE,NOTE,DATA,SUBJ) ; RPC: DSIO CREATE A NOTE
"RTN","DSIO3",12,0)
 ;
"RTN","DSIO3",13,0)
 ; Visit information will come out of a configuration file
"RTN","DSIO3",14,0)
 ;
"RTN","DSIO3",15,0)
 ; ADDITIONAL PARAMETER TO SAVE DISCREET INFORMATION
"RTN","DSIO3",16,0)
 ; ARRAY(#)=LABEL/FIELD^VALUE
"RTN","DSIO3",17,0)
 ;
"RTN","DSIO3",18,0)
 ;  TIUX(.02)=PATIENT                       -UPDATE,ADDENDA
"RTN","DSIO3",19,0)
 ; TIUX(1202)=AUTHOR/DICTATOR
"RTN","DSIO3",20,0)
 ; TIUX(1205)=HOSPITAL LOCATION
"RTN","DSIO3",21,0)
 ; TIUX(1208)=EXPECTED COSIGNER
"RTN","DSIO3",22,0)
 ; TIUX(1301)=REFERENCE DATE/DT OF ENTRY    -UPDATE,ADDENDA
"RTN","DSIO3",23,0)
 ; TIUX(1302)=ENTERED BY                    -UPDATE,ADDENDA
"RTN","DSIO3",24,0)
 ; TIUX(1405)=PKGREF
"RTN","DSIO3",25,0)
 ; TIUX(1701)=SUBJECT
"RTN","DSIO3",26,0)
 ; TIUX(2101)=IDPARENT
"RTN","DSIO3",27,0)
 ;
"RTN","DSIO3",28,0)
 ; ORDER:
"RTN","DSIO3",29,0)
 ; CREATE - BOILER - LOCK - UPDATE - SET - UNLOCK
"RTN","DSIO3",30,0)
 ;
"RTN","DSIO3",31,0)
 ; RETURN: LITERAL
"RTN","DSIO3",32,0)
 ;
"RTN","DSIO3",33,0)
 N VSTR,DTIUX,IEN,TMP,BLR S RET=-1
"RTN","DSIO3",34,0)
 I '$$TM^%ZTLOAD S RET="0^TASKMAN must be running." Q
"RTN","DSIO3",35,0)
 S TITLE=$$FIND1^DIC(8925.1,,"O",TITLE) I 'TITLE S RET="0^Title not found." Q
"RTN","DSIO3",36,0)
 S VSTR=$$VISIT(TITLE) I +VSTR<1 S RET=VSTR Q
"RTN","DSIO3",37,0)
 S DTIUX(1202)=DUZ,DTIUX(1701)=$G(SUBJ)
"RTN","DSIO3",38,0)
 S DTIUX(1205)=$P(VSTR,";"),DTIUX(1301)=$P(VSTR,";",2)
"RTN","DSIO3",39,0)
 ; MAKE^TIUSRVP(.IEN,DFN,TITLE,VDT,VLOC,VSIT,TIUX,VSTR,SUPPRESS,NOASF)
"RTN","DSIO3",40,0)
 D MAKE^TIUSRVP(.IEN,DFN,TITLE,,,,.DTIUX,VSTR,1)
"RTN","DSIO3",41,0)
 I +IEN<1 S RET=IEN Q
"RTN","DSIO3",42,0)
 D BLRSHELL^TIUSRVD(.TMP,TITLE,DFN,VSTR) I $D(TMP) M BLR("TEXT")=@TMP
"RTN","DSIO3",43,0)
 D UPDATE1
"RTN","DSIO3",44,0)
 Q
"RTN","DSIO3",45,0)
 ;
"RTN","DSIO3",46,0)
VISIT(TITLE) ; GET VISIT INFORMATION FROM A TITLE
"RTN","DSIO3",47,0)
 ; ONLY WORKS WITH RPC: DSIO CREATE A NOTE
"RTN","DSIO3",48,0)
 ;
"RTN","DSIO3",49,0)
 ; RETURN THE VISIT STRING OR -1^MESSAGE
"RTN","DSIO3",50,0)
 ;
"RTN","DSIO3",51,0)
 ; [VDT]   = Date(/Time) of Visit
"RTN","DSIO3",52,0)
 ; [VLOC]  = Visit Location (HOSPITAL LOCATION)
"RTN","DSIO3",53,0)
 ; [VSIT]  = Visit file ien (#9000010)
"RTN","DSIO3",54,0)
 ; [VSTR]  = Visit string (i.e., VLOC;VDT;VTYPE)
"RTN","DSIO3",55,0)
 ;
"RTN","DSIO3",56,0)
 ; VTYPE = Service Category (SET OF CODES - 9000010(VISIT FILE) - .07)
"RTN","DSIO3",57,0)
 ;
"RTN","DSIO3",58,0)
 N MSG,VLOC,VTYPE S MSG=" - please check the DSIO TITLE CONFIGURATION file."
"RTN","DSIO3",59,0)
 S VLOC=$$GET1^DIQ(19641.5,TITLE_",",.02,"I")
"RTN","DSIO3",60,0)
 I +VLOC<1 Q "0^Invaild VISIT LOCATION"_MSG
"RTN","DSIO3",61,0)
 S VTYPE=$$GET1^DIQ(19641.5,TITLE_",",.03)
"RTN","DSIO3",62,0)
 I $L(VTYPE)'=1 Q "0^Invaild SERVICE CATEGORY"_MSG
"RTN","DSIO3",63,0)
 Q +VLOC_";"_$$NOW^XLFDT_";"_VTYPE
"RTN","DSIO3",64,0)
 ;
"RTN","DSIO3",65,0)
SET(RET,IEN,NOTE,DATA,SUBJ) ; RPC: DSIO UPDATE A NOTE
"RTN","DSIO3",66,0)
 ; 
"RTN","DSIO3",67,0)
 ; REQUIRED INPUT:
"RTN","DSIO3",68,0)
 ; ---------------
"RTN","DSIO3",69,0)
 ; IEN,NOTE
"RTN","DSIO3",70,0)
 ;
"RTN","DSIO3",71,0)
 ; THIS RETURN ALSO APPLIES TO CREATE AND ADDENDUM
"RTN","DSIO3",72,0)
 ; -----------------------------------------------
"RTN","DSIO3",73,0)
 ; If successful:
"RTN","DSIO3",74,0)
 ;   <IEN in TIU DOCUMENT FILE>^<LAST_PAGE_RECEIVED>^<TOTAL_PAGES_EXPECTED>
"RTN","DSIO3",75,0)
 ; 
"RTN","DSIO3",76,0)
 ; If unsuccessful:
"RTN","DSIO3",77,0)
 ;   0^0^0^Explanatory text
"RTN","DSIO3",78,0)
 ;
"RTN","DSIO3",79,0)
 ; RETURN: LITERAL
"RTN","DSIO3",80,0)
 ;
"RTN","DSIO3",81,0)
 I '$$TM^%ZTLOAD S RET="0^TASKMAN must be running." Q
"RTN","DSIO3",82,0)
 Q:'$$AUTH(.RET,IEN,"EDIT RECORD")
"RTN","DSIO3",83,0)
UPDATE ;
"RTN","DSIO3",84,0)
 S DTIUX(1301)=$$NOW^XLFDT
"RTN","DSIO3",85,0)
UPDATE1 ;
"RTN","DSIO3",86,0)
 N:'$D(DTIUX) DTIUX N NOTIN,CT,I,X
"RTN","DSIO3",87,0)
 S DTIUX(1202)=DUZ S:$G(SUBJ)'="" DTIUX(1701)=SUBJ
"RTN","DSIO3",88,0)
 Q:'$$LCK(.RET,IEN)
"RTN","DSIO3",89,0)
 D UPDATE^TIUSRVP(.RET,IEN,.DTIUX,0) I $P(RET,U,2)=1 D  Q
"RTN","DSIO3",90,0)
 .S RET="0^Error updating." D UNLCK(IEN)
"RTN","DSIO3",91,0)
 I $D(DATA) N TASK D STORE^DSIO3A(.TASK,IEN,.DATA,"O") ;W TASK
"RTN","DSIO3",92,0)
 I $D(BLR) M NOTIN=BLR S CT=$O(NOTIN("TEXT",""),-1)+1
"RTN","DSIO3",93,0)
 S CT=1,X="" F I=CT:1 S X=$O(NOTE(X)) Q:X=""  S NOTIN("TEXT",I,0)=NOTE(X)
"RTN","DSIO3",94,0)
 S NOTIN("HDR")="1^1" ;<# of Current Page>^<Total # of Pages>
"RTN","DSIO3",95,0)
 D SETTEXT^TIUSRVPT(.RET,IEN,.NOTIN),UNLCK(IEN)
"RTN","DSIO3",96,0)
 S:+RET=0 RET="0^"_$P(RET,U,4)
"RTN","DSIO3",97,0)
 Q
"RTN","DSIO3",98,0)
 ;
"RTN","DSIO3",99,0)
ADDEN(RET,IEN,NOTE,DATA,SUBJ) ; RPC: DSIO MAKE ADDENDUM
"RTN","DSIO3",100,0)
 ;
"RTN","DSIO3",101,0)
 ; RETURN: LITERAL
"RTN","DSIO3",102,0)
 ;
"RTN","DSIO3",103,0)
 N DTIUX,AIEN
"RTN","DSIO3",104,0)
 Q:'$$AUTH(.RET,IEN,"MAKE ADDENDUM")
"RTN","DSIO3",105,0)
 S DTIUX(1202)=DUZ,DTIUX(1301)=$$NOW^XLFDT
"RTN","DSIO3",106,0)
 S:$G(SUBJ)'="" DTIUX(1701)=SUBJ
"RTN","DSIO3",107,0)
 D MAKEADD^TIUSRVP(.AIEN,IEN,.DTIUX) I +AIEN=-1 S RET="0^"_$P(AIEN,U,4) Q
"RTN","DSIO3",108,0)
 S IEN=AIEN D UPDATE1
"RTN","DSIO3",109,0)
 Q
"RTN","DSIO3",110,0)
 ;
"RTN","DSIO3",111,0)
GET(RET,IEN,TYP) ; RPC: DSIO GET RECORD TEXT
"RTN","DSIO3",112,0)
 ;
"RTN","DSIO3",113,0)
 ; - TYP PARAMETER 
"RTN","DSIO3",114,0)
 ;   - NULL - WHOLE NOTE WITH DISCREET DATA AND ADDENDA - FOR VIEW
"RTN","DSIO3",115,0)
 ;   - H - ONLY THE HEADER                              - FOR VIEW
"RTN","DSIO3",116,0)
 ;   - B - ONLY THE BODY                                - FOR EDIT
"RTN","DSIO3",117,0)
 ;
"RTN","DSIO3",118,0)
 ; RETURN: GLOBAL ARRAY
"RTN","DSIO3",119,0)
 ;
"RTN","DSIO3",120,0)
 N LIST,FLD,OUT,I,LN,FLG,TIUARR,DATA,NCLSS,REC S TYP=$G(TYP)
"RTN","DSIO3",121,0)
 S LIST(IEN)="",RET=$NA(^TMP("DSIO TIUVIEW",$J)) K @RET S @RET@(0)=""
"RTN","DSIO3",122,0)
 S FLD=".01;.06;.07;1301;1204;1208;1701;1205;1405;2101;70201;70202"
"RTN","DSIO3",123,0)
 ;
"RTN","DSIO3",124,0)
 ; RETURN JUST THE BODY OF THE NOTE FOR EDIT
"RTN","DSIO3",125,0)
 I TYP="B" D  Q
"RTN","DSIO3",126,0)
 .D GET4EDIT^TIUSRVR(.OUT,IEN,FLD) Q:$G(@OUT@(0))["~"
"RTN","DSIO3",127,0)
 .S I=0,LN=$NA(@OUT) F  S LN=$Q(@LN) Q:LN=""  Q:$QS(LN,1)'="TIUEDIT"!($QS(LN,2)'=$J)  D
"RTN","DSIO3",128,0)
 ..I @LN="$TXT" S FLG=1 Q
"RTN","DSIO3",129,0)
 ..Q:'$D(FLG)
"RTN","DSIO3",130,0)
 ..S @RET@(I)=@LN,I=I+1
"RTN","DSIO3",131,0)
 ;
"RTN","DSIO3",132,0)
 Q:'$$AUTH(.RET,IEN,"VIEW")
"RTN","DSIO3",133,0)
 ; RETURN JUST THE HEADER OF THE NOTE
"RTN","DSIO3",134,0)
 I TYP="H" D  Q
"RTN","DSIO3",135,0)
 .S TIUARR=RET,DATA=$$SETGDATA^TIUSRVR1(IEN)
"RTN","DSIO3",136,0)
 .; Set a flag to indicate whether or not a Title is a memer of the
"RTN","DSIO3",137,0)
 .; Clinical Procedures Class (1=Yes and 0=No)
"RTN","DSIO3",138,0)
 .S NCLSS=+$$ISA^TIULX(+$G(^TIU(8925,IEN,0)),+$$CLASS^TIUCP)
"RTN","DSIO3",139,0)
 .; Call INQUIRE to get record
"RTN","DSIO3",140,0)
 .D INQUIRE^TIUSRVR2(IEN,.REC,NCLSS)
"RTN","DSIO3",141,0)
 .D LOADTOP^TIUSRVR1(.REC,IEN,0,DATA,NCLSS)
"RTN","DSIO3",142,0)
 ;
"RTN","DSIO3",143,0)
 ; RETURN THE WHOLE NOTE WITH DISCREET DATA
"RTN","DSIO3",144,0)
 D TGET^TIUSRVR1(.RET,IEN),GETS^DSIO3A(.RET,IEN),ADD(IEN)
"RTN","DSIO3",145,0)
 Q
"RTN","DSIO3",146,0)
 ;
"RTN","DSIO3",147,0)
ADD(IEN) ;
"RTN","DSIO3",148,0)
 N SCR,CT,OUT,ERR,I S SCR="I $P(^(0),U,6)=IEN,$$STATUS^DSIO3(Y)"
"RTN","DSIO3",149,0)
 ; DOES IT HAVE ADDENDA? IF YES THEN GET ADDENDA
"RTN","DSIO3",150,0)
 I $$HASKIDS^TIUSRVLI(IEN) D
"RTN","DSIO3",151,0)
 .S CT=$O(@RET@(""),-1)+1
"RTN","DSIO3",152,0)
 .S @RET@(CT)="------------------------ ADDENDA -----------------------"
"RTN","DSIO3",153,0)
 .D LIST^DIC(8925,,"@;.01;.05;1201;1202","P",,,,"DAD",SCR,,"OUT","ERR") Q:$D(ERR)
"RTN","DSIO3",154,0)
 .S I=0 F  S I=$O(OUT("DILIST",I)) Q:I=""  D
"RTN","DSIO3",155,0)
 ..S @RET@(CT+I)=OUT("DILIST",I,0)
"RTN","DSIO3",156,0)
 Q
"RTN","DSIO3",157,0)
 ;
"RTN","DSIO3",158,0)
DELETE(RET,IEN,JUST) ; RPC: DSIO DELETE A NOTE
"RTN","DSIO3",159,0)
 ;
"RTN","DSIO3",160,0)
 ; RETURN: LITERAL
"RTN","DSIO3",161,0)
 ;
"RTN","DSIO3",162,0)
 Q:'$$AUTH(.RET,IEN,"DELETE RECORD")
"RTN","DSIO3",163,0)
 D NEEDJUST^TIUSRVA(.RET,IEN) I +RET=1&($G(JUST)="") D  Q
"RTN","DSIO3",164,0)
 .S RET="0^Justification for deletion is required."
"RTN","DSIO3",165,0)
 Q:'$$LCK(.RET,IEN)
"RTN","DSIO3",166,0)
 D DELETE^TIUSRVP(.RET,IEN,$G(JUST)) I +RET=0 S RET=1
"RTN","DSIO3",167,0)
 I +RET>1 S $P(RET,U)=0
"RTN","DSIO3",168,0)
 D UNLCK(IEN)
"RTN","DSIO3",169,0)
 Q
"RTN","DSIO3",170,0)
 ;
"RTN","DSIO3",171,0)
SIGN(RET,IEN,SIG) ; RPC: DSIO SIGN A NOTE
"RTN","DSIO3",172,0)
 ;
"RTN","DSIO3",173,0)
 ; RETURN: LITERAL
"RTN","DSIO3",174,0)
 ;
"RTN","DSIO3",175,0)
 ; $$ENCRYP^XUSRB1 - DEBUG
"RTN","DSIO3",176,0)
 ;
"RTN","DSIO3",177,0)
 D SAVED^TIUSRVP1(.RET,IEN) Q:+RET=0
"RTN","DSIO3",178,0)
 Q:'$$LCK(.RET,IEN)
"RTN","DSIO3",179,0)
 N ACT D WHATACT^TIUSRVA(.ACT,IEN)
"RTN","DSIO3",180,0)
 Q:'$$AUTH(.RET,IEN,ACT)
"RTN","DSIO3",181,0)
 D SIGN^TIUSRVP(.RET,IEN,SIG),UNLCK(IEN)
"RTN","DSIO3",182,0)
 S:+RET=0&($P(RET,U,2)="") RET=1
"RTN","DSIO3",183,0)
 Q
"RTN","DSIO3",184,0)
 ;
"RTN","DSIO3",185,0)
LIST(RET,DFN,TITLE,SORT) ; RPC: DSIO NOTES BY DFN AND TITLE
"RTN","DSIO3",186,0)
 ;
"RTN","DSIO3",187,0)
 ; SORT: PAGE#,CT
"RTN","DSIO3",188,0)
 ;
"RTN","DSIO3",189,0)
 ; X-REF: ACLPT = ALL OF PATIENTS PROGRESS NOTES IF
"RTN","DSIO3",190,0)
 ;                ^TIU(8925,"ACLPT",3(DOC CLASS-PROGRESS NOTES),8(DFN),DT,NOTE IEN
"RTN","DSIO3",191,0)
 ;
"RTN","DSIO3",192,0)
 ; STATUS : POINTER TO TIU STATUS FILE (#8925.6)
"RTN","DSIO3",193,0)
 ;
"RTN","DSIO3",194,0)
 ; RETURN: GLOBAL ARRAY - IEN^SUBJECT^STATUS(.05)^ENTRY DATE/TIME(1201)^
"RTN","DSIO3",195,0)
 ;                        AUTHOR/DICTATOR(1202)^VISIT LOCATION(1211)^LINKED DOC(.06)
"RTN","DSIO3",196,0)
 ; LINKED DOC
"RTN","DSIO3",197,0)
 ; ----------
"RTN","DSIO3",198,0)
 ; O:## = ORIGINAL DOC'S IEN
"RTN","DSIO3",199,0)
 ; A:## = ADDENDA DOC'S IEN
"RTN","DSIO3",200,0)
 ;
"RTN","DSIO3",201,0)
 N TNAM,OUT,REC,TO,SCR,ERR,LN S TNAM=TITLE
"RTN","DSIO3",202,0)
 S RET=$NA(^TMP($J,"DSIO LISTRET")),OUT=$NA(^TMP($J,"DSIO TIULIST"))
"RTN","DSIO3",203,0)
 K @RET,@OUT S @RET@(0)="0^Title not found."
"RTN","DSIO3",204,0)
 S TITLE=$$FIND1^DIC(8925.1,,"O",TITLE) Q:TITLE=0
"RTN","DSIO3",205,0)
 S (REC,TO)=0,SCR="I +^(0)=TITLE,$P(^(0),U,2)=DFN,$$STATUS^DSIO3(Y) S TO=TO+1"
"RTN","DSIO3",206,0)
 D LIST^DIC(8925,,"@;1701;.05;1201I;1202","P",,,,"B",SCR,,OUT,"ERR") Q:$D(ERR)
"RTN","DSIO3",207,0)
 I '$O(@OUT@("DILIST",""),-1) S @RET@(0)="Patient has no "_TNAM_" notes." Q
"RTN","DSIO3",208,0)
 D SORT^DSIO2($NA(@OUT@("DILIST")),RET,$G(SORT),$G(TO),-1,"4^5Z")
"RTN","DSIO3",209,0)
 I +@RET@(0)=-1 S $P(@RET@(0),U)=0
"RTN","DSIO3",210,0)
 Q
"RTN","DSIO3",211,0)
 ;
"RTN","DSIO3",212,0)
PARTS(IEN) ;
"RTN","DSIO3",213,0)
 N SCR,SUB,ERR,I,IENS S SCR="I $P(^(0),U,6)=IEN,$$STATUS^DSIO3(Y)"
"RTN","DSIO3",214,0)
 ;
"RTN","DSIO3",215,0)
 ; DOES IT HAVE ADDENDA? IF YES THEN GET ADDENDA
"RTN","DSIO3",216,0)
 I $$HASKIDS^TIUSRVLI(IEN) D  S CT=$O(@RET@(""),-1)
"RTN","DSIO3",217,0)
 .D LIST^DIC(8925,,"@;.01;.05;1201;1202","P",,,,"DAD",SCR,,"SUB","ERR") Q:$D(ERR)
"RTN","DSIO3",218,0)
 .S I=0 F  S I=$O(SUB("DILIST",I)) Q:I=""  D
"RTN","DSIO3",219,0)
 ..K IENS S IENS=+SUB("DILIST",I,0)
"RTN","DSIO3",220,0)
 ..S @RET@(CT)=@RET@(CT)_"A:"_IENS_";"
"RTN","DSIO3",221,0)
 ..S @RET@(CT+I)=REC_U_SUB("DILIST",I,0)_U_$$GET1^DIQ(8925,IENS_",",1211)_U_"O:"_IEN
"RTN","DSIO3",222,0)
 ..S $P(@RET@(CT+I),U,2)=$P(@RET@(CT+I),U,2)_" to "_$P(@RET@(CT),U,2)
"RTN","DSIO3",223,0)
 ;
"RTN","DSIO3",224,0)
 ; IS IT ADDENDA? IF YES THEN GET ORIGINAL DOC
"RTN","DSIO3",225,0)
 I $$HASDAD^TIUSRVLI(IEN) D
"RTN","DSIO3",226,0)
 .; THE $P(^(0),U,6) IS PARENT (P8925'), [0;6] (IEN OF THE PARENT DOC)
"RTN","DSIO3",227,0)
 .S @RET@(CT)=@RET@(CT)_"O:"_$$GET1^DIQ(8925,IEN,.06,"I")
"RTN","DSIO3",228,0)
 Q
"RTN","DSIO3",229,0)
 ;
"RTN","DSIO3",230,0)
STATUS(IEN) ; CHECK THE STATUS OF THE NOTE, CAN THIS USER VIEW IT
"RTN","DSIO3",231,0)
 N RET I '$$AUTH(.RET,IEN,"VIEW") Q 0
"RTN","DSIO3",232,0)
 Q 1
"RTN","DSIO3",233,0)
 ;
"RTN","DSIO3",234,0)
 ;=============================================================================
"RTN","DSIO3",235,0)
 ;                         U T I L I T I E S
"RTN","DSIO3",236,0)
 ;=============================================================================
"RTN","DSIO3",237,0)
 ;
"RTN","DSIO3",238,0)
TITLE(OUT,IEN) ; TIU GET DOCUMENT TITLE
"RTN","DSIO3",239,0)
 N RET S RET="" D GETTITLE^TIUSRVA(.RET,IEN)
"RTN","DSIO3",240,0)
 I +RET<1 S OUT="0^Title not found."
"RTN","DSIO3",241,0)
 Q +RET
"RTN","DSIO3",242,0)
 ;
"RTN","DSIO3",243,0)
AUTH(OUT,IEN,ACT) ; TIU AUTHORIZATION
"RTN","DSIO3",244,0)
 N RET S RET="" D CANDO^TIUSRVA(.RET,IEN,ACT)
"RTN","DSIO3",245,0)
 I +RET=0 D
"RTN","DSIO3",246,0)
 .I $G(OUT)["^TMP(" S @OUT@(0)=RET Q
"RTN","DSIO3",247,0)
 .S OUT=RET
"RTN","DSIO3",248,0)
 Q RET
"RTN","DSIO3",249,0)
 ;
"RTN","DSIO3",250,0)
LCK(OUT,IEN) ; TIU LOCK RECORD
"RTN","DSIO3",251,0)
 ;
"RTN","DSIO3",252,0)
 ; 0 if the LOCK was GRANTED
"RTN","DSIO3",253,0)
 ; 1^<Explanatory Message> if LOCK was DENIED
"RTN","DSIO3",254,0)
 ;
"RTN","DSIO3",255,0)
 ; TRANSFORMED: 0 IS FAIL
"RTN","DSIO3",256,0)
 ;              1 IS PASS
"RTN","DSIO3",257,0)
 ;
"RTN","DSIO3",258,0)
 S OUT="" D LOCK^TIUSRVP(.OUT,IEN) I +OUT=1 S $P(OUT,U)=0 Q OUT
"RTN","DSIO3",259,0)
 Q 1
"RTN","DSIO3",260,0)
 ;
"RTN","DSIO3",261,0)
UNLCK(IEN) ; TIU UNLOCK RECORD
"RTN","DSIO3",262,0)
 N OUT S OUT="" D UNLOCK^TIUSRVP(.OUT,IEN)
"RTN","DSIO3",263,0)
 Q 1
"RTN","DSIO3",264,0)
 ;
"RTN","DSIO3",265,0)
 ;=============================================================================
"RTN","DSIO3",266,0)
 ;                                    I H E
"RTN","DSIO3",267,0)
 ;=============================================================================
"RTN","DSIO3",268,0)
 ;
"RTN","DSIO3",269,0)
SAVE(RET,IEN,DFN,GUID,DIRECT,DTC,DTIE,DTYE,TITLE,FAC,REC,DOC) ; DSIO IHE SAVE
"RTN","DSIO3",270,0)
 ;
"RTN","DSIO3",271,0)
 ; .01    DFN = PATIENT NUMBER
"RTN","DSIO3",272,0)
 ;   1 subfile - GUID
"RTN","DSIO3",273,0)
 ; .01    GUID = GUID
"RTN","DSIO3",274,0)
 ; .02     DTC = DATE/TIME OF CREATION
"RTN","DSIO3",275,0)
 ; .03    DTIE = DATE/TIME OF IMPORT/EXPORT
"RTN","DSIO3",276,0)
 ; .04    DTYE = DOCUMENT TYPE
"RTN","DSIO3",277,0)
 ; .05  DIRECT = DIRECTION (IN/OUT)
"RTN","DSIO3",278,0)
 ; 1.1   TITLE = DOCUMENT TITLE
"RTN","DSIO3",279,0)
 ; 1.2     FAC = SENDING FACILITY/PROVIDER
"RTN","DSIO3",280,0)
 ; 1.3     REC = INTENDED RECIPIENT
"RTN","DSIO3",281,0)
 ; 2       DOC = DOCUMENT CONTENT IN XML
"RTN","DSIO3",282,0)
 ;
"RTN","DSIO3",283,0)
 D ABSURD^DSIO2("GUID,DFN,DIRECT,DTC,DTIE,DTYE,TITLE,FAC,REC") ;W ABSURD
"RTN","DSIO3",284,0)
 N FLG,IPT,VAR,ERR,%X,%Y
"RTN","DSIO3",285,0)
 S GUID=$G(GUID),DFN=$G(DFN),DIRECT=$G(DIRECT),DTC=$G(DTC)
"RTN","DSIO3",286,0)
 S DTIE=$G(DTIE),DTYE=$G(DTYE),TITLE=$G(TITLE),FAC=$G(FAC),REC=$G(REC)
"RTN","DSIO3",287,0)
 S IEN=+$G(IEN),FLG=$S(IEN>0:IEN_",",1:"?+1,")_DFN_","
"RTN","DSIO3",288,0)
 I '$$CHECK^DSIO2($G(DFN)) S RET="-1^Patient entry not found." Q
"RTN","DSIO3",289,0)
 I IEN<1&($L($G(GUID))<36) S RET="-1^New entries must have a GUID." Q
"RTN","DSIO3",290,0)
 S:GUID'="" IPT(19641.62,FLG,.01)=GUID
"RTN","DSIO3",291,0)
 F VAR="DTC","DTIE" D
"RTN","DSIO3",292,0)
 .I @VAR="@" S IPT(19641.62,FLG,$S(VAR=DTC:.02,1:.03))="@" Q
"RTN","DSIO3",293,0)
 .I @VAR'="" S @VAR=$$DT^DSIO2(@VAR) I +@VAR>0 D
"RTN","DSIO3",294,0)
 ..S IPT(19641.62,FLG,$S(VAR="DTC":.02,1:.03))=@VAR
"RTN","DSIO3",295,0)
 S:DTYE'="" IPT(19641.62,FLG,.04)=DTYE
"RTN","DSIO3",296,0)
 S:DIRECT'="" IPT(19641.62,FLG,.05)=DIRECT
"RTN","DSIO3",297,0)
 S:TITLE'="" IPT(19641.62,FLG,1.1)=TITLE
"RTN","DSIO3",298,0)
 S:FAC'="" IPT(19641.62,FLG,1.2)=FAC
"RTN","DSIO3",299,0)
 S:REC'="" IPT(19641.62,FLG,1.3)=REC
"RTN","DSIO3",300,0)
 D UPDATE^DIE("E","IPT",$S(IEN>1:"",1:"IEN"),"ERR")
"RTN","DSIO3",301,0)
 ;I $D(ERR)!((+$G(IEN(1))<1&(+$G(IEN)<1))) D  Q   ;WO ABSURD
"RTN","DSIO3",302,0)
 ;.S RET="-1^"_$G(ERR("DIERR",1,"TEXT",1))
"RTN","DSIO3",303,0)
 S RET=$S(+$G(IEN)>0:IEN,+$G(IEN(1))>0:IEN(1),1:-1) Q:RET=-1
"RTN","DSIO3",304,0)
 ;
"RTN","DSIO3",305,0)
 ; WE CAN'T PROCESS THE ZERO NODE WITH WP^DIE SO INSTEAD OF MERGING
"RTN","DSIO3",306,0)
 ; WE CAN USE %XY^%RCR TO CONCATENATE A SUBSCRIPT
"RTN","DSIO3",307,0)
 ;
"RTN","DSIO3",308,0)
 I $D(DOC)<10 D WP^DIE(19641.62,RET_","_DFN_",",2,"K","@") Q      ;W ABSURD
"RTN","DSIO3",309,0)
 ;I $G(DOC(+$O(DOC(""))))="@" D  Q                                ;WO ABSURD
"RTN","DSIO3",310,0)
 ;.D WP^DIE(19641.62,RET_","_DFN_",",2,"K","@")
"RTN","DSIO3",311,0)
 K ^TMP($J,"DSIOIHE")
"RTN","DSIO3",312,0)
 S %X="DOC(",%Y="^TMP($J,""DSIOIHE"",1" D %XY^%RCR
"RTN","DSIO3",313,0)
 D WP^DIE(19641.62,RET_","_DFN_",",2,"K","^TMP($J,""DSIOIHE"")")
"RTN","DSIO3",314,0)
 K ^TMP($J,"DSIOIHE")
"RTN","DSIO3",315,0)
 Q
"RTN","DSIO3",316,0)
 ;
"RTN","DSIO3",317,0)
IHELIST(RET,DFN,SORT) ; DSIO IHE PATIENT LIST
"RTN","DSIO3",318,0)
 ;
"RTN","DSIO3",319,0)
 ; RETURN:
"RTN","DSIO3",320,0)
 ; COUNT
"RTN","DSIO3",321,0)
 ; IEN^GUID^DATE OF CREATION^DATE OF IMPORT/EXPORT^TYPE^DIRECTION^TITLE^SENDING FAC^
"RTN","DSIO3",322,0)
 ; INTENDED RECIPIENT
"RTN","DSIO3",323,0)
 ;
"RTN","DSIO3",324,0)
 N SCR,FLDS,OUT,ERR,TO S TO=0
"RTN","DSIO3",325,0)
 S RET=$NA(^TMP($J,"DSIOIHEL")),OUT=$NA(^TMP($J,"DSIOIHEP")) K @RET,@OUT
"RTN","DSIO3",326,0)
 S @RET@(0)=-1
"RTN","DSIO3",327,0)
 S SCR="S TO=TO+1",FLDS="@;.01;.02I;.03I;.04;.05;1.1;1.2;1.3"
"RTN","DSIO3",328,0)
 D LIST^DIC(19641.62,","_DFN_",",FLDS,"P",,,,"P",SCR,,OUT,"ERR") Q:$D(ERR)
"RTN","DSIO3",329,0)
 D SORT^DSIO2($NA(@OUT@("DILIST")),RET,$G(SORT),$G(TO),,"3|4^5Z")
"RTN","DSIO3",330,0)
 Q
"RTN","DSIO3",331,0)
 ;
"RTN","DSIO3",332,0)
DOC(RET,GUID,XML) ; DSIO IHE GET DOC
"RTN","DSIO3",333,0)
 N DFN,IENS,FLDS,OUT,ERR,Z,I,LB
"RTN","DSIO3",334,0)
 S RET=$NA(^TMP($J,"DSIOIHED")) K @RET S @RET@(0)="-1^Not found."
"RTN","DSIO3",335,0)
 S DFN=$$FIND1^DIC(19641.6,,"O",GUID,"C") Q:DFN<1
"RTN","DSIO3",336,0)
 S IENS=$$FIND1^DIC(19641.62,","_DFN_",","Q",GUID) Q:IENS<1
"RTN","DSIO3",337,0)
 I $G(XML)=1 D  S:'$D(@RET) @RET@(0)=-1 Q
"RTN","DSIO3",338,0)
 .K @RET D GETS^DIQ(19641.62,IENS_","_DFN_",",2,"E",RET)
"RTN","DSIO3",339,0)
 .K @RET@(19641.62,IENS_","_DFN_",",2,"E")
"RTN","DSIO3",340,0)
 S FLDS="@;.01;.02;.03;.04;.05;1.1;1.2;1.3"
"RTN","DSIO3",341,0)
 D GETS^DIQ(19641.62,IENS_","_DFN_",",FLDS,,"OUT") Q:'$D(OUT)
"RTN","DSIO3",342,0)
 S @RET@(0)="PATIENT^"_$$NAME^DSIO2($$GET1^DIQ(2,DFN_",",.01))
"RTN","DSIO3",343,0)
 S Z=$NA(OUT) F I=1:1 S Z=$Q(@Z) Q:Z=""  D
"RTN","DSIO3",344,0)
 .K LB D FIELD^DID(19641.62,$QS(Z,3),,"LABEL","LB")
"RTN","DSIO3",345,0)
 .S @RET@(I)=$G(LB("LABEL"))_U_@Z
"RTN","DSIO3",346,0)
 .S:$P(@RET@(I),U)="PATIENT" $P(@RET@(I),U,3)=DFN
"RTN","DSIO3",347,0)
 Q
"RTN","DSIO4")
0^9^B258263746
"RTN","DSIO4",1,0)
DSIO4 ;DSS/TFF - DSIO PREGNANCY;06/28/2013 15:19
"RTN","DSIO4",2,0)
 ;;1.0;DSS,INC OPEN SOURCE;;28 Jan 2013;Build 48
"RTN","DSIO4",3,0)
 ;Copyright 1995-2014,Document Storage Systems Inc. All Rights Reserved
"RTN","DSIO4",4,0)
 ;
"RTN","DSIO4",5,0)
 ;
"RTN","DSIO4",6,0)
 ; Documented API and ICRs
"RTN","DSIO4",7,0)
 ; -----------------------
"RTN","DSIO4",8,0)
 ;
"RTN","DSIO4",9,0)
 Q
"RTN","DSIO4",10,0)
 ;
"RTN","DSIO4",11,0)
FFSAVE(RET,DFN,IEN,NAME,DOB,ADDR,PHONE,EDU) ; DSIO SAVE PERSON
"RTN","DSIO4",12,0)
 ;
"RTN","DSIO4",13,0)
 ; THE PURPOSE OF THIS RPC IS TO SAVE A PERSON TO VISTA RELATED TO A
"RTN","DSIO4",14,0)
 ; PATIENT THAT WOULD NOT BE APPROPRIATE TO SAVE TO THE PATIENT FILE (2)
"RTN","DSIO4",15,0)
 ; OR THE PATIENT RELATION FILE WHICH HAS A MANDATE OF PATIENT DEPENDANCY
"RTN","DSIO4",16,0)
 ; OR SPOUSEHOOD. THE PEOPLE IN THIS FILE ARE SEXUAL PARTNERS WHICH
"RTN","DSIO4",17,0)
 ; WARRENTS RECORDING DUE TO A RESULTING PREGNANCY. THIS IS NOT INTENDED
"RTN","DSIO4",18,0)
 ; AS THE PARTNER OF THE SPOUSE BUT THE PERSON'S WHOS CHROMOSOMES HAVE
"RTN","DSIO4",19,0)
 ; MIXED WITH THE CHROMOSOMES OF THE PATIENT(OR NOT, IF THE EGG WAS
"RTN","DSIO4",20,0)
 ; IMPLANTED) TO CREATE A FETUS THUS, UNTIL THE TECHNOLOGY CHANGES,
"RTN","DSIO4",21,0)
 ; ENTRIES CREATED BY THIS RPC ARE SET TO MALE, BUT CAN EASILY BE CHANGED.
"RTN","DSIO4",22,0)
 ;
"RTN","DSIO4",23,0)
 ; EDITING REQUIRES IEN
"RTN","DSIO4",24,0)
 ;
"RTN","DSIO4",25,0)
 ; RETURN:
"RTN","DSIO4",26,0)
 ; IEN OR -1^MESSAGE
"RTN","DSIO4",27,0)
 ;
"RTN","DSIO4",28,0)
 D ABSURD^DSIO2("NAME,DOB,ADDR,PHONE,EDU") ;W ABSURD
"RTN","DSIO4",29,0)
 N FLE,FLG,IPT,I,LOC,VAL,ERR S IEN=+$G(IEN),RET=-1
"RTN","DSIO4",30,0)
 I IEN<1,'$$CHECK^DSIO2($G(DFN)) S RET="-1^Patient entry not found." Q
"RTN","DSIO4",31,0)
 S NAME=$$UP^XLFSTR($G(NAME)),FLE=19641.11
"RTN","DSIO4",32,0)
 I +$G(IEN)>0 S FLG=IEN_","
"RTN","DSIO4",33,0)
 E  S FLG="+1,"
"RTN","DSIO4",34,0)
 I NAME?1.A1","1.A!(NAME="@") S IPT(FLE,FLG,.01)=NAME
"RTN","DSIO4",35,0)
 E  I FLG["+" S RET="-1^Nothing to save or edit." Q
"RTN","DSIO4",36,0)
 S IPT(FLE,FLG,.05)="`"_DFN
"RTN","DSIO4",37,0)
 S:FLG["+" IPT(FLE,FLG,.02)="M"
"RTN","DSIO4",38,0)
 S:$G(DOB)'="" IPT(FLE,FLG,.03)=$S(DOB="@":"@",1:$$DT^DSIO2($G(DOB)))
"RTN","DSIO4",39,0)
 S:$G(EDU)'="" IPT(FLE,FLG,.04)=EDU
"RTN","DSIO4",40,0)
 I $D(ADDR) D
"RTN","DSIO4",41,0)
 .S I="" F  S I=$O(ADDR(I)) Q:I=""  D
"RTN","DSIO4",42,0)
 ..S LOC=$$UP^XLFSTR($P(ADDR(I),U)),VAL=$P(ADDR(I),U,2)
"RTN","DSIO4",43,0)
 ..I LOC[1 S:VAL'="" IPT(FLE,FLG,1.1)=VAL Q
"RTN","DSIO4",44,0)
 ..I LOC[2 S:VAL'="" IPT(FLE,FLG,1.2)=VAL Q
"RTN","DSIO4",45,0)
 ..I LOC[3 S:VAL'="" IPT(FLE,FLG,1.3)=VAL Q
"RTN","DSIO4",46,0)
 ..I LOC="CITY" S:VAL'="" IPT(FLE,FLG,1.4)=VAL Q
"RTN","DSIO4",47,0)
 ..I LOC="STATE" S:VAL'="" IPT(FLE,FLG,1.5)=VAL Q
"RTN","DSIO4",48,0)
 ..I LOC="ZIP" S:VAL'="" IPT(FLE,FLG,1.6)=VAL Q
"RTN","DSIO4",49,0)
 I $D(PHONE) D
"RTN","DSIO4",50,0)
 .S I="" F  S I=$O(PHONE(I)) Q:I=""  D
"RTN","DSIO4",51,0)
 ..S LOC=$$UP^XLFSTR($P(PHONE(I),U)),VAL=$P(PHONE(I),U,2)
"RTN","DSIO4",52,0)
 ..I LOC="H" S:VAL'="" IPT(FLE,FLG,1.7)=VAL Q
"RTN","DSIO4",53,0)
 ..I LOC="MC" S:VAL'="" IPT(FLE,FLG,1.8)=VAL Q
"RTN","DSIO4",54,0)
 ..I LOC="WP" S:VAL'="" IPT(FLE,FLG,1.9)=VAL Q
"RTN","DSIO4",55,0)
 D UPDATE^DIE("E","IPT",$S(+$G(IEN)>0:"",1:"IEN"),"ERR") K IPT
"RTN","DSIO4",56,0)
 ;I $D(ERR)!((+$G(IEN(1))<1&(+$G(IEN)<1))) D  Q ;WO ABSURD
"RTN","DSIO4",57,0)
 ;.S RET="-1^"_$G(ERR("DIERR",1,"TEXT",1))
"RTN","DSIO4",58,0)
 S RET=$S(+$G(IEN)>0:IEN,+$G(IEN(1))>0:IEN(1),1:-1)
"RTN","DSIO4",59,0)
 Q
"RTN","DSIO4",60,0)
 ;
"RTN","DSIO4",61,0)
PERSON(RET,DFN,FIND) ; DSIO GET PERSON
"RTN","DSIO4",62,0)
 N RT,OUT,CT  S RET(0)=-1
"RTN","DSIO4",63,0)
 I +$G(DFN)>0,$G(FIND)="" D  Q
"RTN","DSIO4",64,0)
 .D PERSON1(.RT,DFN,"S") S:+RT>=0 RET(0)=RT
"RTN","DSIO4",65,0)
 .D LIST^DIC(19641.11,,"@","P",,,,,"I $P(^(0),U,5)=DFN",,"OUT")
"RTN","DSIO4",66,0)
 .I $D(OUT) K:RET(0)=-1 RET S CT=$NA(OUT) F  S CT=$Q(@CT) Q:CT=""  D
"RTN","DSIO4",67,0)
 ..Q:$QS(CT,2)<1
"RTN","DSIO4",68,0)
 ..K RT D PERSON1(.RT,DFN,@CT) S:+RT>=0 RET($O(RET(""),-1)+1)=RT
"RTN","DSIO4",69,0)
 D PERSON1(.RT,$G(DFN),$G(FIND)) S RET(0)=RT
"RTN","DSIO4",70,0)
 Q
"RTN","DSIO4",71,0)
 ;
"RTN","DSIO4",72,0)
PERSON1(RET,DFN,FIND) ;
"RTN","DSIO4",73,0)
 ;
"RTN","DSIO4",74,0)
 ; RETURN:
"RTN","DSIO4",75,0)
 ; IEN^NAME^SEX^DOB^EDUCATION^STREET1^STREET2^STREET3^CITY^STATE^
"RTN","DSIO4",76,0)
 ; ZIP^PHONE HOME^PHONE CELL^PHONE WORK^PATIENT^DFN
"RTN","DSIO4",77,0)
 ;
"RTN","DSIO4",78,0)
 ; IF SPOUSE THEN IEN = "S"
"RTN","DSIO4",79,0)
 ;
"RTN","DSIO4",80,0)
 N VP,FLE,IEN,SCR,OUT,I,FLD,FLG S RET=-1,FLE=19641.11
"RTN","DSIO4",81,0)
 S FIND=$$UP^XLFSTR($G(FIND)) Q:FIND=""
"RTN","DSIO4",82,0)
 I +FIND>0 S IEN=$$FIND1^DIC(19641.11,,"A",FIND)
"RTN","DSIO4",83,0)
 E  I +FIND<1,+$G(DFN)>0 D  Q:$P(RET,U,2)'=""
"RTN","DSIO4",84,0)
 .I '$$CHECK^DSIO2($G(DFN)) S RET="-1^Patient entry not found." Q
"RTN","DSIO4",85,0)
 .I FIND="SPOUSE"!(FIND="S") D SPOUSE(.VP,DFN) D
"RTN","DSIO4",86,0)
 ..I +VP'=-1 S FLE=$TR($P(VP,"(",2),",",""),IEN=+VP Q
"RTN","DSIO4",87,0)
 ..S RET="-1^Spouse not found associated to patient."
"RTN","DSIO4",88,0)
 .E  I FIND'="SPOUSE"&(FIND'="S")&(FIND?1.A1","1.A) D
"RTN","DSIO4",89,0)
 ..S SCR="I $P(^(0),U)=FIND,$P(^(0),U,5)=DFN"
"RTN","DSIO4",90,0)
 ..D LIST^DIC(19641.11,,"@","P",1,,,,SCR,,"OUT")
"RTN","DSIO4",91,0)
 ..S IEN=$G(OUT("DILIST",1,0)) Q:+IEN>0
"RTN","DSIO4",92,0)
 ..D SPOUSE(.VP,DFN) I +VP>0 S FLE=$TR($P(VP,"(",2),",",""),IEN=+VP Q
"RTN","DSIO4",93,0)
 ..S RET="-1^Person not associated to patient."
"RTN","DSIO4",94,0)
 E  I +FIND<1,+$G(DFN)<1 D  Q:$P(RET,U,2)'=""
"RTN","DSIO4",95,0)
 .I FIND="SPOUSE"!(FIND="S") S RET="-1^Spouse is invalid without a DFN." Q
"RTN","DSIO4",96,0)
 .S IEN=$$FIND1^DIC(19641.11,,"X",FIND)
"RTN","DSIO4",97,0)
 I +$G(IEN)<1 S RET="-1^Unable to find person." Q
"RTN","DSIO4",98,0)
 S RET=$S($D(VP):"S",1:IEN)                             ;IEN OR "S" FOR SPOUSE
"RTN","DSIO4",99,0)
 S RET=RET_U_$$NAME^DSIO2($$GET1^DIQ(FLE,IEN_",",.01))           ;NAME
"RTN","DSIO4",100,0)
 S RET=RET_U_$$GET1^DIQ(FLE,IEN_",",.02)                         ;SEX
"RTN","DSIO4",101,0)
 S RET=RET_U_$$FMTE^XLFDT($$GET1^DIQ(FLE,IEN_",",.03,"I"),"5DZ") ;DOB
"RTN","DSIO4",102,0)
 S RET=RET_U_$S('$D(VP):$$GET1^DIQ(19641.11,IEN_",",.04),1:"")   ;EDUCATION
"RTN","DSIO4",103,0)
 F I=6:1:14 K FLD D  D BLD
"RTN","DSIO4",104,0)
 .I I=6 S FLD=$S(FLE=19641.11:1.1,FLE=2:.111,FLE=408.13:1.2,1:"") Q
"RTN","DSIO4",105,0)
 .I I=7 S FLD=$S(FLE=19641.11:1.2,FLE=2:.112,FLE=408.13:1.3,1:"") Q
"RTN","DSIO4",106,0)
 .I I=8 S FLD=$S(FLE=19641.11:1.3,FLE=2:.113,FLE=408.13:1.4,1:"") Q
"RTN","DSIO4",107,0)
 .I I=9 S FLD=$S(FLE=19641.11:1.4,FLE=2:.114,FLE=408.13:1.5,1:"") Q
"RTN","DSIO4",108,0)
 .I I=10 S FLD=$S(FLE=19641.11:1.5,FLE=2:.115,FLE=408.13:1.6,1:""),FLG="ST" Q
"RTN","DSIO4",109,0)
 .I I=11 S FLD=$S(FLE=19641.11:1.6,FLE=2:.116,FLE=408.13:1.7,1:"") Q
"RTN","DSIO4",110,0)
 .I I=12 S FLD=$S(FLE=19641.11:1.7,FLE=2:.131,FLE=408.13:1.8,1:"") Q
"RTN","DSIO4",111,0)
 .I I=13 S FLD=$S(FLE=19641.11:1.8,FLE=2:.134,FLE=408.13:"",1:"") Q
"RTN","DSIO4",112,0)
 .I I=14 S FLD=$S(FLE=19641.11:1.9,FLE=2:.132,FLE=408.13:"",1:"") Q
"RTN","DSIO4",113,0)
 F I=12:1:14 S $P(RET,U,I)=$$FORMAT^DSIO3V2($P(RET,U,I))
"RTN","DSIO4",114,0)
 I +$G(DFN)<1,FLE=19641.11 S DFN=$$GET1^DIQ(FLE,IEN_",",.05,"I")
"RTN","DSIO4",115,0)
 S RET=RET_U_$$NAME^DSIO2($$GET1^DIQ(2,DFN_",",.01))_U_DFN
"RTN","DSIO4",116,0)
 Q
"RTN","DSIO4",117,0)
 ;
"RTN","DSIO4",118,0)
BLD ; BUILD AND/OR TRANSFORM
"RTN","DSIO4",119,0)
 I $G(FLG)="ST" S $P(RET,U,I)=$$GET1^DIQ(5,$$GET1^DIQ(FLE,IEN_",",FLD,"I")_",",1) K FLG Q
"RTN","DSIO4",120,0)
 S $P(RET,U,I)=$$GET1^DIQ(FLE,IEN_",",FLD)
"RTN","DSIO4",121,0)
 Q
"RTN","DSIO4",122,0)
 ;
"RTN","DSIO4",123,0)
SPOUSE(RET,DFN) ; GET SPOUSE
"RTN","DSIO4",124,0)
 N OUT,ERR
"RTN","DSIO4",125,0)
 D LIST^DIC(408.12,,"@;.03I","P",,,,,"I +^(0)=DFN,$P(^(0),U,2)=2",,"OUT","ERR")
"RTN","DSIO4",126,0)
 I '$D(OUT("DILIST",1,0)) S RET="-1^Spouse not found." Q
"RTN","DSIO4",127,0)
 S RET=$P(OUT("DILIST",$O(OUT("DILIST",""),-1),0),U,2)
"RTN","DSIO4",128,0)
 Q
"RTN","DSIO4",129,0)
 ;
"RTN","DSIO4",130,0)
PERIEN(DFN,FOF) ; GET PERSON IEN
"RTN","DSIO4",131,0)
 N FRT S DFN=$G(DFN),FOF=$$UP^XLFSTR($G(FOF))
"RTN","DSIO4",132,0)
 Q:FOF="U"!(FOF="UNSPECIFIED") "U"
"RTN","DSIO4",133,0)
 D PERSON1(.FRT,DFN,FOF) I +FRT>0 Q +FRT
"RTN","DSIO4",134,0)
 I $P(FRT,U)="S" Q "S"
"RTN","DSIO4",135,0)
 Q ""
"RTN","DSIO4",136,0)
 ;
"RTN","DSIO4",137,0)
OBS(RET,DFN,IEN,PIEN,BIEN,DATE,CAT,SYS,CODE,DESC,VAL) ; DSIO SAVE OBSERVATION
"RTN","DSIO4",138,0)
 ;
"RTN","DSIO4",139,0)
 ; IEN = ID ^ ###
"RTN","DSIO4",140,0)
 ; --------------
"RTN","DSIO4",141,0)
 ; IF IEN  (PA) - PATIENT OBSERVATION
"RTN","DSIO4",142,0)
 ; IF PIEN (PG) - PATIENT PREGNANCY OBSERVATION
"RTN","DSIO4",143,0)
 ; IF BIEN (BA) - BABY OBSERVATION
"RTN","DSIO4",144,0)
 ;
"RTN","DSIO4",145,0)
 ; RETURN: IEN OR -1^MESSAGE
"RTN","DSIO4",146,0)
 ;
"RTN","DSIO4",147,0)
 D ABSURD^DSIO2("PIEN,BIEN,DATE,CAT,SYS,CODE,DESC,VAL") ;W ABSURD
"RTN","DSIO4",148,0)
 N FLG,IPT,PREG,BABY,CIPT,ERR S IEN=+$G(IEN),RET=-1
"RTN","DSIO4",149,0)
 I IEN<1,'$$CHECK^DSIO2($G(DFN)) S RET="-1^Patient entry not found." Q
"RTN","DSIO4",150,0)
 I IEN>0 S FLG=IEN_","
"RTN","DSIO4",151,0)
 E  I IEN<1 S FLG="+1," D
"RTN","DSIO4",152,0)
 .S DATE=$G(DATE,$$NOW^XLFDT)
"RTN","DSIO4",153,0)
 .S:DATE="@" DATE=$$NOW^XLFDT ;W ABSURD
"RTN","DSIO4",154,0)
 .S IPT(19641.12,FLG,.02)="`"_DFN
"RTN","DSIO4",155,0)
 S IPT(19641.12,FLG,.07)="`"_DUZ
"RTN","DSIO4",156,0)
 I $G(DATE)'="" D  Q:$P(RET,U,2)'=""
"RTN","DSIO4",157,0)
 .I DATE="@" S IPT(19641.12,FLG,.01)="@" Q
"RTN","DSIO4",158,0)
 .S DATE=$$DT^DSIO2(DATE) I +DATE>0 S IPT(19641.12,FLG,.01)=DATE Q
"RTN","DSIO4",159,0)
 .I FLG["+1" S RET="-1^New entries must have a valid observation date." Q
"RTN","DSIO4",160,0)
 .S RET="-1^The new date value is invalid."
"RTN","DSIO4",161,0)
 ;
"RTN","DSIO4",162,0)
 ; CREATE (OR EDIT) THE ENTRY SO THAT WE CAN GET PASSED THE SCREENS
"RTN","DSIO4",163,0)
 D UPDATE^DIE("E","IPT",$S(+$G(IEN)>0:"",1:"IEN"),"ERR") K IPT
"RTN","DSIO4",164,0)
 ;I $D(ERR)!((+$G(IEN(1))<1&(+$G(IEN)<1))) D  Q ;WO ABSURD
"RTN","DSIO4",165,0)
 ;.S RET="-1^"_$G(ERR("DIERR",1,"TEXT",1))
"RTN","DSIO4",166,0)
 S RET=$S(+$G(IEN)>0:IEN,+$G(IEN(1))>0:IEN(1),1:-1) Q:RET=-1
"RTN","DSIO4",167,0)
 ;
"RTN","DSIO4",168,0)
 ; THE FETUS/BABY OBSERVATION VALIDATION
"RTN","DSIO4",169,0)
 S BIEN=$G(BIEN),PIEN=$G(PIEN),DFN=$G(DFN,$$GET1^DIQ(19641.12,RET_",",.02,"I"))
"RTN","DSIO4",170,0)
 I BIEN'="" D  D:$D(IPT) UPDATE^DIE("E","IPT") K IPT Q:$P(RET,U,2)'=""
"RTN","DSIO4",171,0)
 .I BIEN="@" S IPT(19641.12,RET_",",.03)="@" D  Q
"RTN","DSIO4",172,0)
 ..I +PIEN>0,$$GET1^DIQ(19641.13,PIEN_",",.03,"I")'=DFN D  Q
"RTN","DSIO4",173,0)
 ...S RET="-1^Pregnancy does not belong to patient."
"RTN","DSIO4",174,0)
 ..S IPT(19641.12,RET_",",.04)=$S(PIEN="@":"@",+PIEN>0:"`"_PIEN,1:"")
"RTN","DSIO4",175,0)
 .I +BIEN>0 D  Q
"RTN","DSIO4",176,0)
 ..I PIEN="@" D  Q
"RTN","DSIO4",177,0)
 ...S RET="-1^Cannot delete a pregnancy and set fetus/baby."
"RTN","DSIO4",178,0)
 ..I +PIEN>0 D  Q
"RTN","DSIO4",179,0)
 ...I $$GET1^DIQ(19641.13,PIEN_",",.03,"I")'=DFN D  Q
"RTN","DSIO4",180,0)
 ....S RET="-1^Pregnancy does not belong to patient."
"RTN","DSIO4",181,0)
 ...S BIEN=$$GETBAB(DFN,PIEN,BIEN)
"RTN","DSIO4",182,0)
 ...I 'BIEN S RET="-1^This patient/pregnancy/(fetus/baby) combination is invalid." Q
"RTN","DSIO4",183,0)
 ...S IPT(19641.12,RET_",",.03)="`"_BIEN,IPT(19641.12,RET_",",.04)="`"_PIEN
"RTN","DSIO4",184,0)
 ..I +PIEN<1 D
"RTN","DSIO4",185,0)
 ...S PREG=+$$GET1^DIQ(19641.12,RET_",",.04,"I")
"RTN","DSIO4",186,0)
 ...I PREG>0 D  Q
"RTN","DSIO4",187,0)
 ....S BIEN=$$GETBAB(DFN,PREG,BIEN)
"RTN","DSIO4",188,0)
 ....I 'BIEN S RET="-1^This patient/pregnancy/(fetus/baby) combination is invalid." Q
"RTN","DSIO4",189,0)
 ....S IPT(19641.12,RET_",",.03)="`"_BIEN
"RTN","DSIO4",190,0)
 ...I PREG<1 S IPT(19641.12,RET_",",.03)="@" D  Q
"RTN","DSIO4",191,0)
 ....S RET="-1^Cannot set a fetus/baby without a pregnancy."
"RTN","DSIO4",192,0)
 E  I BIEN="" D  D:$D(IPT) UPDATE^DIE("E","IPT") K IPT Q:$P(RET,U,2)'=""
"RTN","DSIO4",193,0)
 .S BABY=+$$GET1^DIQ(19641.12,RET_",",.03,"I")
"RTN","DSIO4",194,0)
 .I PIEN="@" D  Q
"RTN","DSIO4",195,0)
 ..I BABY>0 S RET="-1^Cannot delete a pregnancy with existing fetus/baby entry."
"RTN","DSIO4",196,0)
 .I +PIEN>0 D  Q
"RTN","DSIO4",197,0)
 ..I $$GET1^DIQ(19641.13,PIEN_",",.03,"I")'=DFN D  Q
"RTN","DSIO4",198,0)
 ...S RET="-1^Pregnancy does not belong to patient."
"RTN","DSIO4",199,0)
 ..I BABY>0 D  Q
"RTN","DSIO4",200,0)
 ...S BABY=$$GETBAB(DFN,PIEN,BABY)
"RTN","DSIO4",201,0)
 ...I 'BABY S RET="-1^This patient/pregnancy/(fetus/baby) combination is invalid." Q
"RTN","DSIO4",202,0)
 ...S IPT(19641.12,RET_",",.04)="`"_PIEN
"RTN","DSIO4",203,0)
 ..I BABY<1 D
"RTN","DSIO4",204,0)
 ...I $$GET1^DIQ(19641.13,PIEN_",",.03,"I")'=DFN D  Q
"RTN","DSIO4",205,0)
 ....S RET="-1^Pregnancy does not belong to patient."
"RTN","DSIO4",206,0)
 ...S IPT(19641.12,RET_",",.04)="`"_PIEN
"RTN","DSIO4",207,0)
 ;
"RTN","DSIO4",208,0)
 I $G(CODE)'="" D  Q:$P(RET,U,2)'=""
"RTN","DSIO4",209,0)
 .S SYS=$S($G(SYS)["L":"LNC",$G(SYS)["S":"SCT",1:"")
"RTN","DSIO4",210,0)
 .I SYS=""&(CODE'="@") D  Q
"RTN","DSIO4",211,0)
 ..S RET="-1^The coding classification needs to be defined."
"RTN","DSIO4",212,0)
 .S IPT(19641.12,RET_",",.06)=SYS_$S((SYS'=""&(CODE'="@")):".",1:"")_$$CODE(SYS,CODE)
"RTN","DSIO4",213,0)
 I $G(CAT)'="" D
"RTN","DSIO4",214,0)
 .I $G(CAT)'="@" S CIPT(19641.122,"?+1,",.01)=$$UP^XLFSTR(CAT) D
"RTN","DSIO4",215,0)
 ..D UPDATE^DIE("E","CIPT","CATP")
"RTN","DSIO4",216,0)
 .I $G(CATP(1))'=""!(CAT="@") S IPT(19641.12,RET_",",.05)=$S(CAT="@":"@",1:"`"_$G(CATP(1)))
"RTN","DSIO4",217,0)
 S:$G(DESC)'="" IPT(19641.12,RET_",",1)=DESC
"RTN","DSIO4",218,0)
 S:$G(VAL)'="" IPT(19641.12,RET_",",2)=VAL
"RTN","DSIO4",219,0)
 D:$D(IPT) UPDATE^DIE("E","IPT",,"ERR") K IPT
"RTN","DSIO4",220,0)
 ;I $D(ERR)!((+$G(IEN(1))<1&(+$G(IEN)<1))) D  Q ;WO ABSURD
"RTN","DSIO4",221,0)
 ;.S RET="-1^"_$G(ERR("DIERR",1,"TEXT",1))
"RTN","DSIO4",222,0)
 Q
"RTN","DSIO4",223,0)
 ;
"RTN","DSIO4",224,0)
GETBAB(DFN,PIEN,BCT) ; GET THE FETUS/BABY IEN BY BABY COUNT OF PREGNANCY
"RTN","DSIO4",225,0)
 Q:$G(DFN)=""!($G(PIEN)="")!($G(BCT)="") 0
"RTN","DSIO4",226,0)
 Q:$$GET1^DIQ(19641.13,PIEN_",",.03,"I")'=DFN 0
"RTN","DSIO4",227,0)
 N VAL,IEN,IPT S VAL(1)=DFN,VAL(2)=PIEN,VAL(3)=BCT
"RTN","DSIO4",228,0)
 S IEN=$$FIND1^DIC(19641.112,,"QK",.VAL,"C") Q:IEN IEN
"RTN","DSIO4",229,0)
 S IPT(19641.112,"+1,",.01)=BCT
"RTN","DSIO4",230,0)
 S IPT(19641.112,"+1,",.02)=DFN
"RTN","DSIO4",231,0)
 S IPT(19641.112,"+1,",.03)=PIEN
"RTN","DSIO4",232,0)
 D UPDATE^DIE(,"IPT","IEN")
"RTN","DSIO4",233,0)
 Q +$G(IEN(1))
"RTN","DSIO4",234,0)
 ;
"RTN","DSIO4",235,0)
CODE(SYS,CD) ; TRANSFORM AND LOOKUP CODE
"RTN","DSIO4",236,0)
 Q:CD="@" CD
"RTN","DSIO4",237,0)
 N IEN,CODE,CK
"RTN","DSIO4",238,0)
 I SYS="LNC" D
"RTN","DSIO4",239,0)
 .S IEN=+CD,CK=$P(CD,"-",2)
"RTN","DSIO4",240,0)
 .I $$FIND1^DIC(95.3,,"A",IEN)&($$GET1^DIQ(95.3,IEN_",",15)=CK) S CODE=IEN
"RTN","DSIO4",241,0)
 I SYS="SCT" D
"RTN","DSIO4",242,0)
 .S IEN=$$FIND1^DIC(757.02,,"O",CD,"CODE")
"RTN","DSIO4",243,0)
 .I +IEN>0,$$GET1^DIQ(757.02,IEN_",",1)=CD S CODE=IEN
"RTN","DSIO4",244,0)
 Q $S($G(CODE)'="":"`"_CODE,1:"")
"RTN","DSIO4",245,0)
 ;
"RTN","DSIO4",246,0)
OBG(RET,DFN,IEN,PIEN,BIEN,FDT,TDT,CAT,SORT) ; DSIO GET OBSERVATIONS
"RTN","DSIO4",247,0)
 ;
"RTN","DSIO4",248,0)
 ; RETURN:
"RTN","DSIO4",249,0)
 ; GLOBAL ARRAY - IEN^DATE^PATIENT^DFN^BABY^BIEN^PREGNANCY^PIEN^CAT^SYS
"RTN","DSIO4",250,0)
 ;                |CODE^UPDATE BY^UPDATE BY IEN^DESC^VAL
"RTN","DSIO4",251,0)
 ;
"RTN","DSIO4",252,0)
 N OUT,SCR,TO,FLG,LIST,I,Z S TO=0,FLG="P",CAT=$$UP^XLFSTR($G(CAT))
"RTN","DSIO4",253,0)
 S OUT=$NA(^TMP($J,"DSIO OBG")),RET=$NA(^TMP($J,"DSIO OBG-RET"))
"RTN","DSIO4",254,0)
 K @OUT,@RET S @RET@(0)=-1
"RTN","DSIO4",255,0)
 I +$G(IEN)>0 D  Q
"RTN","DSIO4",256,0)
 .I '$$FIND1^DIC(19641.12,,"A",IEN) S @RET@(0)="-1^Invalid IEN." Q
"RTN","DSIO4",257,0)
 .D OBG1(.RET,IEN,1) S:$G(@RET@(1))'="" @RET@(0)=1
"RTN","DSIO4",258,0)
 I +$G(DFN)>0,'$$CHECK^DSIO2($G(DFN)) S @RET@(0)="-1^Patient entry not found." Q
"RTN","DSIO4",259,0)
 S FDT=$G(FDT),TDT=$G(TDT) F VAR="FDT","TDT" I @VAR'="" D
"RTN","DSIO4",260,0)
 .S @VAR=$$DT^DSIO2(@VAR) I @VAR=-1 S @RET@(0)="-1^Invaild date format"
"RTN","DSIO4",261,0)
 I FDT'="" S FDT=FDT-.000001,FLG="PB" D
"RTN","DSIO4",262,0)
 .I TDT'="",TDT<FDT S @RET@(0)="-1^To date is less than from date." Q
"RTN","DSIO4",263,0)
 Q:$P(@RET@(0),U,2)'=""
"RTN","DSIO4",264,0)
 I CAT'="" S CAT=$$FIND1^DIC(19641.122,,"X",CAT) I +CAT<1 D  Q
"RTN","DSIO4",265,0)
 .S @RET@(0)="-1^Unknown category."
"RTN","DSIO4",266,0)
 S:+$G(DFN)>0 SCR=$G(SCR)_$S('$D(SCR):"I ",1:"")_"$P(^(0),U,2)=DFN"
"RTN","DSIO4",267,0)
 S:+$G(PIEN)>0 SCR=$G(SCR)_$S('$D(SCR):"I ",1:",")_"$P(^(0),U,4)=PIEN"
"RTN","DSIO4",268,0)
 S:+$G(BIEN)>0 SCR=$G(SCR)_$S('$D(SCR):"I ",1:",")_"$P(^(0),U,3)=BIEN"
"RTN","DSIO4",269,0)
 S:+$G(CAT)>0 SCR=$G(SCR)_$S('$D(SCR):"I ",1:",")_"$P(^(0),U,5)=CAT"
"RTN","DSIO4",270,0)
 S:TDT'="" SCR=$G(SCR)_$S('$D(SCR):"I ",1:",")_"$P(^(0),U)'>TDT"
"RTN","DSIO4",271,0)
 S SCR=$G(SCR)_$S($D(SCR):" ",1:"")_"S TO=TO+1"
"RTN","DSIO4",272,0)
 D LIST^DIC(19641.12,,"@",FLG,,$G(FDT),,"D",$G(SCR),,"LIST") I $D(LIST) D
"RTN","DSIO4",273,0)
 .S I=1,Z=$NA(LIST) F  S Z=$Q(@Z) Q:Z=""  D
"RTN","DSIO4",274,0)
 ..Q:$QS(Z,2)<1
"RTN","DSIO4",275,0)
 ..D OBG1(.OUT,@Z,I) S I=I+1
"RTN","DSIO4",276,0)
 .I $G(SORT)'="" D SORT^DSIO2($NA(@OUT),RET,$G(SORT),$G(TO))
"RTN","DSIO4",277,0)
 .E  K @RET M RET=OUT S @RET@(0)=TO
"RTN","DSIO4",278,0)
 Q
"RTN","DSIO4",279,0)
 ;
"RTN","DSIO4",280,0)
OBG1(ARY,IEN,ND) ;
"RTN","DSIO4",281,0)
 N OUT,CT D GETS^DIQ(19641.12,IEN_",","*","IE","OUT")
"RTN","DSIO4",282,0)
 I $D(OUT) S @ARY@(ND)=IEN,CT=$NA(OUT) F  S CT=$Q(@CT) Q:CT=""  D
"RTN","DSIO4",283,0)
 .; SET EXTERNAL VALUES
"RTN","DSIO4",284,0)
 .I $QS(CT,4)="E" D  Q
"RTN","DSIO4",285,0)
 ..I ".02,.03,.05,.07"[$QS(CT,3) S @ARY@(ND)=@ARY@(ND)_U_$$NAME^DSIO2(@CT) Q
"RTN","DSIO4",286,0)
 ..S @ARY@(ND)=@ARY@(ND)_U_@CT
"RTN","DSIO4",287,0)
 .; WHEN EXTERNAL AND INTERNAL VALUES ARE THE SAME
"RTN","DSIO4",288,0)
 .Q:"1,2"[$QS(CT,3)
"RTN","DSIO4",289,0)
 .; DATE TRANSFORMS
"RTN","DSIO4",290,0)
 .I $QS(CT,3)=".01" S $P(@ARY@(ND),U,2)=$$FMTE^XLFDT(@CT,"5Z") Q
"RTN","DSIO4",291,0)
 .I $QS(CT,3)=".04" S $P(@ARY@(ND),U,7)=$$FMTE^XLFDT($$GET1^DIQ(19641.13,@CT_",",.01,"I"),"5Z")
"RTN","DSIO4",292,0)
 .; CODE TRANSFORM
"RTN","DSIO4",293,0)
 .I $QS(CT,3)=".06" D  Q
"RTN","DSIO4",294,0)
 ..I @CT["LEX" S $P(@ARY@(ND),U,10)="SNOMED CT|"_$$GET1^DIQ(757.02,+@CT_",",1)
"RTN","DSIO4",295,0)
 ..I @CT["LAB" S $P(@ARY@(ND),U,10)="LOINC|"_$$GET1^DIQ(95.3,+@CT_",",.01)
"RTN","DSIO4",296,0)
 .; ADDITIONAL PIECE FOR IEN (PATIENT,BABY,PREGNANCY,USER)
"RTN","DSIO4",297,0)
 .I ".02,.03,.04,.07"[$QS(CT,3) S @ARY@(ND)=@ARY@(ND)_U_@CT
"RTN","DSIO4",298,0)
 Q
"RTN","DSIO4",299,0)
 ;
"RTN","DSIO4",300,0)
PREG(RET,DFN,IEN,STRT,TYP,FOF,EDD,END,OBP,PFAC) ; DSIO SAVE PREG DETAILS
"RTN","DSIO4",301,0)
 ;
"RTN","DSIO4",302,0)
 ; CREATE, UPDATE, OR DELETE A PREGNANCY LOG
"RTN","DSIO4",303,0)
 ;
"RTN","DSIO4",304,0)
 ; X-REFS ON EDD AND STATUS
"RTN","DSIO4",305,0)
 ; IF EDD>DT THEN UPDATE WV PATIENT .13 CURRENTLY PREGNANT TO YES
"RTN","DSIO4",306,0)
 ;  AND .14 EDC WITH THE EDD VALUE
"RTN","DSIO4",307,0)
 ;
"RTN","DSIO4",308,0)
 ; THE GUI DOES NOT SEE A FUTURE OF THE OB BEING INTERNAL SO DEFAULT OBP TO
"RTN","DSIO4",309,0)
 ; NVA.OBP; HOWEVER THE OB CAN ALSO BE VA.OBP FOR INTERNAL. AGAIN, THE SAME
"RTN","DSIO4",310,0)
 ; IS TRUE FOR PFAC.
"RTN","DSIO4",311,0)
 ;
"RTN","DSIO4",312,0)
 ; RETURN: IEN OR -1^MESSAGE
"RTN","DSIO4",313,0)
 ;
"RTN","DSIO4",314,0)
 D ABSURD^DSIO2("STRT,TYP,FOF,EDD,END,OBP,PFAC") ;W ABSURD
"RTN","DSIO4",315,0)
 N FLG,IPT,VAR,FRT,ERR S IEN=+$G(IEN),RET=-1
"RTN","DSIO4",316,0)
 I IEN<1,'$$CHECK^DSIO2($G(DFN)) S RET="-1^Patient entry not found." Q
"RTN","DSIO4",317,0)
 I IEN>0 S FLG=IEN_"," D
"RTN","DSIO4",318,0)
 .I '$$GET1^DIQ(19641.13,FLG,.03,"I") S IPT(19641.13,FLG,.03)="`"_DFN
"RTN","DSIO4",319,0)
 E  I IEN<1 S FLG="+1," D
"RTN","DSIO4",320,0)
 .S IPT(19641.13,FLG,.01)=$$NOW^XLFDT
"RTN","DSIO4",321,0)
 .S IPT(19641.13,FLG,.03)="`"_DFN
"RTN","DSIO4",322,0)
 S IPT(19641.13,FLG,1.1)="`"_DUZ
"RTN","DSIO4",323,0)
 S STRT=$G(STRT),EDD=$G(EDD),END=$G(END) F VAR="STRT","EDD","END" D
"RTN","DSIO4",324,0)
 .I @VAR'=""&(@VAR'="@") S @VAR=$$DT^DSIO2(@VAR) I +@VAR<0 S @VAR=""
"RTN","DSIO4",325,0)
 S:STRT'="" IPT(19641.13,FLG,.02)=STRT
"RTN","DSIO4",326,0)
 S:EDD'="" IPT(19641.13,FLG,.06)=EDD
"RTN","DSIO4",327,0)
 S:END'="" IPT(19641.13,FLG,.07)=END
"RTN","DSIO4",328,0)
 S TYP=$G(TYP),TYP=$S($E(TYP,1)="C":"C",$E(TYP,1)="H":"H",1:"")
"RTN","DSIO4",329,0)
 I TYP="" D
"RTN","DSIO4",330,0)
 .I EDD>DT S TYP="C"
"RTN","DSIO4",331,0)
 .E  I EDD<DT S TYP="H"
"RTN","DSIO4",332,0)
 I END'="",END<$$NOW^XLFDT S TYP="H"
"RTN","DSIO4",333,0)
 S OBP=$G(OBP),PFAC=$G(PFAC) F VAR="OBP","PFAC" D
"RTN","DSIO4",334,0)
 .Q:@VAR="@"
"RTN","DSIO4",335,0)
 .I $$FIND1^DIC(19641.1,,"A","`"_@VAR) S @VAR="NVA.`"_@VAR Q
"RTN","DSIO4",336,0)
 .S @VAR=""
"RTN","DSIO4",337,0)
 S:OBP'="" IPT(19641.13,FLG,.08)=OBP
"RTN","DSIO4",338,0)
 S:PFAC'="" IPT(19641.13,FLG,.09)=PFAC
"RTN","DSIO4",339,0)
 D UPDATE^DIE("E","IPT",$S(+$G(IEN)>0:"",1:"IEN"),"ERR") K IPT
"RTN","DSIO4",340,0)
 ;I $D(ERR)!((+$G(IEN(1))<1&(+$G(IEN)<1))) D  Q ;WO ABSURD
"RTN","DSIO4",341,0)
 ;.S RET="-1^"_$G(ERR("DIERR",1,"TEXT",1))
"RTN","DSIO4",342,0)
 S RET=$S(+$G(IEN)>0:IEN,+$G(IEN(1))>0:IEN(1),1:-1)
"RTN","DSIO4",343,0)
 I TYP'="" S IPT(19641.13,RET_",",.04)=TYP
"RTN","DSIO4",344,0)
 D PERSON1(.FRT,$G(DFN),$G(FOF)) I +FRT>=0 D
"RTN","DSIO4",345,0)
 .S IPT(19641.13,RET_",",.05)=$$UP^XLFSTR($P(FRT,U,2))_$S($P(FRT,U)="S":"|S",1:"")
"RTN","DSIO4",346,0)
 I $G(FOF)="U"!($G(FOF)="UNSPECIFIED") D
"RTN","DSIO4",347,0)
 .S IPT(19641.13,RET_",",.05)="UNSPECIFIED"
"RTN","DSIO4",348,0)
 D:$D(IPT) UPDATE^DIE(,"IPT")
"RTN","DSIO4",349,0)
 I $G(FOF)="@" S IPT(19641.13,RET_",",.05)="" D UPDATE^DIE(,"IPT")
"RTN","DSIO4",350,0)
 Q
"RTN","DSIO4",351,0)
 ;
"RTN","DSIO4",352,0)
PREGG(RET,DFN,IEN) ; DSIO GET PREG DETAILS
"RTN","DSIO4",353,0)
 ;
"RTN","DSIO4",354,0)
 ; RETURN:
"RTN","DSIO4",355,0)
 ; IEN^STRT^PATIENT^DFN^TYP^FOF^FOF IEN^EDD^END^OBP^OBP IEN^PFAC^PFAC IEN
"RTN","DSIO4",356,0)
 ; ^UPDATE BY^UPDATE BY IEN^BABY;IEN |BABY;IEN
"RTN","DSIO4",357,0)
 ;
"RTN","DSIO4",358,0)
 ; ONLY FROM THE NON-VA ENTITIES FILE
"RTN","DSIO4",359,0)
 ;
"RTN","DSIO4",360,0)
 N LIST,I,Z,FROM S RET(0)=-1
"RTN","DSIO4",361,0)
 I +$G(IEN)>0 D  Q
"RTN","DSIO4",362,0)
 .I '$$FIND1^DIC(19641.13,,"A",IEN) S RET(0)="-1^Invalid IEN." Q
"RTN","DSIO4",363,0)
 .D PREGG1(.RET,IEN,0)
"RTN","DSIO4",364,0)
 I '$$CHECK^DSIO2($G(DFN)) S RET(0)="-1^Patient entry not found." Q
"RTN","DSIO4",365,0)
 S FROM(1)=DFN
"RTN","DSIO4",366,0)
 D LIST^DIC(19641.13,,"@","P",,".FROM",,"P","I $P(^(0),U,3)=DFN",,"LIST")
"RTN","DSIO4",367,0)
 I $D(LIST) S I=0,Z=$NA(LIST) F  S Z=$Q(@Z) Q:Z=""  D
"RTN","DSIO4",368,0)
 .Q:$QS(Z,2)<1
"RTN","DSIO4",369,0)
 .D PREGG1(.RET,@Z,I) S I=I+1
"RTN","DSIO4",370,0)
 Q
"RTN","DSIO4",371,0)
 ;
"RTN","DSIO4",372,0)
PREGG1(RET,IEN,ND) ;
"RTN","DSIO4",373,0)
 N OUT,CT,SOUT,FLG,FLD,FRT D GETS^DIQ(19641.13,IEN_",","**","IE","OUT")
"RTN","DSIO4",374,0)
 I $D(OUT) S RET(ND)=IEN,CT=$NA(OUT) F  S CT=$Q(@CT) Q:CT=""  D  Q:$D(FLG)
"RTN","DSIO4",375,0)
 .; PROCESS THE BABY MULTIPLE
"RTN","DSIO4",376,0)
 .I $QS(CT,1)=19641.132 S RET(ND)=RET(ND)_U D  S FLG=1 Q
"RTN","DSIO4",377,0)
 ..S SOUT=$NA(OUT(19641.132)) F  S SOUT=$Q(@SOUT) Q:SOUT=""  D
"RTN","DSIO4",378,0)
 ...I $QS(SOUT,4)="E" S RET(ND)=RET(ND)_$$NAME^DSIO2(@SOUT) Q
"RTN","DSIO4",379,0)
 ...S RET(ND)=RET(ND)_";"_@SOUT_"|"
"RTN","DSIO4",380,0)
 .Q:$QS(CT,3)=.01
"RTN","DSIO4",381,0)
 .; SET EXTERNAL VALUES
"RTN","DSIO4",382,0)
 .I $QS(CT,4)="E" D  Q
"RTN","DSIO4",383,0)
 ..I ".03,.08,.09,1.1"[$QS(CT,3) S RET(ND)=RET(ND)_U_$$NAME^DSIO2(@CT) Q
"RTN","DSIO4",384,0)
 ..S RET(ND)=RET(ND)_U_@CT
"RTN","DSIO4",385,0)
 .I $QS(CT,3)=".05" S RET(ND)=RET(ND)_$S(@CT'="":$$NAME^DSIO2($P(@CT,"|")),1:"Unspecified") D
"RTN","DSIO4",386,0)
 ..S:@CT'["|" FRT=$$PERIEN($P(RET(ND),U,4),@CT)
"RTN","DSIO4",387,0)
 ..S RET(ND)=RET(ND)_U_$S(@CT["|":$P(@CT,"|",2),$G(FRT)'="":FRT,1:"U")
"RTN","DSIO4",388,0)
 .; WHEN EXTERNAL AND INTERNAL VALUES ARE THE SAME
"RTN","DSIO4",389,0)
 .Q:".04"[$QS(CT,3)
"RTN","DSIO4",390,0)
 .; ADDITIONAL PIECE FOR IEN (PATIENT,FOF,OB,FACILITY,USER)
"RTN","DSIO4",391,0)
 .S FLD=$QS(CT,3) I ".03,.08,.09,1.1"[FLD D
"RTN","DSIO4",392,0)
 ..S RET(ND)=RET(ND)_U_$S(".08,.09"[FLD:$P(@CT,";"),1:@CT)
"RTN","DSIO4",393,0)
 .; DATE TRANSFORMS
"RTN","DSIO4",394,0)
 .I ".02,.06,.07"[FLD S $P(RET(ND),U,$L(RET(ND),U))=$$FMTE^XLFDT(@CT,"5Z")
"RTN","DSIO4",395,0)
 Q
"RTN","DSIO4",396,0)
 ;
"RTN","DSIO4",397,0)
 ; ----------------- PREGNANCY HISTORY FOF INPUT TRANSFORM --------------------
"RTN","DSIO4",398,0)
FOF(VAL,INPUT,IEN) ;
"RTN","DSIO4",399,0)
 N DFN,VP,NAM S VAL=$$UP^XLFSTR($G(VAL)),INPUT=$$UP^XLFSTR($G(INPUT))
"RTN","DSIO4",400,0)
 I +VAL>0 Q $$GET1^DIQ(19641.11,+VAL_",",.01)
"RTN","DSIO4",401,0)
 I INPUT="S"!(INPUT="SPOUSE") D  Q $G(NAM)
"RTN","DSIO4",402,0)
 .S DFN=$$GET1^DIQ(19641.13,$G(IEN)_",",.03,"I") Q:+DFN<1
"RTN","DSIO4",403,0)
 .D SPOUSE(.VP,DFN)
"RTN","DSIO4",404,0)
 .I +VP'=-1 S NAM=$$GET1^DIQ($TR($P(VP,"(",2),",",""),+VP_",",.01)_"|S"
"RTN","DSIO4",405,0)
 I INPUT="U"!(INPUT="UNSPECIFIED") Q "UNSPECIFIED"
"RTN","DSIO4",406,0)
 Q ""
"RTN","DSIO4",407,0)
 ;
"RTN","DSIO4",408,0)
 ;=============================================================================
"RTN","DSIO4",409,0)
 ;                       X - R E F  S U P P O R T
"RTN","DSIO4",410,0)
 ;=============================================================================
"RTN","DSIO4",411,0)
 ;
"RTN","DSIO4",412,0)
 ; DSIO PREGNANCY HISTORY
"RTN","DSIO4",413,0)
 ;  - IF C ALL OTHER ENTRIES WILL BE HISTORICAL (ONLY ONE C)
"RTN","DSIO4",414,0)
 ;    EXCEPT - IF ANOTHER ENTRY HAS A FUTURE EDD AND NO PREGNANCY END THEN
"RTN","DSIO4",415,0)
 ;    THE ENTRY WILL NOT BE CREATED.
"RTN","DSIO4",416,0)
 ;  - IF EDD IS FUTURE AND THE ENTRY IS CURRENT THEN WV PATIENT .13 IS
"RTN","DSIO4",417,0)
 ;    CHANGED TO YES AND .14 IS SET WITH EDD
"RTN","DSIO4",418,0)
 ;  - IF PREGNANCY END (NO FUTURE DATES) AND NOT A HISTORICAL ENTRY THEN THE
"RTN","DSIO4",419,0)
 ;    STATUS IS CHANGED TO H AND WV PATIENT .13 IS NO AND .14 IS DELETED
"RTN","DSIO4",420,0)
 ;
"RTN","DSIO4",421,0)
 ;  .01          DATE RECORDED
"RTN","DSIO4",422,0)
 ;  .02          PREGNANCY START
"RTN","DSIO4",423,0)
 ;  .03          PATIENT
"RTN","DSIO4",424,0)
 ;  .04          STATUS
"RTN","DSIO4",425,0)
 ;  .05          FATHER OF FETUS
"RTN","DSIO4",426,0)
 ;  .06          EDD
"RTN","DSIO4",427,0)
 ;  .07          PREGNANCY END
"RTN","DSIO4",428,0)
 ;  .08          OB
"RTN","DSIO4",429,0)
 ;  .09          FACILITY
"RTN","DSIO4",430,0)
 ;  1.1          UPDATED BY
"RTN","DSIO4",431,0)
 ;  2            BABIES  (multiple)
"RTN","DSIO4",432,0)
 ;
"RTN","DSIO4",433,0)
CURRENT(IEN) ; SHOULD THIS RECORD BE CURRENT?
"RTN","DSIO4",434,0)
 ; IS THERE AN ENTRY WITH A FUTURE EDD AND NO PREGNANCY END?
"RTN","DSIO4",435,0)
 ; INPUT TRANSFORM FOR .04 STATUS
"RTN","DSIO4",436,0)
 N DFN,OUT,ERR,FROM,SCR,CT,FLG S FLG=1
"RTN","DSIO4",437,0)
 S DFN=$$GET1^DIQ(19641.13,IEN_",",.03,"I")
"RTN","DSIO4",438,0)
 S FROM(1)=DFN,SCR="I $P(^(0),U,3)=DFN"
"RTN","DSIO4",439,0)
 D LIST^DIC(19641.13,,"@;.06I;.07I","P",,".FROM",,"P",SCR,,"OUT","ERR")
"RTN","DSIO4",440,0)
 S CT=$NA(OUT) F  S CT=$Q(@CT) Q:CT=""  D  Q:FLG=0
"RTN","DSIO4",441,0)
 .Q:$QS(CT,2)<1
"RTN","DSIO4",442,0)
 .I $P(@CT,U,2)>=DT&($P(@CT,U,3)="") S FLG=0
"RTN","DSIO4",443,0)
 Q FLG
"RTN","DSIO4",444,0)
 ;
"RTN","DSIO4",445,0)
HIS(DFN,IEN) ; KILL HISTORICAL EDD X-REF
"RTN","DSIO4",446,0)
 ; NEW 'ASTATUS'
"RTN","DSIO4",447,0)
 I $D(^DSIO(19641.13,"EDD",DFN,+$O(^DSIO(19641.13,"EDD",DFN,""),-1),DFN,IEN)) D
"RTN","DSIO4",448,0)
 .K ^DSIO(19641.13,"EDD",DFN)
"RTN","DSIO4",449,0)
 Q
"RTN","DSIO4",450,0)
 ;
"RTN","DSIO4",451,0)
STATUS(DFN,IEN) ; UPDATE PREGNANCY HISTORY STATUSES TO H IF CURRENT IS C
"RTN","DSIO4",452,0)
 ; NEW 'ASTATUS'
"RTN","DSIO4",453,0)
 N OUT,ERR,FROM,SCR,CT Q:$$GET1^DIQ(19641.13,IEN_",",.04,"I")'="C"
"RTN","DSIO4",454,0)
 S FROM(1)=DFN,SCR="I $P(^(0),U,3)=DFN,$P(^(0),U,4)=""C"""
"RTN","DSIO4",455,0)
 D LIST^DIC(19641.13,,"@","P",,".FROM",,"P",SCR,,"OUT","ERR")
"RTN","DSIO4",456,0)
 S CT=$NA(OUT) F  S CT=$Q(@CT) Q:CT=""  D
"RTN","DSIO4",457,0)
 .Q:$QS(CT,2)<1
"RTN","DSIO4",458,0)
 .I @CT'=IEN S IPT(19641.13,@CT_",",.04)="H" D UPDATE^DIE(,"IPT") K IPT
"RTN","DSIO4",459,0)
 Q
"RTN","DSIO4",460,0)
 ;
"RTN","DSIO4",461,0)
EDD(EDD,DFN,IEN) ; UPDATE WV,DSIO PATIENT FILES WHEN EDD IS FUTURE
"RTN","DSIO4",462,0)
 ; NEW 'EDD' (NOT ON HISTORICAL ENTRIES)
"RTN","DSIO4",463,0)
 ; CREATE AN "EDD" X-REF - ONLY ONE PER PATIENT
"RTN","DSIO4",464,0)
 Q:$$GET1^DIQ(19641.13,IEN_",",.04,"I")="H"
"RTN","DSIO4",465,0)
 N DSIOSILENT,IPT S DSIOSILENT=1
"RTN","DSIO4",466,0)
 S IPT(790,DFN_",",.13)="YES",IPT(790,DFN_",",.14)=EDD
"RTN","DSIO4",467,0)
 D UPDATE^DIE("E","IPT"),WVLOG(DFN,1,EDD),STATUS(DFN,IEN)
"RTN","DSIO4",468,0)
 Q
"RTN","DSIO4",469,0)
 ;
"RTN","DSIO4",470,0)
DELV(DATE,DFN,IEN) ; UPDATE WV,DSIO PATIENT FILES WHEN PREGNANCY END IS SET
"RTN","DSIO4",471,0)
 Q:+$G(DATE)=0!($$GET1^DIQ(19641.13,IEN_",",.04,"I")="H")
"RTN","DSIO4",472,0)
 N DSIOSILENT,IPT S DSIOSILENT=1
"RTN","DSIO4",473,0)
 I DATE'>$$NOW^XLFDT D
"RTN","DSIO4",474,0)
 .S IPT(19641.13,IEN_",",.04)="H" D UPDATE^DIE(,"IPT") K IPT
"RTN","DSIO4",475,0)
 .K ^DSIO(19641.13,"EDD",DFN)
"RTN","DSIO4",476,0)
 .S IPT(790,DFN_",",.13)="NO",IPT(790,DFN_",",.14)="" D UPDATE^DIE(,"IPT")
"RTN","DSIO4",477,0)
 .D WVLOG(DFN,0,$$GET1^DIQ(19641.13,IEN_",",.06,"I"))
"RTN","DSIO4",478,0)
 Q
"RTN","DSIO4",479,0)
 ;
"RTN","DSIO4",480,0)
 ; ----------------------------- FROM WV PATIENT ------------------------------
"RTN","DSIO4",481,0)
 ;
"RTN","DSIO4",482,0)
WVLOG(DFN,STAT,EDD) ; CREATE A PREGNANCY LOG
"RTN","DSIO4",483,0)
 N IPT S IPT(790.05,"+1,",.01)=$$NOW^XLFDT
"RTN","DSIO4",484,0)
 S IPT(790.05,"+1,",.02)=DFN
"RTN","DSIO4",485,0)
 S IPT(790.05,"+1,",.03)=STAT
"RTN","DSIO4",486,0)
 S IPT(790.05,"+1,",.04)=EDD
"RTN","DSIO4",487,0)
 D UPDATE^DIE(,"IPT")
"RTN","DSIO4",488,0)
 Q
"RTN","DSIO4",489,0)
 ;
"RTN","DSIO4",490,0)
 ; --------------------- WV PATIENT - (NEW) (.13/.14) -------------------------
"RTN","DSIO4",491,0)
 ;
"RTN","DSIO4",492,0)
WV(DFN,PREG,EDD) ; WOMEN'S HEALTH ENTRY POINT
"RTN","DSIO4",493,0)
 ; UPDATE THE CURRENT PREGNANCY WITH THE NEW EDD FROM WV PATIENT
"RTN","DSIO4",494,0)
 ; OR IF THERE IS NO CURRENT PREGNANCY CREATE A NEW ONE
"RTN","DSIO4",495,0)
 ;
"RTN","DSIO4",496,0)
 ; PREG(RET,DFN,IEN,STRT,TYP,FOF,EDD,END,OBP,PFAC)
"RTN","DSIO4",497,0)
 ;
"RTN","DSIO4",498,0)
 N OUT,ERR,FROM,SCR,CIEN,IPT,RET Q:$D(DSIOSILENT)
"RTN","DSIO4",499,0)
 S PREG=$S(PREG="YES":1,PREG="NO":0,1:+PREG)
"RTN","DSIO4",500,0)
 S FROM(1)=DFN,SCR="I $P(^(0),U,3)=DFN,$P(^(0),U,4)=""C"""
"RTN","DSIO4",501,0)
 D LIST^DIC(19641.13,,"@","P",,".FROM",,"P",SCR,,"OUT","ERR")
"RTN","DSIO4",502,0)
 S CIEN=+$G(OUT("DILIST",1,0))
"RTN","DSIO4",503,0)
 I CIEN>0 S IPT(19641.13,CIEN_",",.06)=EDD D UPDATE^DIE(,"IPT") D
"RTN","DSIO4",504,0)
 .I PREG=0 D PREG(.RET,DFN,CIEN,,"H",,$G(EDD),DT)
"RTN","DSIO4",505,0)
 I CIEN<1,PREG=1 D PREG(.RET,DFN,,,"C",,$G(EDD))
"RTN","DSIO4",506,0)
 D WVLOG(DFN,PREG,EDD)
"RTN","DSIO4",507,0)
 Q
"SEC","^DIC",19641.11,19641.11,0,"AUDIT")
@
"SEC","^DIC",19641.11,19641.11,0,"DD")
@
"VER")
8.0^22.0
"^DD",19641.11,19641.11,0)
FIELD^^.05^14
"^DD",19641.11,19641.11,0,"DDA")
N
"^DD",19641.11,19641.11,0,"DT")
3140610
"^DD",19641.11,19641.11,0,"ID",.02)
W ""
"^DD",19641.11,19641.11,0,"IX","B",19641.11,.01)

"^DD",19641.11,19641.11,0,"NM","DSIO PERSON")

"^DD",19641.11,19641.11,0,"PT",19641.13,.05)

"^DD",19641.11,19641.11,.01,0)
NAME^RF^^0;1^K:$L(X)>40!($L(X)<3) X
"^DD",19641.11,19641.11,.01,1,0)
^.1
"^DD",19641.11,19641.11,.01,1,1,0)
19641.11^B
"^DD",19641.11,19641.11,.01,1,1,1)
S ^DSIO(19641.11,"B",$E(X,1,30),DA)=""
"^DD",19641.11,19641.11,.01,1,1,2)
K ^DSIO(19641.11,"B",$E(X,1,30),DA)
"^DD",19641.11,19641.11,.01,3)
Name must be in the format LASNAME,FIRSTNAME MIDDLE where MIDDLE is optional.
"^DD",19641.11,19641.11,.01,"DT")
3140606
"^DD",19641.11,19641.11,.02,0)
SEX^S^M:MALE;F:FEMALE;U:UNKNOWN;^0;2^Q
"^DD",19641.11,19641.11,.02,"DT")
3140506
"^DD",19641.11,19641.11,.03,0)
DATE OF BIRTH^D^^0;3^S %DT="EX" D ^%DT S X=Y K:Y<1 X
"^DD",19641.11,19641.11,.03,"DT")
3140417
"^DD",19641.11,19641.11,.04,0)
EDUCATION (YRS)^NJ3,0^^0;4^K:+X'=X!(X>125)!(X<0)!(X?.E1"."1N.N) X
"^DD",19641.11,19641.11,.04,3)
Type a number between 0 and 125, 0 decimal digits.
"^DD",19641.11,19641.11,.04,"DT")
3140424
"^DD",19641.11,19641.11,.05,0)
PATIENT^RP19641^DSIO(19641,^0;5^Q
"^DD",19641.11,19641.11,.05,"DT")
3140606
"^DD",19641.11,19641.11,1.1,0)
STREET ADDRESS [LINE 1]^F^^1;1^K:$L(X)>30!($L(X)<1) X
"^DD",19641.11,19641.11,1.1,3)
Answer must be 1-30 characters in length.
"^DD",19641.11,19641.11,1.1,"DT")
3140610
"^DD",19641.11,19641.11,1.2,0)
STREET ADDRESS [LINE 2]^F^^1;2^K:$L(X)>30!($L(X)<1) X
"^DD",19641.11,19641.11,1.2,3)
Answer must be 1-30 characters in length.
"^DD",19641.11,19641.11,1.2,"DT")
3140610
"^DD",19641.11,19641.11,1.3,0)
STREET ADDRESS [LINE 3]^F^^1;3^K:$L(X)>30!($L(X)<1) X
"^DD",19641.11,19641.11,1.3,3)
Answer must be 1-30 characters in length.
"^DD",19641.11,19641.11,1.3,"DT")
3140610
"^DD",19641.11,19641.11,1.4,0)
CITY^F^^1;4^K:$L(X)>20!($L(X)<1) X
"^DD",19641.11,19641.11,1.4,3)
Answer must be 1-20 characters in length.
"^DD",19641.11,19641.11,1.4,"DT")
3140415
"^DD",19641.11,19641.11,1.5,0)
STATE^*P5'X^DIC(5,^1;5^S DIC("S")="I $P(^DIC(5,Y,0),U,6)=1" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",19641.11,19641.11,1.5,3)
Select from the available listing the state in which this person resides.
"^DD",19641.11,19641.11,1.5,12)
This screen prevents selection of entires that are valid US states or possessions.
"^DD",19641.11,19641.11,1.5,12.1)
S DIC("S")="I $P(^DIC(5,Y,0),U,6)=1"
"^DD",19641.11,19641.11,1.5,"DT")
3140417
"^DD",19641.11,19641.11,1.6,0)
ZIP CODE^FX^^1;6^K:X[""""!($A(X)=45) X I $D(X) K:$L(X)>5!($L(X)<5)!'(X?5N) X
"^DD",19641.11,19641.11,1.6,3)
Answer must be 5 characters in length.
"^DD",19641.11,19641.11,1.6,"DT")
3140415
"^DD",19641.11,19641.11,1.7,0)
PHONE NUMBER [HOME]^F^^1;7^K:$L(X)>20!($L(X)<4) X
"^DD",19641.11,19641.11,1.7,3)
Answer must be 4-20 characters in length.
"^DD",19641.11,19641.11,1.7,"DT")
3140424
"^DD",19641.11,19641.11,1.8,0)
PHONE NUMBER [CELL]^F^^1;8^K:$L(X)>20!($L(X)<4) X
"^DD",19641.11,19641.11,1.8,3)
Answer must be 4-20 characters in length.
"^DD",19641.11,19641.11,1.8,"DT")
3140424
"^DD",19641.11,19641.11,1.9,0)
PHONE NUMBER [WORK]^F^^1;9^K:$L(X)>20!($L(X)<4) X
"^DD",19641.11,19641.11,1.9,3)
Answer must be 4-20 characters in length.
"^DD",19641.11,19641.11,1.9,"DT")
3140424
"^DIC",19641.11,19641.11,0)
DSIO PERSON^19641.11
"^DIC",19641.11,19641.11,0,"GL")
^DSIO(19641.11,
"^DIC",19641.11,"B","DSIO PERSON",19641.11)

**END**
**END**
