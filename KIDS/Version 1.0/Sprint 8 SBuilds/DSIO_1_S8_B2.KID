KIDS Distribution saved on Apr 01, 2014@16:51:19
DSIO 1.0 S8 B2
**KIDS**:DSIO 1.0^

**INSTALL NAME**
DSIO 1.0
"BLD",9691,0)
DSIO 1.0^^0^3140401^n
"BLD",9691,4,0)
^9.64PA^19641.1^1
"BLD",9691,4,19641.1,0)
19641.1
"BLD",9691,4,19641.1,222)
y^y^f^^^^n
"BLD",9691,4,"B",19641.1,19641.1)

"BLD",9691,6.3)
19
"BLD",9691,"INID")
^
"BLD",9691,"INIT")

"BLD",9691,"KRN",0)
^9.67PA^779.2^20
"BLD",9691,"KRN",.4,0)
.4
"BLD",9691,"KRN",.401,0)
.401
"BLD",9691,"KRN",.402,0)
.402
"BLD",9691,"KRN",.403,0)
.403
"BLD",9691,"KRN",.5,0)
.5
"BLD",9691,"KRN",.84,0)
.84
"BLD",9691,"KRN",3.6,0)
3.6
"BLD",9691,"KRN",3.8,0)
3.8
"BLD",9691,"KRN",9.2,0)
9.2
"BLD",9691,"KRN",9.8,0)
9.8
"BLD",9691,"KRN",9.8,"NM",0)
^9.68A^3^3
"BLD",9691,"KRN",9.8,"NM",1,0)
DSIO4^^0^B10386560
"BLD",9691,"KRN",9.8,"NM",2,0)
DSIO3A^^0^B13945027
"BLD",9691,"KRN",9.8,"NM",3,0)
DSIO2^^0^B5693682
"BLD",9691,"KRN",9.8,"NM","B","DSIO2",3)

"BLD",9691,"KRN",9.8,"NM","B","DSIO3A",2)

"BLD",9691,"KRN",9.8,"NM","B","DSIO4",1)

"BLD",9691,"KRN",19,0)
19
"BLD",9691,"KRN",19,"NM",0)
^9.68A^^0
"BLD",9691,"KRN",19.1,0)
19.1
"BLD",9691,"KRN",19.1,"NM",0)
^9.68A^^
"BLD",9691,"KRN",101,0)
101
"BLD",9691,"KRN",409.61,0)
409.61
"BLD",9691,"KRN",771,0)
771
"BLD",9691,"KRN",779.2,0)
779.2
"BLD",9691,"KRN",870,0)
870
"BLD",9691,"KRN",8989.51,0)
8989.51
"BLD",9691,"KRN",8989.51,"NM",0)
^9.68A^^0
"BLD",9691,"KRN",8989.52,0)
8989.52
"BLD",9691,"KRN",8989.52,"NM",0)
^9.68A^^
"BLD",9691,"KRN",8994,0)
8994
"BLD",9691,"KRN",8994,"NM",0)
^9.68A^^0
"BLD",9691,"KRN","B",.4,.4)

"BLD",9691,"KRN","B",.401,.401)

"BLD",9691,"KRN","B",.402,.402)

"BLD",9691,"KRN","B",.403,.403)

"BLD",9691,"KRN","B",.5,.5)

"BLD",9691,"KRN","B",.84,.84)

"BLD",9691,"KRN","B",3.6,3.6)

"BLD",9691,"KRN","B",3.8,3.8)

"BLD",9691,"KRN","B",9.2,9.2)

"BLD",9691,"KRN","B",9.8,9.8)

"BLD",9691,"KRN","B",19,19)

"BLD",9691,"KRN","B",19.1,19.1)

"BLD",9691,"KRN","B",101,101)

"BLD",9691,"KRN","B",409.61,409.61)

"BLD",9691,"KRN","B",771,771)

"BLD",9691,"KRN","B",779.2,779.2)

"BLD",9691,"KRN","B",870,870)

"BLD",9691,"KRN","B",8989.51,8989.51)

"BLD",9691,"KRN","B",8989.52,8989.52)

"BLD",9691,"KRN","B",8994,8994)

"BLD",9691,"PRE")

"BLD",9691,"QDEF")
^^^^NO^^^^NO^^NO
"BLD",9691,"QUES",0)
^9.62^^
"BLD",9691,"REQB",0)
^9.611^^
"FIA",19641.1)
DSIO NON-VA ENTITIES
"FIA",19641.1,0)
^DSIO(19641.1,
"FIA",19641.1,0,0)
19641.1I
"FIA",19641.1,0,1)
y^y^f^^^^n
"FIA",19641.1,0,10)

"FIA",19641.1,0,11)

"FIA",19641.1,0,"RLRO")

"FIA",19641.1,19641.1)
0
"IX",19641.1,19641.1,"F",0)
19641.1^F^ALL FACILITIES^MU^^R^IR^I^19641.1^^^^^LS
"IX",19641.1,19641.1,"F",1)
I X(1)="F" S ^DSIO(19641.1,"F",X(2),DA)=""
"IX",19641.1,19641.1,"F",2)
I X(1)="F" K ^DSIO(19641.1,"F",X(2),DA)
"IX",19641.1,19641.1,"F",2.5)
K ^DSIO(19641.1,"F")
"IX",19641.1,19641.1,"F",11.1,0)
^.114IA^2^2
"IX",19641.1,19641.1,"F",11.1,1,0)
1^F^19641.1^.02^^^F
"IX",19641.1,19641.1,"F",11.1,1,3)

"IX",19641.1,19641.1,"F",11.1,2,0)
2^F^19641.1^.01^^1^F
"IX",19641.1,19641.1,"F",11.1,2,3)

"IX",19641.1,19641.1,"P",0)
19641.1^P^ALL PROVIDERS^MU^^R^IR^I^19641.1^^^^^LS
"IX",19641.1,19641.1,"P",1)
I X(1)="P" S ^DSIO(19641.1,"P",X(2),DA)=""
"IX",19641.1,19641.1,"P",2)
I X(1)="P" K ^DSIO(19641.1,"P",X(2),DA)
"IX",19641.1,19641.1,"P",2.5)
K ^DSIO(19641.1,"P")
"IX",19641.1,19641.1,"P",11.1,0)
^.114IA^2^2
"IX",19641.1,19641.1,"P",11.1,1,0)
1^F^19641.1^.02^^^F
"IX",19641.1,19641.1,"P",11.1,1,3)

"IX",19641.1,19641.1,"P",11.1,2,0)
2^F^19641.1^.01^^1^F
"IX",19641.1,19641.1,"P",11.1,2,3)

"MBREQ")
0
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
3
"RTN","DSIO2")
0^3^B5693682
"RTN","DSIO2",1,0)
DSIO2 ;DSS/TFF - DSIO X-REFERENCES AND UTILITIES;06/28/2013 15:19
"RTN","DSIO2",2,0)
 ;;1.0;DSS,INC OPEN SOURCE;;28 Jan 2013;Build 19
"RTN","DSIO2",3,0)
 ;Copyright 1995-2014,Document Storage Systems Inc. All Rights Reserved
"RTN","DSIO2",4,0)
 ;
"RTN","DSIO2",5,0)
 ;
"RTN","DSIO2",6,0)
 ; Documented API and ICRs
"RTN","DSIO2",7,0)
 ; -----------------------
"RTN","DSIO2",8,0)
 ;
"RTN","DSIO2",9,0)
 Q
"RTN","DSIO2",10,0)
 ;
"RTN","DSIO2",11,0)
 ;=====================================================================
"RTN","DSIO2",12,0)
 ;                       X - R E F  S U P P O R T
"RTN","DSIO2",13,0)
 ;=====================================================================
"RTN","DSIO2",14,0)
 ;
"RTN","DSIO2",15,0)
TRAK(DFN,ANS) ; CREATE A TRACKING ENTRY FROM DSIO PATIENT WHEN THE
"RTN","DSIO2",16,0)
 ;              CURRENTLY TRACKING STATUS CHANGES (.02)
"RTN","DSIO2",17,0)
 ;
"RTN","DSIO2",18,0)
 Q:$G(ANS)=""
"RTN","DSIO2",19,0)
 N FM,IPT,DIC,DA,DG,DLAYGO,DR,N,X,Y,IEN S DLAYGO=19641.2
"RTN","DSIO2",20,0)
 S FM(1)=$$FIND1^DIC(19641.22,,"O","FILEMAN")
"RTN","DSIO2",21,0)
 I FM(1)<1 K FM D
"RTN","DSIO2",22,0)
 .S IPT(19641.22,"?+1,",.01)="FILEMAN" D UPDATE^DIE(,"IPT","FM") K IPT
"RTN","DSIO2",23,0)
 .S IPT(19641.22,FM(1)_",",.02)=1 D FILE^DIE("I","IPT") K IPT
"RTN","DSIO2",24,0)
 S DIC="^DSIO(19641.2,",DIC(0)="XL",X="`"_DFN D ^DIC I +Y>0 D
"RTN","DSIO2",25,0)
 .S IPT(19641.24,"+1,"_DFN_",",.01)=$$NOW^XLFDT D UPDATE^DIE(,"IPT","IEN")
"RTN","DSIO2",26,0)
 .K IPT I $D(IEN(1)) D
"RTN","DSIO2",27,0)
 ..K ^TMP($J,"DSIO TRAK") S ^TMP($J,"DSIO TRAK")=IEN(1)
"RTN","DSIO2",28,0)
 ..S IPT(19641.24,IEN(1)_","_DFN_",",.02)=ANS
"RTN","DSIO2",29,0)
 ..S IPT(19641.24,IEN(1)_","_DFN_",",.03)=DUZ
"RTN","DSIO2",30,0)
 ..S IPT(19641.24,IEN(1)_","_DFN_",",.04)="FILEMAN"
"RTN","DSIO2",31,0)
 ..D FILE^DIE("I","IPT") K IPT
"RTN","DSIO2",32,0)
 Q
"RTN","DSIO2",33,0)
 ;
"RTN","DSIO2",34,0)
 ;=====================================================================
"RTN","DSIO2",35,0)
 ;                         U T I L I T I E S
"RTN","DSIO2",36,0)
 ;=====================================================================
"RTN","DSIO2",37,0)
 ;
"RTN","DSIO2",38,0)
FN(P,C) ; GET THE NEXT RECORD BY DASHBOARD PAGE AND COUNT FORWARDS
"RTN","DSIO2",39,0)
 Q:P<2 0
"RTN","DSIO2",40,0)
 Q C*(P-1)
"RTN","DSIO2",41,0)
 ;
"RTN","DSIO2",42,0)
NAME(NAM) ; TRANSFORM NAME,NAME TO TITLE CASE THATS - Name,Name
"RTN","DSIO2",43,0)
 N RET S RET=""
"RTN","DSIO2",44,0)
 S RET=$$TITLE^XLFSTR($P(NAM,","))_","_$$TITLE^XLFSTR($P(NAM,",",2))
"RTN","DSIO2",45,0)
 Q RET
"RTN","DSIO2",46,0)
 ;
"RTN","DSIO2",47,0)
DT(VAL) ; TRANSLATE EXTERNAL DATE TIME TO FM DATE TIME
"RTN","DSIO2",48,0)
 ;
"RTN","DSIO2",49,0)
 ; Converts these 9/23/2004 10:53:25 AM
"RTN","DSIO2",50,0)
 ;                2009-10-22 05:00:00.0
"RTN","DSIO2",51,0)
 ;
"RTN","DSIO2",52,0)
 ; THE FM CALL BELOW DOES NOT WORK WITH THE ABOVE FORMAT
"RTN","DSIO2",53,0)
 ; -----------------------------------------------------
"RTN","DSIO2",54,0)
 ; D DT^DILF("E","DEC 12,2014",.RESULT) 
"RTN","DSIO2",55,0)
 ; RESULT=3141212
"RTN","DSIO2",56,0)
 ; RESULT(0)="DEC 12, 2014"
"RTN","DSIO2",57,0)
 ;
"RTN","DSIO2",58,0)
 N D,RET,YR,YRP,MH,MHP,DY,DYP,TM,SEC,MIN,HR,I S RET=-1
"RTN","DSIO2",59,0)
 I VAL["/" S D="/",YRP=3,MHP=1,DYP=2
"RTN","DSIO2",60,0)
 I VAL["-" S D="-",YRP=1,MHP=2,DYP=3
"RTN","DSIO2",61,0)
 Q:'$D(D) -1
"RTN","DSIO2",62,0)
 S YR=$P($P(VAL,D,YRP)," ")-1700
"RTN","DSIO2",63,0)
 S MH=$P($P(VAL,D,MHP)," ") I $L(MH)=1 S MH=0_MH
"RTN","DSIO2",64,0)
 S DY=$P($P(VAL,D,DYP)," ") I $L(DY)=1 S DY=0_DY
"RTN","DSIO2",65,0)
 ;
"RTN","DSIO2",66,0)
 ;TIME
"RTN","DSIO2",67,0)
 S TM="" I VAL[":" S TM=$P($P(VAL," ",2),".") D
"RTN","DSIO2",68,0)
 .S SEC=$P(TM,":",3) S:$L(SEC)=1 SEC=0_SEC
"RTN","DSIO2",69,0)
 .S MIN=$P(TM,":",2) S:$L(MIN)=1 MIN=0_MIN
"RTN","DSIO2",70,0)
 .S HR=$P(TM,":") S:$L(HR)=1 HR=0_HR
"RTN","DSIO2",71,0)
 .I $P(VAL," ",3)="AM"&(HR=12) S HR="00"
"RTN","DSIO2",72,0)
 .I $P(VAL," ",3)="PM"&(HR<12) S HR=HR+12
"RTN","DSIO2",73,0)
 .S TM=HR_MIN_SEC
"RTN","DSIO2",74,0)
 .F I=$L(TM):-1:1 Q:$E(TM,I)'=0  I $E(TM,I)=0 S TM=$E(TM,1,I-1)
"RTN","DSIO2",75,0)
 ;
"RTN","DSIO2",76,0)
 S RET=YR_MH_DY_"."_TM
"RTN","DSIO2",77,0)
 Q RET
"RTN","DSIO3A")
0^2^B13945027
"RTN","DSIO3A",1,0)
DSIO3A ;DSS/TFF - DSIO IHE SUPPORT;06/28/2013 15:19
"RTN","DSIO3A",2,0)
 ;;1.0;DSS,INC OPEN SOURCE;;28 Jan 2013;Build 19
"RTN","DSIO3A",3,0)
 ;Copyright 1995-2014,Document Storage Systems Inc. All Rights Reserved
"RTN","DSIO3A",4,0)
 ;
"RTN","DSIO3A",5,0)
 ;
"RTN","DSIO3A",6,0)
 ; Documented API and ICRs
"RTN","DSIO3A",7,0)
 ; -----------------------
"RTN","DSIO3A",8,0)
 ;
"RTN","DSIO3A",9,0)
 Q
"RTN","DSIO3A",10,0)
 ;
"RTN","DSIO3A",11,0)
SAVE(RET,GUID,DFN,DIRECT,DTC,DTIE,DTYE,TITLE,FAC,REC,DOC) ; DSIO IHE SAVE
"RTN","DSIO3A",12,0)
 ;
"RTN","DSIO3A",13,0)
 ; .01    GUID = GUID
"RTN","DSIO3A",14,0)
 ; .02     DFN = PATIENT NUMBER
"RTN","DSIO3A",15,0)
 ; .03     DTC = DATE/TIME OF CREATION
"RTN","DSIO3A",16,0)
 ; .04    DTIE = DATE/TIME OF IMPORT/EXPORT
"RTN","DSIO3A",17,0)
 ; .05    DTYE = DOCUMENT TYPE
"RTN","DSIO3A",18,0)
 ; .06  DIRECT = DIRECTION (IN/OUT)
"RTN","DSIO3A",19,0)
 ; 1.1   TITLE = DOCUMENT TITLE
"RTN","DSIO3A",20,0)
 ; 1.2     FAC = SENDING FACILITY/PROVIDER
"RTN","DSIO3A",21,0)
 ; 1.3     REC = INTENDED RECIPIENT
"RTN","DSIO3A",22,0)
 ; 2       DOC = DOCUMENT CONTENT IN XML
"RTN","DSIO3A",23,0)
 ;
"RTN","DSIO3A",24,0)
 ;I '$$TM^%ZTLOAD S RET="TASKMAN must be running." Q
"RTN","DSIO3A",25,0)
 N IPT,DATE,IEN,%X,%Y
"RTN","DSIO3A",26,0)
 S GUID=$G(GUID),DFN=$G(DFN),DIRECT=$G(DIRECT),DTC=$G(DTC),DTIE=$G(DTIE)
"RTN","DSIO3A",27,0)
 S DTYE=$G(DTYE),TITLE=$G(TITLE),FAC=$G(FAC),REC=$G(REC),DOC=$G(DOC)
"RTN","DSIO3A",28,0)
 I '$$VALID(.01,GUID)!($$FIND1^DIC(19641.6,,,GUID)) D  Q
"RTN","DSIO3A",29,0)
 .S RET="-1^The GUID is invalid or not unique."
"RTN","DSIO3A",30,0)
 S IPT(19641.6,"+1,",.01)=GUID
"RTN","DSIO3A",31,0)
 I '$$VALID(.02,"`"_DFN) D  Q
"RTN","DSIO3A",32,0)
 .S RET="-1^The DFN is invalid."
"RTN","DSIO3A",33,0)
 S IPT(19641.6,"+1,",.02)="`"_DFN
"RTN","DSIO3A",34,0)
 S DATE=$$DT^DSIO2(DTC) I DATE=-1!('$$VALID(.03,DATE)) D  Q
"RTN","DSIO3A",35,0)
 .S RET="-1^Unable to translate Date of Creation."
"RTN","DSIO3A",36,0)
 S IPT(19641.6,"+1,",.03)=DATE
"RTN","DSIO3A",37,0)
 S DATE=$$DT^DSIO2(DTIE) I DATE=-1!('$$VALID(.04,DATE)) D  Q
"RTN","DSIO3A",38,0)
 .S RET="-1^Unable to translate Date of Import/Export."
"RTN","DSIO3A",39,0)
 S IPT(19641.6,"+1,",.04)=$G(DATE,$$NOW^XLFDT)
"RTN","DSIO3A",40,0)
 I '$$VALID(.05,DTYE) D  Q
"RTN","DSIO3A",41,0)
 .S RET="-1^Unknown DOCUMENT TYPE."
"RTN","DSIO3A",42,0)
 S IPT(19641.6,"+1,",.05)=DTYE
"RTN","DSIO3A",43,0)
 I '$$VALID(.06,DIRECT) D  Q
"RTN","DSIO3A",44,0)
 .S RET="-1^Unknown DIRECTION."
"RTN","DSIO3A",45,0)
 S IPT(19641.6,"+1,",.06)=DIRECT
"RTN","DSIO3A",46,0)
 S IPT(19641.6,"+1,",1.1)=TITLE
"RTN","DSIO3A",47,0)
 S IPT(19641.6,"+1,",1.2)=FAC
"RTN","DSIO3A",48,0)
 S IPT(19641.6,"+1,",1.3)=REC
"RTN","DSIO3A",49,0)
 D UPDATE^DIE("E","IPT","IEN")
"RTN","DSIO3A",50,0)
 I +$G(IEN(1))<1 S RET=-1 Q
"RTN","DSIO3A",51,0)
 ;
"RTN","DSIO3A",52,0)
 ; WE CAN'T PROCESS THE ZERO NODE WITH WP^DIE SO INSTEAD OF MERGING
"RTN","DSIO3A",53,0)
 ; WE CAN USE %XY^%RCR TO CONCATENATE A SUBSCRIPT
"RTN","DSIO3A",54,0)
 ;
"RTN","DSIO3A",55,0)
 K ^TMP($J,"DSIOIHE")
"RTN","DSIO3A",56,0)
 S %X="DOC(",%Y="^TMP($J,""DSIOIHE"",1" D %XY^%RCR
"RTN","DSIO3A",57,0)
 D WP^DIE(19641.6,IEN(1)_",",2,"K","^TMP($J,""DSIOIHE"")")
"RTN","DSIO3A",58,0)
 K ^TMP($J,"DSIOIHE") S RET=IEN(1)
"RTN","DSIO3A",59,0)
 Q
"RTN","DSIO3A",60,0)
 ;
"RTN","DSIO3A",61,0)
VALID(FLD,VAL) ; CHECK IF A VALUE IS VALID
"RTN","DSIO3A",62,0)
 N VALID,ERR D VAL^DIE(19641.6,,FLD,,VAL,.VALID,,"ERR")
"RTN","DSIO3A",63,0)
 I VALID["^"!($D(ERR)) Q 0
"RTN","DSIO3A",64,0)
 Q 1
"RTN","DSIO3A",65,0)
 ;
"RTN","DSIO3A",66,0)
LIST(RET,DFN,SORT) ; DSIO IHE PATIENT LIST
"RTN","DSIO3A",67,0)
 N SCR,FLDS,OUT,ERR,STRT,T,CT,I,Z,TO S TO=0
"RTN","DSIO3A",68,0)
 S RET=$NA(^TMP($J,"DSIOIHEL")),OUT=$NA(^TMP($J,"DSIOIHEP")) K @RET,@OUT
"RTN","DSIO3A",69,0)
 S SCR="S TO=TO+1 I $P(^(0),U,2)=DFN"
"RTN","DSIO3A",70,0)
 S FLDS="@;.01;.02;.03;.04;.05;.06;1.1;1.2;1.3"
"RTN","DSIO3A",71,0)
 S @RET@(0)=-1 D LIST^DIC(19641.6,,FLDS,"P",,,,"P",SCR,,OUT,"ERR") Q:$D(ERR)
"RTN","DSIO3A",72,0)
 S (STRT,T)=0 I $G(SORT)?.N1",".N D
"RTN","DSIO3A",73,0)
 .S STRT=$$FN^DSIO2($P(SORT,","),$P(SORT,",",2))
"RTN","DSIO3A",74,0)
 S CT=1,Z=0 F I=0:1 S Z=$O(@OUT@("DILIST",Z)) Q:Z=""  D
"RTN","DSIO3A",75,0)
 .Q:I<STRT
"RTN","DSIO3A",76,0)
 .I $P($G(SORT),",",2)'="" I T>=$P($G(SORT),",",2) S T=T+1 Q
"RTN","DSIO3A",77,0)
 .S @RET@(CT)=@OUT@("DILIST",Z,0)
"RTN","DSIO3A",78,0)
 .S T=T+1,CT=CT+1
"RTN","DSIO3A",79,0)
 I T>0 S @RET@(0)=TO
"RTN","DSIO3A",80,0)
 K @OUT
"RTN","DSIO3A",81,0)
 Q
"RTN","DSIO3A",82,0)
 ;
"RTN","DSIO3A",83,0)
DOC(RET,IEN,XML) ; DSIO IHE GET DOC
"RTN","DSIO3A",84,0)
 N DFN,FLDS,OUT,I,LB
"RTN","DSIO3A",85,0)
 S RET=$NA(^TMP($J,"DSIOIHED")) K @RET S @RET@(0)=-1 Q:$G(IEN)<1
"RTN","DSIO3A",86,0)
 I $G(XML)=1 D  S:'$D(@RET) @RET@(0)=-1 Q
"RTN","DSIO3A",87,0)
 .K @RET D GETS^DIQ(19641.6,IEN_",",2,"E",RET)
"RTN","DSIO3A",88,0)
 .K @RET@(19641.6,IEN_",",2,"E")
"RTN","DSIO3A",89,0)
 S DFN=$$GET1^DIQ(19641.6,IEN_",",.02,"I")
"RTN","DSIO3A",90,0)
 S FLDS="@;.01;.02;.03;.04;.05;.06;1.1;1.2;1.3"
"RTN","DSIO3A",91,0)
 D GETS^DIQ(19641.6,IEN_",",FLDS,,"OUT")
"RTN","DSIO3A",92,0)
 S Z=$NA(OUT) F I=0:1 S Z=$Q(@Z) Q:Z=""  D
"RTN","DSIO3A",93,0)
 .K LB D FIELD^DID(19641.6,$QS(Z,3),,"LABEL","LB")
"RTN","DSIO3A",94,0)
 .S @RET@(I)=$G(LB("LABEL"))_U_@Z
"RTN","DSIO3A",95,0)
 .S:$P(@RET@(I),U)="PATIENT" $P(@RET@(I),U,3)=DFN
"RTN","DSIO3A",96,0)
 Q
"RTN","DSIO3A",97,0)
 ;
"RTN","DSIO3A",98,0)
 ; TASK AND SAVE1 IF SAVE NEEDS TO BE BECOME A SCHEDULED TASK
"RTN","DSIO3A",99,0)
 ;
"RTN","DSIO3A",100,0)
TASK ; TASK THE SAVE
"RTN","DSIO3A",101,0)
 N ZTRTN,ZTDESC,ZTDTH,ZTIO,ZTUCI,ZTCPU,ZTPRI,ZTSAVE,ZTKIL,ZTSYNC,ZTSK
"RTN","DSIO3A",102,0)
 S ZTRTN="SAVE1^DSIO3A",ZTDESC="DSIO IHE IMPORT"
"RTN","DSIO3A",103,0)
 S ZTDTH=$$FMTH^XLFDT($$NOW^XLFDT),ZTSAVE("DOC")=$NA(^TMP($J,"DSIOIHES"))
"RTN","DSIO3A",104,0)
 D ^%ZTLOAD
"RTN","DSIO3A",105,0)
 Q $G(ZTSK)
"RTN","DSIO3A",106,0)
 ;
"RTN","DSIO3A",107,0)
SAVE1 ; DO THE SAVE
"RTN","DSIO3A",108,0)
 Q
"RTN","DSIO4")
0^1^B10386560
"RTN","DSIO4",1,0)
DSIO4 ;DSS/TFF - DSIO RPCS;06/28/2013 15:19
"RTN","DSIO4",2,0)
 ;;1.0;DSS,INC OPEN SOURCE;;28 Jan 2013;Build 19
"RTN","DSIO4",3,0)
 ;Copyright 1995-2014,Document Storage Systems Inc. All Rights Reserved
"RTN","DSIO4",4,0)
 ;
"RTN","DSIO4",5,0)
 ;
"RTN","DSIO4",6,0)
 ; Documented API and ICRs
"RTN","DSIO4",7,0)
 ; -----------------------
"RTN","DSIO4",8,0)
 ;
"RTN","DSIO4",9,0)
 Q
"RTN","DSIO4",10,0)
 ;
"RTN","DSIO4",11,0)
CONTACT(RET,DFN) ; RPC: DSIO NEXT CONTACT DATE
"RTN","DSIO4",12,0)
 ;
"RTN","DSIO4",13,0)
 ; RETURN = LITERAL
"RTN","DSIO4",14,0)
 ;
"RTN","DSIO4",15,0)
 S DFN=$G(DFN),RET=$$GET1^DIQ(19641,DFN_",",.03)
"RTN","DSIO4",16,0)
 Q
"RTN","DSIO4",17,0)
 ;
"RTN","DSIO4",18,0)
SENT(RET,SAVE) ; RPC: DSIO SAVE NON VA ENTITY
"RTN","DSIO4",19,0)
 ;
"RTN","DSIO4",20,0)
 ; SAVE(#)=FIELD^VALUE   (FOR .01: FIELD^OLD^NEW VALUE)
"RTN","DSIO4",21,0)
 ; RETURN: LITERAL
"RTN","DSIO4",22,0)
 ;         -1^ERROR MESSAGE
"RTN","DSIO4",23,0)
 ;          1^IEN
"RTN","DSIO4",24,0)
 ;
"RTN","DSIO4",25,0)
 N CT,FLD,TMP,IPT,IEN,FLG S RET=-1
"RTN","DSIO4",26,0)
 S CT="" F  S CT=$O(SAVE(CT)) Q:CT=""  D
"RTN","DSIO4",27,0)
 .S FLD=$$FLDNUM^DILFD(19641.1,$$UP^XLFSTR($P(SAVE(CT),U))) Q:FLD=0
"RTN","DSIO4",28,0)
 .S TMP(FLD)=$P(SAVE(CT),U,2,3)
"RTN","DSIO4",29,0)
 I $G(TMP(.01))="" S RET="-1^The name of the entity must be provided." Q
"RTN","DSIO4",30,0)
 D SENT1(.IEN,.01)
"RTN","DSIO4",31,0)
 I +$G(IEN)<1 S RET="-1^Could not identify entity." Q
"RTN","DSIO4",32,0)
 K IPT S FLD="" F  S FLD=$O(TMP(FLD)) Q:FLD=""  D  Q:$D(FLG)
"RTN","DSIO4",33,0)
 .I FLD=.01&($P(TMP(FLD),U,2)'="") D  Q
"RTN","DSIO4",34,0)
 ..I $$FIND1^DIC(19641.1,,"O",$$UP^XLFSTR($P(TMP(FLD),U,2))) D  Q
"RTN","DSIO4",35,0)
 ...S RET="-1^Cannot rename an entity to match an existing entity.",FLG=1
"RTN","DSIO4",36,0)
 ..S IPT(19641.1,IEN_",",FLD)=$$UP^XLFSTR($P(TMP(FLD),U,2))
"RTN","DSIO4",37,0)
 .S:FLD'=.01 IPT(19641.1,IEN_",",FLD)=$P(TMP(FLD),U)
"RTN","DSIO4",38,0)
 .I FLD=.04 D SENT1(,.04) S IPT(19641.1,IEN_",",FLD)=$P(TMP(FLD),U)
"RTN","DSIO4",39,0)
 D:$D(IPT) FILE^DIE("E","IPT") K IPT
"RTN","DSIO4",40,0)
 S:'$D(FLG) RET="1^"_IEN
"RTN","DSIO4",41,0)
 Q
"RTN","DSIO4",42,0)
 ;
"RTN","DSIO4",43,0)
SENT1(IEN,VAL) ;
"RTN","DSIO4",44,0)
 N IPT,AIEN S IPT(19641.1,"?+1,",.01)=$$UP^XLFSTR($P(TMP(VAL),U))
"RTN","DSIO4",45,0)
 I VAL=.01 S IPT(19641.1,"?+1,",.02)=$$UP^XLFSTR($P(TMP(.02),U))
"RTN","DSIO4",46,0)
 E  S IPT(19641.1,"?+1,",.02)="P"
"RTN","DSIO4",47,0)
 D UPDATE^DIE(,"IPT","AIEN") S IEN=+AIEN(1)
"RTN","DSIO4",48,0)
 Q
"RTN","DSIO4",49,0)
 ;
"RTN","DSIO4",50,0)
RENT(RET,TYP,SORT) ; RPC: DSIO RETURN ENTITY
"RTN","DSIO4",51,0)
 ;
"RTN","DSIO4",52,0)
 ; SORT: PAGE#,CT
"RTN","DSIO4",53,0)
 ;
"RTN","DSIO4",54,0)
 ; RETURN: GLOBAL ARRAY
"RTN","DSIO4",55,0)
 ;
"RTN","DSIO4",56,0)
 ; IEN^NAME^TYPE^INACTIVE^PRIMARY PROVIDER NAME^STREET ADDRESS 1
"RTN","DSIO4",57,0)
 ; ^STREET ADDRESS 2^STREET ADDRESS 3^CITY^STATE^ZIP CODE
"RTN","DSIO4",58,0)
 ; ^PHONE NUMBER (HOME)^PHONE NUMBER (OFFICE)^PHONE NUMBER (CELL)^FAX NUMBER
"RTN","DSIO4",59,0)
 ;
"RTN","DSIO4",60,0)
 ; TYP - F        (FACILITIES)
"RTN","DSIO4",61,0)
 ;       P        (PROVIDERS)
"RTN","DSIO4",62,0)
 ;       NULL     (ALL ENTITIES)
"RTN","DSIO4",63,0)
 ;       IEN/NAME (SINGLE ENTITY)
"RTN","DSIO4",64,0)
 ;
"RTN","DSIO4",65,0)
 N FLD,IEN,OUT,ERR,TO,STRT,T,CT,Z,I,LN
"RTN","DSIO4",66,0)
 S TYP=$$UP^XLFSTR($G(TYP,"B"))
"RTN","DSIO4",67,0)
 S RET=$NA(^TMP("DSIO RENTRET",$J)),OUT=$NA(^TMP("DSIO RENT",$J))
"RTN","DSIO4",68,0)
 K @RET,@OUT S @RET@(0)="-1^No entries found."
"RTN","DSIO4",69,0)
 S FLD="@;.01;.02;.03;.04E;1.1;1.2;1.3;1.4;1.5I;1.6;2.1;2.2;2.3;2.4"
"RTN","DSIO4",70,0)
 I TYP?.N!($L(TYP)>1)&(TYP'="") D  Q
"RTN","DSIO4",71,0)
 .I TYP?.N S IEN=$$FIND1^DIC(19641.1,,"A",TYP) Q:IEN=0
"RTN","DSIO4",72,0)
 .S:'$D(IEN) IEN=$$FIND1^DIC(19641.1,,"X",TYP) Q:IEN=0
"RTN","DSIO4",73,0)
 .D GETS^DIQ(19641.1,IEN_",","*","E","OUT") Q:'$D(OUT)
"RTN","DSIO4",74,0)
 .S @RET@(0)=IEN,CT=$NA(OUT) F  S CT=$Q(@CT) Q:CT=""  S @RET@(0)=@RET@(0)_U_@CT
"RTN","DSIO4",75,0)
 .S $P(@RET@(0),U,10)=$$GET1^DIQ(19641.1,IEN_",",1.5,"I")
"RTN","DSIO4",76,0)
 S (TO,STRT,T)=0 I $G(SORT)?.N1",".N D
"RTN","DSIO4",77,0)
 .S STRT=$$FN^DSIO2($P(SORT,","),$P(SORT,",",2))
"RTN","DSIO4",78,0)
 D LIST^DIC(19641.1,,FLD,"P",,,,$G(TYP),"S TO=TO+1",,OUT,"ERR") Q:$D(ERR)
"RTN","DSIO4",79,0)
 S CT=1,Z=STRT F I=0:1 S Z=$O(@OUT@("DILIST",Z)) Q:Z=""  D
"RTN","DSIO4",80,0)
 .I $P($G(SORT),",",2)'="" I T>=$P($G(SORT),",",2) S T=T+1 Q
"RTN","DSIO4",81,0)
 .S @RET@(CT)=@OUT@("DILIST",Z,0),$P(@RET@(CT),U,2)=$$TITLE^XLFSTR($P(@RET@(CT),U,2))
"RTN","DSIO4",82,0)
 .S T=T+1,CT=CT+1
"RTN","DSIO4",83,0)
 K @OUT I T>0 S @RET@(0)=TO
"RTN","DSIO4",84,0)
 Q
"SEC","^DIC",19641.1,19641.1,0,"AUDIT")
@
"SEC","^DIC",19641.1,19641.1,0,"DD")
@
"VER")
8.0^22.0
"^DD",19641.1,19641.1,0)
FIELD^^.04^14
"^DD",19641.1,19641.1,0,"DDA")
N
"^DD",19641.1,19641.1,0,"DT")
3140401
"^DD",19641.1,19641.1,0,"ID",.02)
W "   ",@("$P($P($C(59)_$S($D(^DD(19641.1,.02,0)):$P(^(0),U,3),1:0)_$E("_DIC_"Y,0),0),$C(59)_$P(^(0),U,2)_"":"",2),$C(59),1)")
"^DD",19641.1,19641.1,0,"IX","B",19641.1,.01)

"^DD",19641.1,19641.1,0,"NM","DSIO NON-VA ENTITIES")

"^DD",19641.1,19641.1,0,"PT",19641.1,.04)

"^DD",19641.1,19641.1,.01,0)
NAME^RF^^0;1^K:$L(X)>100!($L(X)<1) X
"^DD",19641.1,19641.1,.01,1,0)
^.1
"^DD",19641.1,19641.1,.01,1,1,0)
19641.1^B
"^DD",19641.1,19641.1,.01,1,1,1)
S ^DSIO(19641.1,"B",$E(X,1,30),DA)=""
"^DD",19641.1,19641.1,.01,1,1,2)
K ^DSIO(19641.1,"B",$E(X,1,30),DA)
"^DD",19641.1,19641.1,.01,3)
Answer must be 1-100 characters in length.
"^DD",19641.1,19641.1,.01,"DT")
3140127
"^DD",19641.1,19641.1,.02,0)
TYPE^RS^F:FACILITY;P:PROVIDER;^0;2^Q
"^DD",19641.1,19641.1,.02,"DT")
3140127
"^DD",19641.1,19641.1,.03,0)
INACTIVE^S^0:NO;1:YES;^0;3^Q
"^DD",19641.1,19641.1,.03,"DT")
3140127
"^DD",19641.1,19641.1,.04,0)
PRIMARY CONTACT^*P19641.1^DSIO(19641.1,^0;4^S DIC("S")="I $P(^(0),U,2)'=""F""" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",19641.1,19641.1,.04,12)
Facility types are not allowed.
"^DD",19641.1,19641.1,.04,12.1)
S DIC("S")="I $P(^(0),U,2)'=""F"""
"^DD",19641.1,19641.1,.04,"DT")
3140401
"^DD",19641.1,19641.1,1.1,0)
STREET ADDRESS 1^F^^1;1^K:$L(X)>50!($L(X)<1) X
"^DD",19641.1,19641.1,1.1,3)
Answer must be 1-50 characters in length.
"^DD",19641.1,19641.1,1.1,"DT")
3140127
"^DD",19641.1,19641.1,1.2,0)
STREET ADDRESS 2^F^^1;2^K:$L(X)>50!($L(X)<1) X
"^DD",19641.1,19641.1,1.2,3)
Answer must be 1-50 characters in length.
"^DD",19641.1,19641.1,1.2,"DT")
3140127
"^DD",19641.1,19641.1,1.3,0)
STREET ADDRESS 3^F^^1;3^K:$L(X)>50!($L(X)<1) X
"^DD",19641.1,19641.1,1.3,3)
Answer must be 1-50 characters in length.
"^DD",19641.1,19641.1,1.3,"DT")
3140127
"^DD",19641.1,19641.1,1.4,0)
CITY^F^^1;4^K:$L(X)>20!($L(X)<1) X
"^DD",19641.1,19641.1,1.4,3)
Answer must be 1-20 characters in length.
"^DD",19641.1,19641.1,1.4,21,0)
^^3^3^3140127^
"^DD",19641.1,19641.1,1.4,21,1,0)
Enter the city in which this applicant resides [1-20 characters]. If the 
"^DD",19641.1,19641.1,1.4,21,2,0)
space provided is not sufficient please abbreviate the city to the best 
"^DD",19641.1,19641.1,1.4,21,3,0)
of your ability. 
"^DD",19641.1,19641.1,1.4,"DT")
3140127
"^DD",19641.1,19641.1,1.5,0)
STATE^*P5'X^DIC(5,^1;5^S DIC("S")="I $P(^DIC(5,Y,0),U,6)=1" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X I $D(X) S X=$P(^DIC(5,X,0),U,2)
"^DD",19641.1,19641.1,1.5,3)
Select from the available listing the state in which this entity resides.
"^DD",19641.1,19641.1,1.5,12)
This screen prevents selection of entires that are valid US states or possessions.
"^DD",19641.1,19641.1,1.5,12.1)
S DIC("S")="I $P(^DIC(5,Y,0),U,6)=1"
"^DD",19641.1,19641.1,1.5,21,0)
^^1^1^3140127^
"^DD",19641.1,19641.1,1.5,21,1,0)
From the available listing choose the state in which this entity resides.
"^DD",19641.1,19641.1,1.5,"DT")
3140401
"^DD",19641.1,19641.1,1.6,0)
ZIP CODE^FX^^1;6^K:X[""""!($A(X)=45) X I $D(X) K:$L(X)>5!($L(X)<5)!'(X?5N) X
"^DD",19641.1,19641.1,1.6,3)
Enter the zip code for the city in which this entity resides.
"^DD",19641.1,19641.1,1.6,21,0)
^^1^1^3140127^
"^DD",19641.1,19641.1,1.6,21,1,0)
Enter the zip code [5 numerics] for the city in which this entity resides.
"^DD",19641.1,19641.1,1.6,"DT")
3140127
"^DD",19641.1,19641.1,2.1,0)
PHONE NUMBER (HOME)^F^^2;1^K:$L(X)>20!($L(X)<4) X
"^DD",19641.1,19641.1,2.1,3)
Answer must be 4-20 characters in length.
"^DD",19641.1,19641.1,2.1,"DT")
3140127
"^DD",19641.1,19641.1,2.2,0)
PHONE NUMBER (OFFICE)^F^^2;2^K:$L(X)>20!($L(X)<4) X
"^DD",19641.1,19641.1,2.2,3)
Answer must be 4-20 characters in length.
"^DD",19641.1,19641.1,2.2,"DT")
3140127
"^DD",19641.1,19641.1,2.3,0)
PHONE NUMBER (CELL)^F^^2;3^K:$L(X)>20!($L(X)<4) X
"^DD",19641.1,19641.1,2.3,3)
Answer must be 4-20 characters in length.
"^DD",19641.1,19641.1,2.3,"DT")
3140127
"^DD",19641.1,19641.1,2.4,0)
FAX NUMBER^F^^2;4^K:$L(X)>20!($L(X)<4) X
"^DD",19641.1,19641.1,2.4,3)
Answer must be 4-20 characters in length.
"^DD",19641.1,19641.1,2.4,"DT")
3140127
"^DIC",19641.1,19641.1,0)
DSIO NON-VA ENTITIES^19641.1
"^DIC",19641.1,19641.1,0,"GL")
^DSIO(19641.1,
"^DIC",19641.1,"B","DSIO NON-VA ENTITIES",19641.1)

**END**
**END**
