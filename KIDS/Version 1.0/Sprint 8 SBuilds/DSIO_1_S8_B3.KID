KIDS Distribution saved on Apr 02, 2014@17:17:35
DSIO 1.0 S8 B3
**KIDS**:DSIO 1.0^

**INSTALL NAME**
DSIO 1.0
"BLD",9691,0)
DSIO 1.0^^0^3140402^n
"BLD",9691,4,0)
^9.64PA^19641.6^2
"BLD",9691,4,19641.1,0)
19641.1
"BLD",9691,4,19641.1,222)
y^y^f^^^^n
"BLD",9691,4,19641.6,0)
19641.6
"BLD",9691,4,19641.6,222)
y^y^f^^^^n
"BLD",9691,4,"B",19641.1,19641.1)

"BLD",9691,4,"B",19641.6,19641.6)

"BLD",9691,6.3)
20
"BLD",9691,"INID")
^
"BLD",9691,"INIT")

"BLD",9691,"KRN",0)
^9.67PA^779.2^20
"BLD",9691,"KRN",.4,0)
.4
"BLD",9691,"KRN",.401,0)
.401
"BLD",9691,"KRN",.402,0)
.402
"BLD",9691,"KRN",.403,0)
.403
"BLD",9691,"KRN",.5,0)
.5
"BLD",9691,"KRN",.84,0)
.84
"BLD",9691,"KRN",3.6,0)
3.6
"BLD",9691,"KRN",3.8,0)
3.8
"BLD",9691,"KRN",9.2,0)
9.2
"BLD",9691,"KRN",9.8,0)
9.8
"BLD",9691,"KRN",9.8,"NM",0)
^9.68A^3^3
"BLD",9691,"KRN",9.8,"NM",1,0)
DSIO4^^0^B12095441
"BLD",9691,"KRN",9.8,"NM",2,0)
DSIO3^^0^B148950392
"BLD",9691,"KRN",9.8,"NM",3,0)
DSIO3A^^0^B14249719
"BLD",9691,"KRN",9.8,"NM","B","DSIO3",2)

"BLD",9691,"KRN",9.8,"NM","B","DSIO3A",3)

"BLD",9691,"KRN",9.8,"NM","B","DSIO4",1)

"BLD",9691,"KRN",19,0)
19
"BLD",9691,"KRN",19,"NM",0)
^9.68A^^0
"BLD",9691,"KRN",19.1,0)
19.1
"BLD",9691,"KRN",19.1,"NM",0)
^9.68A^^
"BLD",9691,"KRN",101,0)
101
"BLD",9691,"KRN",409.61,0)
409.61
"BLD",9691,"KRN",771,0)
771
"BLD",9691,"KRN",779.2,0)
779.2
"BLD",9691,"KRN",870,0)
870
"BLD",9691,"KRN",8989.51,0)
8989.51
"BLD",9691,"KRN",8989.51,"NM",0)
^9.68A^^0
"BLD",9691,"KRN",8989.52,0)
8989.52
"BLD",9691,"KRN",8989.52,"NM",0)
^9.68A^^
"BLD",9691,"KRN",8994,0)
8994
"BLD",9691,"KRN",8994,"NM",0)
^9.68A^2^2
"BLD",9691,"KRN",8994,"NM",1,0)
DSIO IHE GET DOC^^0
"BLD",9691,"KRN",8994,"NM",2,0)
DSIO GET RECORD TEXT^^0
"BLD",9691,"KRN",8994,"NM","B","DSIO GET RECORD TEXT",2)

"BLD",9691,"KRN",8994,"NM","B","DSIO IHE GET DOC",1)

"BLD",9691,"KRN","B",.4,.4)

"BLD",9691,"KRN","B",.401,.401)

"BLD",9691,"KRN","B",.402,.402)

"BLD",9691,"KRN","B",.403,.403)

"BLD",9691,"KRN","B",.5,.5)

"BLD",9691,"KRN","B",.84,.84)

"BLD",9691,"KRN","B",3.6,3.6)

"BLD",9691,"KRN","B",3.8,3.8)

"BLD",9691,"KRN","B",9.2,9.2)

"BLD",9691,"KRN","B",9.8,9.8)

"BLD",9691,"KRN","B",19,19)

"BLD",9691,"KRN","B",19.1,19.1)

"BLD",9691,"KRN","B",101,101)

"BLD",9691,"KRN","B",409.61,409.61)

"BLD",9691,"KRN","B",771,771)

"BLD",9691,"KRN","B",779.2,779.2)

"BLD",9691,"KRN","B",870,870)

"BLD",9691,"KRN","B",8989.51,8989.51)

"BLD",9691,"KRN","B",8989.52,8989.52)

"BLD",9691,"KRN","B",8994,8994)

"BLD",9691,"PRE")

"BLD",9691,"QDEF")
^^^^NO^^^^NO^^NO
"BLD",9691,"QUES",0)
^9.62^^
"BLD",9691,"REQB",0)
^9.611^^
"FIA",19641.1)
DSIO NON-VA ENTITIES
"FIA",19641.1,0)
^DSIO(19641.1,
"FIA",19641.1,0,0)
19641.1I
"FIA",19641.1,0,1)
y^y^f^^^^n
"FIA",19641.1,0,10)

"FIA",19641.1,0,11)

"FIA",19641.1,0,"RLRO")

"FIA",19641.1,19641.1)
0
"FIA",19641.6)
DSIO IHE DOCUMENT
"FIA",19641.6,0)
^DSIO(19641.6,
"FIA",19641.6,0,0)
19641.6P
"FIA",19641.6,0,1)
y^y^f^^^^n
"FIA",19641.6,0,10)

"FIA",19641.6,0,11)

"FIA",19641.6,0,"RLRO")

"FIA",19641.6,19641.6)
0
"FIA",19641.6,19641.62)
0
"FIA",19641.6,19641.622)
0
"IX",19641.1,19641.1,"F",0)
19641.1^F^ALL FACILITIES^MU^^R^IR^I^19641.1^^^^^LS
"IX",19641.1,19641.1,"F",1)
I X(1)="F" S ^DSIO(19641.1,"F",X(2),DA)=""
"IX",19641.1,19641.1,"F",2)
I X(1)="F" K ^DSIO(19641.1,"F",X(2),DA)
"IX",19641.1,19641.1,"F",2.5)
K ^DSIO(19641.1,"F")
"IX",19641.1,19641.1,"F",11.1,0)
^.114IA^2^2
"IX",19641.1,19641.1,"F",11.1,1,0)
1^F^19641.1^.02^^^F
"IX",19641.1,19641.1,"F",11.1,1,3)

"IX",19641.1,19641.1,"F",11.1,2,0)
2^F^19641.1^.01^^1^F
"IX",19641.1,19641.1,"F",11.1,2,3)

"IX",19641.1,19641.1,"P",0)
19641.1^P^ALL PROVIDERS^MU^^R^IR^I^19641.1^^^^^LS
"IX",19641.1,19641.1,"P",1)
I X(1)="P" S ^DSIO(19641.1,"P",X(2),DA)=""
"IX",19641.1,19641.1,"P",2)
I X(1)="P" K ^DSIO(19641.1,"P",X(2),DA)
"IX",19641.1,19641.1,"P",2.5)
K ^DSIO(19641.1,"P")
"IX",19641.1,19641.1,"P",11.1,0)
^.114IA^2^2
"IX",19641.1,19641.1,"P",11.1,1,0)
1^F^19641.1^.02^^^F
"IX",19641.1,19641.1,"P",11.1,1,3)

"IX",19641.1,19641.1,"P",11.1,2,0)
2^F^19641.1^.01^^1^F
"IX",19641.1,19641.1,"P",11.1,2,3)

"IX",19641.6,19641.6,"C",0)
19641.6^C^KEY OF GUID(.01) FOR WHOLE FILE^R^^F^IR^W^19641.62^^^^^LS
"IX",19641.6,19641.6,"C",1)
S ^DSIO(19641.6,"C",X,DA(1),DA)=""
"IX",19641.6,19641.6,"C",2)
K ^DSIO(19641.6,"C",X,DA(1),DA)
"IX",19641.6,19641.6,"C",2.5)
K ^DSIO(19641.6,"C")
"IX",19641.6,19641.6,"C",11.1,0)
^.114IA^1^1
"IX",19641.6,19641.6,"C",11.1,1,0)
1^F^19641.62^.01^^1^F
"IX",19641.6,19641.6,"C",11.1,1,3)

"KRN",8994,3956,-1)
0^2
"KRN",8994,3956,0)
DSIO GET RECORD TEXT^GET^DSIO3^4^^^^1
"KRN",8994,3956,2,0)
^8994.02A^2^2
"KRN",8994,3956,2,1,0)
IEN^1^^1^1
"KRN",8994,3956,2,1,1,0)
^8994.021^1^1^3140402^^
"KRN",8994,3956,2,1,1,1,0)
PROGRESS NOTE IEN
"KRN",8994,3956,2,2,0)
TYP^1^^^2
"KRN",8994,3956,2,"B","IEN",1)

"KRN",8994,3956,2,"B","TYP",2)

"KRN",8994,3956,2,"PARAMSEQ",1,1)

"KRN",8994,3956,2,"PARAMSEQ",2,2)

"KRN",8994,3956,3,0)
^8994.03^3^3^3140402^^
"KRN",8994,3956,3,1,0)
THE PROGRESS NOTE IS RETURNED AS AN ARRAY WITH AN DISCREET DATA FIELDS 
"KRN",8994,3956,3,2,0)
RETURNED AS A LIST FIELD: DATA AT THE BOTTOM OF THE NOTE AS PART OF THE 
"KRN",8994,3956,3,3,0)
SAME ARRAY.
"KRN",8994,3973,-1)
0^1
"KRN",8994,3973,0)
DSIO IHE GET DOC^DOC^DSIO3A^4^^^^1
"KRN",8994,3973,2,0)
^8994.02A^2^2
"KRN",8994,3973,2,1,0)
GUID^1^^1^1
"KRN",8994,3973,2,2,0)
XML^1^^^2
"KRN",8994,3973,2,"B","GUID",1)

"KRN",8994,3973,2,"B","XML",2)

"KRN",8994,3973,2,"PARAMSEQ",1,1)

"KRN",8994,3973,2,"PARAMSEQ",2,2)

"MBREQ")
0
"ORD",16,8994)
8994;16;1;;;;;;;RPCDEL^XPDIA1
"ORD",16,8994,0)
REMOTE PROCEDURE
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
3
"RTN","DSIO3")
0^2^B148950392
"RTN","DSIO3",1,0)
DSIO3 ;DSS/TFF - DSIO TIU SUPPORT;06/28/2013 15:19
"RTN","DSIO3",2,0)
 ;;1.0;DSS,INC OPEN SOURCE;;28 Jan 2013;Build 20
"RTN","DSIO3",3,0)
 ;Copyright 1995-2014,Document Storage Systems Inc. All Rights Reserved
"RTN","DSIO3",4,0)
 ;
"RTN","DSIO3",5,0)
 ;
"RTN","DSIO3",6,0)
 ; Documented API and ICRs
"RTN","DSIO3",7,0)
 ; -----------------------
"RTN","DSIO3",8,0)
 ;
"RTN","DSIO3",9,0)
 Q
"RTN","DSIO3",10,0)
 ;
"RTN","DSIO3",11,0)
CREATE(RET,DFN,TITLE,NOTE,DATA) ; RPC: DSIO CREATE A NOTE
"RTN","DSIO3",12,0)
 ;
"RTN","DSIO3",13,0)
 ; ADDITIONAL PARAMETER TO SAVE DISCREET INFORMATION
"RTN","DSIO3",14,0)
 ; ARRAY(#)=LABEL/FIELD^VALUE
"RTN","DSIO3",15,0)
 ;
"RTN","DSIO3",16,0)
 ; TIUX(1202)=USER
"RTN","DSIO3",17,0)
 ; TIUX(1205)=LOCATION
"RTN","DSIO3",18,0)
 ; TIUX(1208)=COSIGNER
"RTN","DSIO3",19,0)
 ; TIUX(1301)=DT OF ENTRY
"RTN","DSIO3",20,0)
 ; TIUX(1405)=PKGREF
"RTN","DSIO3",21,0)
 ; TIUX(1701)=SUBJECT
"RTN","DSIO3",22,0)
 ; TIUX(2101)=IDPARENT
"RTN","DSIO3",23,0)
 ;
"RTN","DSIO3",24,0)
 ; ORDER:
"RTN","DSIO3",25,0)
 ; CREATE - BOILER - LOCK - UPDATE - SET - UNLOCK
"RTN","DSIO3",26,0)
 ;
"RTN","DSIO3",27,0)
 ; RETURN: LITERAL
"RTN","DSIO3",28,0)
 ;
"RTN","DSIO3",29,0)
 N TIUX,IEN,TMP,BLR S RET="0^Title not found."
"RTN","DSIO3",30,0)
 S TIUX(1202)=DUZ,TIUX(1301)=$$NOW^XLFDT
"RTN","DSIO3",31,0)
 S TITLE=$$FIND1^DIC(8925.1,,"O",TITLE) Q:TITLE=0
"RTN","DSIO3",32,0)
 D MAKE^TIUSRVP(.IEN,DFN,TITLE,,,.TIUX,,1) I +IEN=0 S RET=IEN Q
"RTN","DSIO3",33,0)
 D BLRSHELL^TIUSRVD(.TMP,TITLE,DFN) I $D(TMP) M BLR("TEXT")=@TMP
"RTN","DSIO3",34,0)
 D UPDATE
"RTN","DSIO3",35,0)
 Q
"RTN","DSIO3",36,0)
 ;
"RTN","DSIO3",37,0)
SET(RET,IEN,NOTE,DATA) ; RPC: DSIO UPDATE A NOTE
"RTN","DSIO3",38,0)
 ; 
"RTN","DSIO3",39,0)
 ; REQUIRED INPUT:
"RTN","DSIO3",40,0)
 ; ---------------
"RTN","DSIO3",41,0)
 ; IEN,NOTE
"RTN","DSIO3",42,0)
 ;
"RTN","DSIO3",43,0)
 ; THIS RETURN ALSO APPLIES TO CREATE AND ADDENDUM
"RTN","DSIO3",44,0)
 ; -----------------------------------------------
"RTN","DSIO3",45,0)
 ; If successful:
"RTN","DSIO3",46,0)
 ;   <IEN in TIU DOCUMENT FILE>^<LAST_PAGE_RECEIVED>^<TOTAL_PAGES_EXPECTED>
"RTN","DSIO3",47,0)
 ; 
"RTN","DSIO3",48,0)
 ; If unsuccessful:
"RTN","DSIO3",49,0)
 ;   0^0^0^Explanatory text
"RTN","DSIO3",50,0)
 ;
"RTN","DSIO3",51,0)
 ; RETURN: LITERAL
"RTN","DSIO3",52,0)
 ;
"RTN","DSIO3",53,0)
 Q:'$$AUTH(.RET,IEN,"EDIT RECORD")
"RTN","DSIO3",54,0)
UPDATE ;
"RTN","DSIO3",55,0)
 N TITLE,TIUX,NOTIN,CT,I,X
"RTN","DSIO3",56,0)
 S TITLE=$$TITLE(.RET,IEN) Q:TITLE<1
"RTN","DSIO3",57,0)
 S TIUX(.01)=TITLE,TIUX(1202)=DUZ,TIUX(1301)=$$NOW^XLFDT
"RTN","DSIO3",58,0)
 Q:'$$LCK(.RET,IEN)
"RTN","DSIO3",59,0)
 D UPDATE^TIUSRVP(.RET,IEN,.TIUX) I $P(RET,U,2)=1 D  Q
"RTN","DSIO3",60,0)
 .S RET="0^Error updating." D UNLCK(IEN)
"RTN","DSIO3",61,0)
 D SETDATA(IEN,.DATA)
"RTN","DSIO3",62,0)
 I $D(BLR) M NOTIN=BLR S CT=$O(NOTIN("TEXT",""),-1)+1
"RTN","DSIO3",63,0)
 S CT=1,X="" F I=CT:1 S X=$O(NOTE(X)) Q:X=""  S NOTIN("TEXT",I,0)=NOTE(X)
"RTN","DSIO3",64,0)
 S NOTIN("HDR")="1^1" ;<# of Current Page>^<Total # of Pages>
"RTN","DSIO3",65,0)
 D SETTEXT^TIUSRVPT(.RET,IEN,.NOTIN),UNLCK(IEN)
"RTN","DSIO3",66,0)
 S:+RET=0 RET="0^"_$P(RET,U,4)
"RTN","DSIO3",67,0)
 Q
"RTN","DSIO3",68,0)
 ;
"RTN","DSIO3",69,0)
ADDEN(RET,IEN,NOTE,DATA) ; RPC: DSIO MAKE ADDENDUM
"RTN","DSIO3",70,0)
 ;
"RTN","DSIO3",71,0)
 ; RETURN: LITERAL
"RTN","DSIO3",72,0)
 ;
"RTN","DSIO3",73,0)
 N TITLE,TIUX,AIEN
"RTN","DSIO3",74,0)
 Q:'$$AUTH(.RET,IEN,"MAKE ADDENDUM")
"RTN","DSIO3",75,0)
 D MAKEADD^TIUSRVP(.AIEN,IEN,.TIUX) I +AIEN=-1 S RET="0^"_$P(AIEN,U,4) Q
"RTN","DSIO3",76,0)
 S IEN=AIEN D UPDATE
"RTN","DSIO3",77,0)
 Q
"RTN","DSIO3",78,0)
 ;
"RTN","DSIO3",79,0)
GET(RET,IEN,TYP) ; RPC: DSIO GET RECORD TEXT
"RTN","DSIO3",80,0)
 ;
"RTN","DSIO3",81,0)
 ; - TYP PARAMETER 
"RTN","DSIO3",82,0)
 ;   - NULL - WHOLE NOTE WITH DISCREET DATA AND ADDENDA
"RTN","DSIO3",83,0)
 ;   - H - ONLY THE HEADER
"RTN","DSIO3",84,0)
 ;   - B - ONLY THE BODY
"RTN","DSIO3",85,0)
 ;
"RTN","DSIO3",86,0)
 ; RETURN: GLOBAL ARRAY
"RTN","DSIO3",87,0)
 ;
"RTN","DSIO3",88,0)
 N LIST,FLD,OUT,I,LN,FLG,TIUARR,DATA,NCLSS,REC S TYP=$G(TYP)
"RTN","DSIO3",89,0)
 S LIST(IEN)="",RET=$NA(^TMP("DSIO TIUVIEW",$J)) K @RET
"RTN","DSIO3",90,0)
 S FLD=".01;.06;.07;1301;1204;1208;1701;1205;1405;2101;70201;70202"
"RTN","DSIO3",91,0)
 ;
"RTN","DSIO3",92,0)
 ; RETURN JUST THE BODY OF THE NOTE FOR EDIT
"RTN","DSIO3",93,0)
 I TYP="B" D  Q
"RTN","DSIO3",94,0)
 .D GET4EDIT^TIUSRVR(.OUT,IEN,FLD)
"RTN","DSIO3",95,0)
 .S I=0,LN=$NA(@OUT) F  S LN=$Q(@LN) Q:LN=""  D
"RTN","DSIO3",96,0)
 ..I @LN="$TXT" S FLG=1 Q
"RTN","DSIO3",97,0)
 ..Q:'$D(FLG)
"RTN","DSIO3",98,0)
 ..S @RET@(I)=@LN,I=I+1
"RTN","DSIO3",99,0)
 ;
"RTN","DSIO3",100,0)
 Q:'$$AUTH(.RET,IEN,"VIEW")
"RTN","DSIO3",101,0)
 ; RETURN JUST THE HEADER OF THE NOTE
"RTN","DSIO3",102,0)
 I TYP="H" D  Q
"RTN","DSIO3",103,0)
 .S TIUARR=RET,DATA=$$SETGDATA^TIUSRVR1(IEN)
"RTN","DSIO3",104,0)
 .; Set a flag to indicate whether or not a Title is a memer of the
"RTN","DSIO3",105,0)
 .; Clinical Procedures Class (1=Yes and 0=No)
"RTN","DSIO3",106,0)
 .S NCLSS=+$$ISA^TIULX(+$G(^TIU(8925,IEN,0)),+$$CLASS^TIUCP)
"RTN","DSIO3",107,0)
 .; Call INQUIRE to get record
"RTN","DSIO3",108,0)
 .D INQUIRE^TIUSRVR2(IEN,.REC,NCLSS)
"RTN","DSIO3",109,0)
 .D LOADTOP^TIUSRVR1(.REC,IEN,0,DATA,NCLSS)
"RTN","DSIO3",110,0)
 ;
"RTN","DSIO3",111,0)
 ; RETURN THE WHOLE NOTE WITH DISCREET DATA
"RTN","DSIO3",112,0)
 D TGET^TIUSRVR1(.RET,IEN),GETS(.RET,IEN),ADD(IEN)
"RTN","DSIO3",113,0)
 Q
"RTN","DSIO3",114,0)
 ;
"RTN","DSIO3",115,0)
ADD(IEN) ;
"RTN","DSIO3",116,0)
 N SCR,CT,OUT,ERR,I S SCR="I $P(^(0),U,6)=IEN,$$STATUS^DSIO3(Y)"
"RTN","DSIO3",117,0)
 ; DOES IT HAVE ADDENDA? IF YES THEN GET ADDENDA
"RTN","DSIO3",118,0)
 I $$HASKIDS^TIUSRVLI(IEN) D
"RTN","DSIO3",119,0)
 .S CT=$O(@RET@(""),-1)+1
"RTN","DSIO3",120,0)
 .S @RET@(CT)="------------------------ ADDENDA -----------------------"
"RTN","DSIO3",121,0)
 .D LIST^DIC(8925,,"@;.01;.05;1201;1202","P",,,,"DAD",SCR,,"OUT","ERR") Q:$D(ERR)
"RTN","DSIO3",122,0)
 .S I=0 F  S I=$O(OUT("DILIST",I)) Q:I=""  D
"RTN","DSIO3",123,0)
 ..S @RET@(CT+I)=OUT("DILIST",I,0)
"RTN","DSIO3",124,0)
 Q
"RTN","DSIO3",125,0)
 ;
"RTN","DSIO3",126,0)
DELETE(RET,IEN,JUST) ; RPC: DSIO DELETE A NOTE
"RTN","DSIO3",127,0)
 ;
"RTN","DSIO3",128,0)
 ; RETURN: LITERAL
"RTN","DSIO3",129,0)
 ;
"RTN","DSIO3",130,0)
 Q:'$$AUTH(.RET,IEN,"DELETE RECORD")
"RTN","DSIO3",131,0)
 D NEEDJUST^TIUSRVA(.RET,IEN) I +RET=1&($G(JUST)="") D  Q
"RTN","DSIO3",132,0)
 .S RET="0^Justification for deletion is required."
"RTN","DSIO3",133,0)
 Q:'$$LCK(.RET,IEN)
"RTN","DSIO3",134,0)
 D DELETE^TIUSRVP(.RET,IEN,$G(JUST)) I +RET=0 S RET=1
"RTN","DSIO3",135,0)
 I +RET>1 S $P(RET,U)=0
"RTN","DSIO3",136,0)
 D UNLCK(IEN)
"RTN","DSIO3",137,0)
 Q
"RTN","DSIO3",138,0)
 ;
"RTN","DSIO3",139,0)
SIGN(RET,IEN,SIG) ; RPC: DSIO SIGN A NOTE
"RTN","DSIO3",140,0)
 ;
"RTN","DSIO3",141,0)
 ; RETURN: LITERAL
"RTN","DSIO3",142,0)
 ;
"RTN","DSIO3",143,0)
 ; $$ENCRYP^XUSRB1 - DEBUG
"RTN","DSIO3",144,0)
 ;
"RTN","DSIO3",145,0)
 D SAVED^TIUSRVP1(.RET,IEN) Q:+RET=0
"RTN","DSIO3",146,0)
 Q:'$$LCK(.RET,IEN)
"RTN","DSIO3",147,0)
 N ACT D WHATACT^TIUSRVA(.ACT,IEN)
"RTN","DSIO3",148,0)
 Q:'$$AUTH(.RET,IEN,ACT)
"RTN","DSIO3",149,0)
 D SIGN^TIUSRVP(.RET,IEN,SIG),UNLCK(IEN)
"RTN","DSIO3",150,0)
 S:+RET=0&($P(RET,U,2)="") RET=1
"RTN","DSIO3",151,0)
 Q
"RTN","DSIO3",152,0)
 ;
"RTN","DSIO3",153,0)
LIST(RET,DFN,TITLE,SORT) ; RPC: DSIO NOTES BY DFN AND TITLE
"RTN","DSIO3",154,0)
 ;
"RTN","DSIO3",155,0)
 ; SORT: PAGE#,CT
"RTN","DSIO3",156,0)
 ;
"RTN","DSIO3",157,0)
 ; X-REF: ACLPT = ALL OF PATIENTS PROGRESS NOTES IF
"RTN","DSIO3",158,0)
 ;                ^TIU(8925,"ACLPT",3(DOC CLASS-PROGRESS NOTES),8(DFN),DT,NOTE IEN
"RTN","DSIO3",159,0)
 ;
"RTN","DSIO3",160,0)
 ; STATUS : POINTER TO TIU STATUS FILE (#8925.6)
"RTN","DSIO3",161,0)
 ;
"RTN","DSIO3",162,0)
 ; RETURN: GLOBAL ARRAY - LIST ITEM^IEN^TITLE(.01)^STATUS(.05)^ENTRY DATE/TIME(1201)^
"RTN","DSIO3",163,0)
 ;                        AUTHOR/DICTATOR(1202)^VISIT LOCATION(1211)^LINKED DOC(.06)
"RTN","DSIO3",164,0)
 ; LINKED DOC
"RTN","DSIO3",165,0)
 ; ----------
"RTN","DSIO3",166,0)
 ; O:## = ORIGINAL DOC'S IEN
"RTN","DSIO3",167,0)
 ; A:## = ADDENDA DOC'S IEN
"RTN","DSIO3",168,0)
 ;
"RTN","DSIO3",169,0)
 N TNAM,OUT,SCR,ERR,TO,REC,STRT,T,CT,Z,I,LN S TNAM=TITLE
"RTN","DSIO3",170,0)
 S RET=$NA(^TMP($J,"DSIO LISTRET")),OUT=$NA(^TMP($J,"DSIO TIULIST"))
"RTN","DSIO3",171,0)
 K @RET,@OUT S @RET@(0)="0^Title not found."
"RTN","DSIO3",172,0)
 S TITLE=$$FIND1^DIC(8925.1,,"O",TITLE) Q:TITLE=0
"RTN","DSIO3",173,0)
 S (REC,TO,STRT,T)=0 I $G(SORT)?.N1",".N D
"RTN","DSIO3",174,0)
 .S STRT=$$FN^DSIO2($P(SORT,","),$P(SORT,",",2))
"RTN","DSIO3",175,0)
 S SCR="I +^(0)=TITLE,$P(^(0),U,2)=DFN,$$STATUS^DSIO3(Y) S TO=TO+1"
"RTN","DSIO3",176,0)
 D LIST^DIC(8925,,"@;.01;.05;1201;1202","P",,,,"B",SCR,,OUT,"ERR") Q:$D(ERR)
"RTN","DSIO3",177,0)
 I '$O(@OUT@("DILIST",""),-1) S @RET@(0)="Patient has no "_TNAM_" notes." Q
"RTN","DSIO3",178,0)
 S CT=1,Z="" F I=0:1 S Z=$O(@OUT@("DILIST",Z),-1) Q:Z=""  D 
"RTN","DSIO3",179,0)
 .Q:I<STRT
"RTN","DSIO3",180,0)
 .I $P($G(SORT),",",2)'="" I T>=$P($G(SORT),",",2) S T=T+1 Q
"RTN","DSIO3",181,0)
 .I Z'=0 S LN=@OUT@("DILIST",Z,0) D
"RTN","DSIO3",182,0)
 ..S REC=REC+1,@RET@(CT)=REC_U_LN_U_$$GET1^DIQ(8925,+LN_",",1211)_U D PARTS(+LN)
"RTN","DSIO3",183,0)
 ..S T=T+1,CT=CT+1
"RTN","DSIO3",184,0)
 K @OUT I T>0 S @RET@(0)=TO
"RTN","DSIO3",185,0)
 E  S @RET@(0)="0^No notes found."
"RTN","DSIO3",186,0)
 Q
"RTN","DSIO3",187,0)
 ;
"RTN","DSIO3",188,0)
PARTS(IEN) ;
"RTN","DSIO3",189,0)
 N SCR,SUB,ERR,I,IENS S SCR="I $P(^(0),U,6)=IEN,$$STATUS^DSIO3(Y)"
"RTN","DSIO3",190,0)
 ;
"RTN","DSIO3",191,0)
 ; DOES IT HAVE ADDENDA? IF YES THEN GET ADDENDA
"RTN","DSIO3",192,0)
 I $$HASKIDS^TIUSRVLI(IEN) D  S CT=$O(@RET@(""),-1)
"RTN","DSIO3",193,0)
 .D LIST^DIC(8925,,"@;.01;.05;1201;1202","P",,,,"DAD",SCR,,"SUB","ERR") Q:$D(ERR)
"RTN","DSIO3",194,0)
 .S I=0 F  S I=$O(SUB("DILIST",I)) Q:I=""  D
"RTN","DSIO3",195,0)
 ..K IENS S IENS=+SUB("DILIST",I,0)
"RTN","DSIO3",196,0)
 ..S @RET@(CT)=@RET@(CT)_"A:"_IENS_";"
"RTN","DSIO3",197,0)
 ..S @RET@(CT+I)=REC_U_SUB("DILIST",I,0)_U_$$GET1^DIQ(8925,IENS_",",1211)_U_"O:"_IEN
"RTN","DSIO3",198,0)
 ..S $P(@RET@(CT+I),U,2)=$P(@RET@(CT+I),U,2)_" to "_$P(@RET@(CT),U,2)
"RTN","DSIO3",199,0)
 ;
"RTN","DSIO3",200,0)
 ; IS IT ADDENDA? IF YES THEN GET ORIGINAL DOC
"RTN","DSIO3",201,0)
 I $$HASDAD^TIUSRVLI(IEN) D
"RTN","DSIO3",202,0)
 .; THE $P(^(0),U,6) IS PARENT (P8925'), [0;6] (IEN OF THE PARENT DOC)
"RTN","DSIO3",203,0)
 .S @RET@(CT)=@RET@(CT)_"O:"_$$GET1^DIQ(8925,IEN,.06,"I")
"RTN","DSIO3",204,0)
 Q
"RTN","DSIO3",205,0)
 ;
"RTN","DSIO3",206,0)
STATUS(IEN) ; CHECK THE STATUS OF THE NOTE, CAN THIS USER VIEW IT
"RTN","DSIO3",207,0)
 N RET I '$$AUTH(.RET,IEN,"VIEW") Q 0
"RTN","DSIO3",208,0)
 Q 1
"RTN","DSIO3",209,0)
 ;
"RTN","DSIO3",210,0)
 ;=====================================================================
"RTN","DSIO3",211,0)
 ;               D I S C R E E T  D A T A  E L E M E N T S
"RTN","DSIO3",212,0)
 ;=====================================================================
"RTN","DSIO3",213,0)
 ;
"RTN","DSIO3",214,0)
 ; DSIO TIU DISCREET CONTROL (FILE TO PUSH DISCREET DATA ELEMENTS
"RTN","DSIO3",215,0)
 ;                            ELSEWHERE) (19641.4)
"RTN","DSIO3",216,0)
 ; - FIRST BY TIU DOCUMENT DEFINITION (8925.1) THEN BY DATA ELEMENT
"RTN","DSIO3",217,0)
 ;   - A DOCUMENT DEFINITION CAN CONTROL MANY DATA ELEMENTS
"RTN","DSIO3",218,0)
 ;     - THUS IF A DATA ELEMENT IS WITHIN THE DOC DEFINITION IT WILL
"RTN","DSIO3",219,0)
 ;       EXECUTE PROVIDED M CODE TO SAVE THE DATA ELSEWHERE
"RTN","DSIO3",220,0)
 ;
"RTN","DSIO3",221,0)
 ; DSIO TIU DISCREET DATA (FILE THAT STORES THE DISCREET DATA) (19641.41)
"RTN","DSIO3",222,0)
 ; - FIRST BY PATIENT - THEN BY NOTE (8925)
"RTN","DSIO3",223,0)
 ;   - THUS MULTIPLE PATIENT NOTES (EVEN OF THE SAME TYPE) CAN HAVE
"RTN","DSIO3",224,0)
 ;     DIFFERENT DISCREET DATA ELEMENTS
"RTN","DSIO3",225,0)
 ;
"RTN","DSIO3",226,0)
 ; DSIOSILENT - SET THIS TO PREVENT THE SPECIAL X-REFS FROM TRIGGERING
"RTN","DSIO3",227,0)
 ;              THAT HELP A USER TO CREATE AN ENTRY THROUGH FM
"RTN","DSIO3",228,0)
 ;
"RTN","DSIO3",229,0)
CONTROL(IEN,FLD,S,M,WP) ; CHECK THE CONTROL FILE AND XECUTE ADDITIONAL CODE
"RTN","DSIO3",230,0)
 N DFN,TITLE,RET,XE S S=$G(S),M=$G(M),WP=$G(WP)
"RTN","DSIO3",231,0)
 S DFN=$$GET1^DIQ(8925,IEN_",",.02,"I") Q:DFN=""
"RTN","DSIO3",232,0)
 S TITLE=$$TITLE(.RET,IEN) Q:TITLE<1
"RTN","DSIO3",233,0)
 K RET S RET=$$FIND1^DIC(19641.4,,"A",TITLE) Q:RET=0
"RTN","DSIO3",234,0)
 K RET S RET=$$FIND1^DIC(19641.42,","_TITLE_",","X",FLD) Q:RET=0
"RTN","DSIO3",235,0)
 S XE=$$GET1^DIQ(19641.42,RET_","_TITLE,1) X:XE'="" XE
"RTN","DSIO3",236,0)
 Q
"RTN","DSIO3",237,0)
 ;
"RTN","DSIO3",238,0)
CPRS(RET,IEN,DATA,ELE) ; RPC: DSIO SET NOTE DATA
"RTN","DSIO3",239,0)
 ; USED FROM CPRS - PREPARE TO USE SETDATA
"RTN","DSIO3",240,0)
 ;
"RTN","DSIO3",241,0)
 ; EXAMPLE:
"RTN","DSIO3",242,0)
 ; ^TMP("TEST","DATA",0)=""
"RTN","DSIO3",243,0)
 ; ^TMP("TEST","DATA",0,1)="3^Feb 26,2014"
"RTN","DSIO3",244,0)
 ; ^TMP("TEST","DATA",0,2)="4^"
"RTN","DSIO3",245,0)
 ; ^TMP("TEST","ELE",0)=5333
"RTN","DSIO3",246,0)
 ; ^TMP("TEST","IEN",0)=5142
"RTN","DSIO3",247,0)
 ;
"RTN","DSIO3",248,0)
 N FLD,I,EN,TWO,FIN S RET="" Q:$G(IEN)=""
"RTN","DSIO3",249,0)
 S FLD=$$GET1^DIQ(801.41,+$G(ELE)_",",5) Q:FLD=""
"RTN","DSIO3",250,0)
 S I=0,EN=$NA(DATA) F  S EN=$Q(@EN) Q:EN=""  D
"RTN","DSIO3",251,0)
 .S:$P(@EN,U,2)'="" TWO(I)=$P(@EN,U,2),I=I+1
"RTN","DSIO3",252,0)
 Q:'$D(TWO)
"RTN","DSIO3",253,0)
 I $O(TWO(""),-1)>0 D
"RTN","DSIO3",254,0)
 .S I="" F  S I=$O(TWO(I)) Q:I=""  S FIN(I)="M^"_+$G(ELE)_U_FLD_U_TWO(I)
"RTN","DSIO3",255,0)
 I $O(TWO(""),-1)<1 S FIN(0)="S^"_+$G(ELE)_U_FLD_U_TWO($O(TWO(""),-1))
"RTN","DSIO3",256,0)
 D SETDATA(IEN,.FIN)
"RTN","DSIO3",257,0)
 Q
"RTN","DSIO3",258,0)
 ;
"RTN","DSIO3",259,0)
SETDATA(IEN,DATA,SOR,DIEN) ; SAVE DATA AS DISCREET ELEMENTS FOR A TIU NOTE
"RTN","DSIO3",260,0)
 ;
"RTN","DSIO3",261,0)
 ; DSIO NOTE CONTROL = 19641.4
"RTN","DSIO3",262,0)
 ;    DSIO NOTE DATA = 19641.41
"RTN","DSIO3",263,0)
 ;  .01          NOTE
"RTN","DSIO3",264,0)
 ;  .02          JOB      - USER JOB NUMBER TO OVERWRITE DATA DURING A SESSION
"RTN","DSIO3",265,0)
 ;  1            DATA     (multiple)
"RTN","DSIO3",266,0)
 ;  2            DIALOGS  (multiple)
"RTN","DSIO3",267,0)
 ;
"RTN","DSIO3",268,0)
 ;  IEN = TIU DOCUMENT     - IEN OF 8925
"RTN","DSIO3",269,0)
 ; DATA = ELEMENTS TO FILE - FIELD^DATA
"RTN","DSIO3",270,0)
 ;  SOR = SOURCE           - O(THER),C(NT),R(EMINDER DIALOG)
"RTN","DSIO3",271,0)
 ; DIEN = DIALOG IEN       - FILE 19641.49
"RTN","DSIO3",272,0)
 ;
"RTN","DSIO3",273,0)
 ; DSIO NOTE (S,M,WP) - FIELDS
"RTN","DSIO3",274,0)
 ;  .01          FIELD
"RTN","DSIO3",275,0)
 ;  1.1          VALUE  (MULTIPLE, WORD PROCESSING)
"RTN","DSIO3",276,0)
 ;  2.1          NOTE
"RTN","DSIO3",277,0)
 ;  2.2          SOURCE
"RTN","DSIO3",278,0)
 ;  2.3          DATE
"RTN","DSIO3",279,0)
 ;  2.4          CONTROL (NAME OF THE DELPHI CONTROL OR REMINDER DIALOG IEN)
"RTN","DSIO3",280,0)
 ;
"RTN","DSIO3",281,0)
 ; TYPE^ID^FIELD^VALUE
"RTN","DSIO3",282,0)
 ;
"RTN","DSIO3",283,0)
 ;  TYPE : S - SINGLE (IGNORES ID)
"RTN","DSIO3",284,0)
 ;         M - MULTIPLE (FIRST FIELD NAME TAKES PRIORITY)
"RTN","DSIO3",285,0)
 ;        WP - WORD PROCESSING (FIRST FIELD NAME TAKES PRIORITY)
"RTN","DSIO3",286,0)
 ; FIELD : THE LABEL OR CAPTION
"RTN","DSIO3",287,0)
 ; VALUE : THE VALUE TO BE STORED
"RTN","DSIO3",288,0)
 ;
"RTN","DSIO3",289,0)
 ; EXAMPLE ARRAY:
"RTN","DSIO3",290,0)
 ; --------------
"RTN","DSIO3",291,0)
 ; S^CONTROL^LABEL 1^SOME VALUE
"RTN","DSIO3",292,0)
 ; S^CONTROL^LABEL 2^SOME OTHER VALUE
"RTN","DSIO3",293,0)
 ; M^CONTROL^M LABEL^VALUE 1^INDEX
"RTN","DSIO3",294,0)
 ; M^CONTROL^M LABEL^VALUE 2^INDEX
"RTN","DSIO3",295,0)
 ; WP^CONTROL^WP LABEL^THIS TYPE IS USED MORE FOR A FIELD THAT
"RTN","DSIO3",296,0)
 ; WP^CONTROL^WP LABEL^CONTAINS A LOT OF TEXT THAT'S MEANT TO BE READ
"RTN","DSIO3",297,0)
 ; WP^CONTROL^WP LABEL^TOGETHER.
"RTN","DSIO3",298,0)
 ;
"RTN","DSIO3",299,0)
 N DSIOSILENT,DIC,DA,X,Y,CT,TYP,DONE,FLE,OUT,IENS,IPT,CK,ID,I,TMP,WP
"RTN","DSIO3",300,0)
 N CM,CWP,RPL,SCR,MFLE,MIENS,ND S RPL=0,SOR=$G(SOR,"O"),DSIOSILENT=1
"RTN","DSIO3",301,0)
 S DIC="^DSIO(19641.41,",DIC(0)="XL",X="`"_IEN D ^DIC
"RTN","DSIO3",302,0)
 ;
"RTN","DSIO3",303,0)
 S CT="" F  S CT=$O(DATA(CT)) Q:CT=""  D  K DB
"RTN","DSIO3",304,0)
 .S TYP=$P(DATA(CT),U) Q:$D(DONE(CT))
"RTN","DSIO3",305,0)
 .S FLE=$S(TYP="S":19641.43,TYP="M":19641.44,TYP="WP":19641.45,1:0) Q:FLE=0
"RTN","DSIO3",306,0)
 .;
"RTN","DSIO3",307,0)
 .; SESSION HANDLING
"RTN","DSIO3",308,0)
 .I $$GET1^DIQ(19641.41,IEN_",",.02)=$J S RPL=1
"RTN","DSIO3",309,0)
 .;
"RTN","DSIO3",310,0)
 .I RPL D  I +IENS<1 S RPL=0
"RTN","DSIO3",311,0)
 ..I SOR="D" S MFLE=19641.4121,MIENS=","_DIEN_","_IEN_","
"RTN","DSIO3",312,0)
 ..I SOR'="D" S MFLE=19641.411,MIENS=","_IEN_","
"RTN","DSIO3",313,0)
 ..S SCR="I $P(^(0),U,2)=$J,$$GET1^DIQ($TR($P($P(X,"";"",2),""("",2),"","""
"RTN","DSIO3",314,0)
 ..S SCR=SCR_",""""),$P(X,"";"")_"","",2.4)="""_$P(DATA(CT),U,2)_""""
"RTN","DSIO3",315,0)
 ..D LIST^DIC(MFLE,MIENS,,"BP",1,,,"J",SCR,,"OUT")
"RTN","DSIO3",316,0)
 ..S ND=$P($G(OUT("DILIST",+$O(OUT("DILIST",""),-1),0)),U)
"RTN","DSIO3",317,0)
 ..S IENS=$P($$GET1^DIQ(MFLE,ND_MIENS,.01,"I"),";")
"RTN","DSIO3",318,0)
 .;
"RTN","DSIO3",319,0)
 .; CREATE THE DATA ENTRY IF NOT REPLACING
"RTN","DSIO3",320,0)
 .I 'RPL D  Q:$G(CK(IENS))=""
"RTN","DSIO3",321,0)
 ..S IPT(19641.41,IEN_",",.02)=$J D UPDATE^DIE(,"IPT") K IPT
"RTN","DSIO3",322,0)
 ..D FILE^DID(FLE,,"ENTRIES","OUT") S IENS=OUT("ENTRIES")+1
"RTN","DSIO3",323,0)
 ..S IPT(FLE,"+"_IENS_",",.01)=$P(DATA(CT),U,3),IPT(FLE,"+"_IENS_",",2.1)=IEN
"RTN","DSIO3",324,0)
 ..S IPT(FLE,"+"_IENS_",",2.2)=SOR,IPT(FLE,"+"_IENS_",",2.3)=$$NOW^XLFDT
"RTN","DSIO3",325,0)
 ..S IPT(FLE,"+"_IENS_",",2.4)=$P(DATA(CT),U,2)
"RTN","DSIO3",326,0)
 ..D UPDATE^DIE(,"IPT","CK") K IPT
"RTN","DSIO3",327,0)
 .;
"RTN","DSIO3",328,0)
 .; ADD THE ENTRY INTO THE DATA FILE IF NOT REPLACING
"RTN","DSIO3",329,0)
 .I 'RPL D
"RTN","DSIO3",330,0)
 ..I SOR="D" D
"RTN","DSIO3",331,0)
 ...; SET THE DIALOG (DIEN) AS DINUM
"RTN","DSIO3",332,0)
 ...S DA(1)=IEN,DIC="^DSIO(19641.41,"_DA(1)_",2,",DIC(0)="XL",X="`"_DIEN
"RTN","DSIO3",333,0)
 ...D ^DIC Q:+Y<1
"RTN","DSIO3",334,0)
 ...S IPT(19641.4121,"?+1,"_DIEN_","_IEN_",",.01)=IENS_";DSIO("_FLE_","
"RTN","DSIO3",335,0)
 ...S IPT(19641.4121,"?+1,"_DIEN_","_IEN_",",.02)=$J
"RTN","DSIO3",336,0)
 ...D UPDATE^DIE(,"IPT") K IPT
"RTN","DSIO3",337,0)
 ..I SOR'="D" D
"RTN","DSIO3",338,0)
 ...S IPT(19641.411,"?+1,"_IEN_",",.01)=IENS_";DSIO("_FLE_","
"RTN","DSIO3",339,0)
 ...S IPT(19641.411,"?+1,"_IEN_",",.02)=$J
"RTN","DSIO3",340,0)
 ...D UPDATE^DIE(,"IPT") K IPT
"RTN","DSIO3",341,0)
 .;
"RTN","DSIO3",342,0)
 .; S - SINGLE
"RTN","DSIO3",343,0)
 .I TYP="S" D
"RTN","DSIO3",344,0)
 ..S IPT(FLE,IENS_",",1.1)=$P(DATA(CT),U,4) D FILE^DIE(,"IPT") K IPT
"RTN","DSIO3",345,0)
 ..D CONTROL(IEN,$P(DATA(CT),U,3),$P(DATA(CT),U,4))
"RTN","DSIO3",346,0)
 .;
"RTN","DSIO3",347,0)
 .; M - MULTIPLE
"RTN","DSIO3",348,0)
 .I TYP="M" K CM D
"RTN","DSIO3",349,0)
 ..S ID=$P(DATA(CT),U,2) Q:ID=""
"RTN","DSIO3",350,0)
 ..S I="" F  S I=$O(DATA(I)) Q:I=""  D
"RTN","DSIO3",351,0)
 ...I $P(DATA(I),U,2)=ID&($P(DATA(I),U)="M") D
"RTN","DSIO3",352,0)
 ....I $P(DATA(I),U,5)="" S $P(DATA(I),U,5)="+"
"RTN","DSIO3",353,0)
 ....S (CM,IPT(19641.46,"?+1,"_IENS_",",.01))=$P(DATA(I),U,5)
"RTN","DSIO3",354,0)
 ....S IPT(19641.46,"?+1,"_IENS_",",.02)=$P(DATA(I),U,4),DONE(I)=""
"RTN","DSIO3",355,0)
 ....D:$D(IPT) UPDATE^DIE(,"IPT") K IPT
"RTN","DSIO3",356,0)
 ..D:$D(CM) CONTROL(IEN,$P(DATA(CT),U,3),,.CM)
"RTN","DSIO3",357,0)
 .;
"RTN","DSIO3",358,0)
 .; WP - WORD PROCESSING
"RTN","DSIO3",359,0)
 .I TYP="WP" K CWP D  K @TMP
"RTN","DSIO3",360,0)
 ..S TMP=$NA(^TMP($J,"SETDATA")) K @TMP
"RTN","DSIO3",361,0)
 ..S ID=$P(DATA(CT),U,2) Q:ID=""
"RTN","DSIO3",362,0)
 ..S WP=1,I="" F  S I=$O(DATA(I)) Q:I=""  D
"RTN","DSIO3",363,0)
 ...I $P(DATA(I),U,2)=ID&($P(DATA(I),U)="WP") D
"RTN","DSIO3",364,0)
 ....S (CWP,@TMP@(WP))=$P(DATA(I),U,4),DONE(I)="",WP=WP+1
"RTN","DSIO3",365,0)
 ..D:$G(@TMP@(1))'="" WP^DIE(FLE,IENS_",",1.1,"K","@TMP")
"RTN","DSIO3",366,0)
 ..D:$D(CWP) CONTROL(IEN,$P(DATA(CT),U,3),,,.CWP)
"RTN","DSIO3",367,0)
 ;
"RTN","DSIO3",368,0)
 S IPT(19641.41,IEN_",",.02)=$J D UPDATE^DIE(,"IPT") K IPT
"RTN","DSIO3",369,0)
 Q
"RTN","DSIO3",370,0)
 ;
"RTN","DSIO3",371,0)
GETS(ARY,IEN) ; APPEND DISCREET DATA TO A NOTE ARRAY
"RTN","DSIO3",372,0)
 N I,FLD,OUT,CT S I=$O(@ARY@(""),-1)+1
"RTN","DSIO3",373,0)
 S @ARY@(I)="----------------- DISCREET DATA FIELDS -----------------",I=I+1
"RTN","DSIO3",374,0)
 S FLD="" F  S FLD=$O(^DSIO(19641.41,"FLD",IEN,FLD)) Q:FLD=""  D
"RTN","DSIO3",375,0)
 .K OUT D GETDATA(.OUT,IEN,FLD) Q:'$D(OUT)
"RTN","DSIO3",376,0)
 .S @ARY@(I)=FLD_": "_OUT(0),I=I+1
"RTN","DSIO3",377,0)
 .I $O(OUT(""),-1)>0 S CT=0 F  S CT=$O(OUT(CT)) Q:CT=""  D
"RTN","DSIO3",378,0)
 ..S $E(@ARY@(I),$L(FLD)+3)=OUT(CT),I=I+1
"RTN","DSIO3",379,0)
 I @ARY@($O(@ARY@(""),-1))="----------------- DISCREET DATA FIELDS -----------------" D
"RTN","DSIO3",380,0)
 .K @ARY@($O(@ARY@(""),-1))
"RTN","DSIO3",381,0)
 Q
"RTN","DSIO3",382,0)
 ;
"RTN","DSIO3",383,0)
GETDATA(OUT,IEN,FLD) ; RPC: DSIO GET NOTE ELEMENT
"RTN","DSIO3",384,0)
 ;
"RTN","DSIO3",385,0)
 ; GET DATA SAVED AS DISCREET ELEMENTS LINKED TO A TIU NOTE
"RTN","DSIO3",386,0)
 ; THE FLD X-REF IS BUILT FROM FILES 19641.43,.44,.45
"RTN","DSIO3",387,0)
 ;
"RTN","DSIO3",388,0)
 ; RETURN: LIST
"RTN","DSIO3",389,0)
 ;
"RTN","DSIO3",390,0)
 N I,FLE,FI,CT,M S I=0,OUT(I)=""
"RTN","DSIO3",391,0)
 S FLD=$$UP^XLFSTR($G(FLD)) Q:FLD=""
"RTN","DSIO3",392,0)
 S FLE="" F  S FLE=$O(^DSIO(19641.41,"FLD",IEN,FLD,FLE)) Q:FLE=""  D
"RTN","DSIO3",393,0)
 .S FI="" F  S FI=$O(^DSIO(19641.41,"FLD",IEN,FLD,FLE,FI)) Q:FI=""  D
"RTN","DSIO3",394,0)
 ..I FLE[".43" S OUT(I)=$$GET1^DIQ(FLE,FI_",",1.1),I=I+1
"RTN","DSIO3",395,0)
 ..I FLE[".44" D
"RTN","DSIO3",396,0)
 ...K M D GETS^DIQ(FLE,FI_",","1.1*",,"M") I $D(M) D
"RTN","DSIO3",397,0)
 ....S CT=$NA(M) F  S CT=$Q(@CT) Q:CT=""  D
"RTN","DSIO3",398,0)
 .....I $QS(CT,3)=.01 S OUT(I)=@CT Q
"RTN","DSIO3",399,0)
 .....S OUT(I)=OUT(I)_U_@CT,I=I+1
"RTN","DSIO3",400,0)
 ..I FLE[".45" D
"RTN","DSIO3",401,0)
 ...K M D GETS^DIQ(FLE,FI_",","1.1",,"M") I $D(M) D
"RTN","DSIO3",402,0)
 ....S CT=$NA(M) F  S CT=$Q(@CT) Q:CT=""  S:$QL(CT)=4 OUT(I)=@CT,I=I+1
"RTN","DSIO3",403,0)
 Q
"RTN","DSIO3",404,0)
 ;
"RTN","DSIO3",405,0)
TRACK(RET,IEN) ; RPC: DSIO IS IT CONTROLLED?
"RTN","DSIO3",406,0)
 ;
"RTN","DSIO3",407,0)
 ;IS THIS A DISCREET DATA COLLECTING NOTE?
"RTN","DSIO3",408,0)
 ;
"RTN","DSIO3",409,0)
 I $$FIND1^DIC(19641.4,,"A",+$$TITLE(.RET,IEN))>0 S RET=1
"RTN","DSIO3",410,0)
 E  S RET=0
"RTN","DSIO3",411,0)
 Q
"RTN","DSIO3",412,0)
 ;
"RTN","DSIO3",413,0)
 ;=====================================================================
"RTN","DSIO3",414,0)
 ;                         U T I L I T I E S
"RTN","DSIO3",415,0)
 ;=====================================================================
"RTN","DSIO3",416,0)
 ;
"RTN","DSIO3",417,0)
TITLE(OUT,IEN) ; TIU GET DOCUMENT TITLE
"RTN","DSIO3",418,0)
 N RET S RET="" D GETTITLE^TIUSRVA(.RET,IEN)
"RTN","DSIO3",419,0)
 I +RET<1 S OUT="0^Title not found."
"RTN","DSIO3",420,0)
 Q +RET
"RTN","DSIO3",421,0)
 ;
"RTN","DSIO3",422,0)
AUTH(OUT,IEN,ACT) ; TIU AUTHORIZATION
"RTN","DSIO3",423,0)
 N RET S RET="" D CANDO^TIUSRVA(.RET,IEN,ACT)
"RTN","DSIO3",424,0)
 I +RET=0 D
"RTN","DSIO3",425,0)
 .I $G(OUT)["^TMP(" S @OUT@(0)=RET Q
"RTN","DSIO3",426,0)
 .S OUT=RET
"RTN","DSIO3",427,0)
 Q RET
"RTN","DSIO3",428,0)
 ;
"RTN","DSIO3",429,0)
LCK(OUT,IEN) ; TIU LOCK RECORD
"RTN","DSIO3",430,0)
 ;
"RTN","DSIO3",431,0)
 ; 0 if the LOCK was GRANTED
"RTN","DSIO3",432,0)
 ; 1^<Explanatory Message> if LOCK was DENIED
"RTN","DSIO3",433,0)
 ;
"RTN","DSIO3",434,0)
 ; TRANSFORMED: 0 IS FAIL
"RTN","DSIO3",435,0)
 ;              1 IS PASS
"RTN","DSIO3",436,0)
 ;
"RTN","DSIO3",437,0)
 S OUT="" D LOCK^TIUSRVP(.OUT,IEN) I +OUT=1 S $P(OUT,U)=0 Q OUT
"RTN","DSIO3",438,0)
 Q 1
"RTN","DSIO3",439,0)
 ;
"RTN","DSIO3",440,0)
UNLCK(IEN) ; TIU UNLOCK RECORD
"RTN","DSIO3",441,0)
 N OUT S OUT="" D UNLOCK^TIUSRVP(.OUT,IEN)
"RTN","DSIO3",442,0)
 Q 1
"RTN","DSIO3A")
0^3^B14249719
"RTN","DSIO3A",1,0)
DSIO3A ;DSS/TFF - DSIO IHE SUPPORT;06/28/2013 15:19
"RTN","DSIO3A",2,0)
 ;;1.0;DSS,INC OPEN SOURCE;;28 Jan 2013;Build 20
"RTN","DSIO3A",3,0)
 ;Copyright 1995-2014,Document Storage Systems Inc. All Rights Reserved
"RTN","DSIO3A",4,0)
 ;
"RTN","DSIO3A",5,0)
 ;
"RTN","DSIO3A",6,0)
 ; Documented API and ICRs
"RTN","DSIO3A",7,0)
 ; -----------------------
"RTN","DSIO3A",8,0)
 ;
"RTN","DSIO3A",9,0)
 Q
"RTN","DSIO3A",10,0)
 ;
"RTN","DSIO3A",11,0)
SAVE(RET,GUID,DFN,DIRECT,DTC,DTIE,DTYE,TITLE,FAC,REC,DOC) ; DSIO IHE SAVE
"RTN","DSIO3A",12,0)
 ;
"RTN","DSIO3A",13,0)
 ; .01    DFN = PATIENT NUMBER
"RTN","DSIO3A",14,0)
 ;   1 subfile - GUID
"RTN","DSIO3A",15,0)
 ; .01    GUID = GUID
"RTN","DSIO3A",16,0)
 ; .02     DTC = DATE/TIME OF CREATION
"RTN","DSIO3A",17,0)
 ; .03    DTIE = DATE/TIME OF IMPORT/EXPORT
"RTN","DSIO3A",18,0)
 ; .04    DTYE = DOCUMENT TYPE
"RTN","DSIO3A",19,0)
 ; .05  DIRECT = DIRECTION (IN/OUT)
"RTN","DSIO3A",20,0)
 ; 1.1   TITLE = DOCUMENT TITLE
"RTN","DSIO3A",21,0)
 ; 1.2     FAC = SENDING FACILITY/PROVIDER
"RTN","DSIO3A",22,0)
 ; 1.3     REC = INTENDED RECIPIENT
"RTN","DSIO3A",23,0)
 ; 2       DOC = DOCUMENT CONTENT IN XML
"RTN","DSIO3A",24,0)
 ;
"RTN","DSIO3A",25,0)
 N DIC,DA,X,Y,IPT,DATE,IEN,IENS,ERR,%X,%Y
"RTN","DSIO3A",26,0)
 S GUID=$G(GUID),DFN=$G(DFN),DIRECT=$G(DIRECT),DTC=$G(DTC),DTIE=$G(DTIE)
"RTN","DSIO3A",27,0)
 S DTYE=$G(DTYE),TITLE=$G(TITLE),FAC=$G(FAC),REC=$G(REC),DOC=$G(DOC)
"RTN","DSIO3A",28,0)
 S DIC="^DSIO(19641.6,",DIC(0)="XL",X="`"_DFN D ^DIC
"RTN","DSIO3A",29,0)
 I +Y<1 S RET="-1^The DFN is invalid." Q
"RTN","DSIO3A",30,0)
 S IEN=+Y,IPT(19641.62,"+1,"_IEN_",",.01)=GUID
"RTN","DSIO3A",31,0)
 D UPDATE^DIE("E","IPT","IENS") K IPT
"RTN","DSIO3A",32,0)
 I +$G(IENS(1))<1 S RET="-1^The GUID is invalid or not unique." Q
"RTN","DSIO3A",33,0)
 S DATE=$$DT^DSIO2(DTC) I DATE=-1!('$$VALID(.02,DATE)) D  Q
"RTN","DSIO3A",34,0)
 .S RET="-1^Unable to translate Date of Creation."
"RTN","DSIO3A",35,0)
 S IPT(19641.62,IENS(1)_","_IEN_",",.02)=DATE
"RTN","DSIO3A",36,0)
 S DATE=$$DT^DSIO2(DTIE) I DATE=-1!('$$VALID(.03,DATE)) D  Q
"RTN","DSIO3A",37,0)
 .S RET="-1^Unable to translate Date of Import/Export."
"RTN","DSIO3A",38,0)
 S IPT(19641.62,IENS(1)_","_IEN_",",.03)=$G(DATE,$$NOW^XLFDT)
"RTN","DSIO3A",39,0)
 I '$$VALID(.04,DTYE) D  Q
"RTN","DSIO3A",40,0)
 .S RET="-1^Unknown DOCUMENT TYPE."
"RTN","DSIO3A",41,0)
 S IPT(19641.62,IENS(1)_","_IEN_",",.04)=DTYE
"RTN","DSIO3A",42,0)
 I '$$VALID(.05,DIRECT) D  Q
"RTN","DSIO3A",43,0)
 .S RET="-1^Unknown DIRECTION."
"RTN","DSIO3A",44,0)
 S IPT(19641.62,IENS(1)_","_IEN_",",.05)=DIRECT
"RTN","DSIO3A",45,0)
 S IPT(19641.62,IENS(1)_","_IEN_",",1.1)=TITLE
"RTN","DSIO3A",46,0)
 S IPT(19641.62,IENS(1)_","_IEN_",",1.2)=FAC
"RTN","DSIO3A",47,0)
 S IPT(19641.62,IENS(1)_","_IEN_",",1.3)=REC
"RTN","DSIO3A",48,0)
 D FILE^DIE("E","IPT","ERR")
"RTN","DSIO3A",49,0)
 I $D(ERR) S RET=-1 Q
"RTN","DSIO3A",50,0)
 ;
"RTN","DSIO3A",51,0)
 ; WE CAN'T PROCESS THE ZERO NODE WITH WP^DIE SO INSTEAD OF MERGING
"RTN","DSIO3A",52,0)
 ; WE CAN USE %XY^%RCR TO CONCATENATE A SUBSCRIPT
"RTN","DSIO3A",53,0)
 ;
"RTN","DSIO3A",54,0)
 K ^TMP($J,"DSIOIHE")
"RTN","DSIO3A",55,0)
 S %X="DOC(",%Y="^TMP($J,""DSIOIHE"",1" D %XY^%RCR
"RTN","DSIO3A",56,0)
 D WP^DIE(19641.62,IENS(1)_","_IEN_",",2,"K","^TMP($J,""DSIOIHE"")")
"RTN","DSIO3A",57,0)
 K ^TMP($J,"DSIOIHE") S RET=IENS(1)_U_IEN
"RTN","DSIO3A",58,0)
 Q
"RTN","DSIO3A",59,0)
 ;
"RTN","DSIO3A",60,0)
VALID(FLD,VAL) ; CHECK IF A VALUE IS VALID
"RTN","DSIO3A",61,0)
 N VALID,ERR D VAL^DIE(19641.62,IENS(1)_","_IEN_",",FLD,,VAL,.VALID,,"ERR")
"RTN","DSIO3A",62,0)
 I VALID["^"!($D(ERR)) Q 0
"RTN","DSIO3A",63,0)
 Q 1
"RTN","DSIO3A",64,0)
 ;
"RTN","DSIO3A",65,0)
LIST(RET,DFN,SORT) ; DSIO IHE PATIENT LIST
"RTN","DSIO3A",66,0)
 N SCR,FLDS,OUT,ERR,STRT,T,CT,I,Z,TO S TO=0
"RTN","DSIO3A",67,0)
 S RET=$NA(^TMP($J,"DSIOIHEL")),OUT=$NA(^TMP($J,"DSIOIHEP")) K @RET,@OUT
"RTN","DSIO3A",68,0)
 S @RET@(0)=-1
"RTN","DSIO3A",69,0)
 S SCR="S TO=TO+1",FLDS="@;.01;.02;.03;.04;.05;1.1;1.2;1.3"
"RTN","DSIO3A",70,0)
 D LIST^DIC(19641.62,","_DFN_",",FLDS,"P",,,,,SCR,,OUT,"ERR") Q:$D(ERR)
"RTN","DSIO3A",71,0)
 S (STRT,T)=0 I $G(SORT)?.N1",".N D
"RTN","DSIO3A",72,0)
 .S STRT=$$FN^DSIO2($P(SORT,","),$P(SORT,",",2))
"RTN","DSIO3A",73,0)
 S CT=1,Z=0 F I=0:1 S Z=$O(@OUT@("DILIST",Z)) Q:Z=""  D
"RTN","DSIO3A",74,0)
 .Q:I<STRT
"RTN","DSIO3A",75,0)
 .I $P($G(SORT),",",2)'="" I T>=$P($G(SORT),",",2) S T=T+1 Q
"RTN","DSIO3A",76,0)
 .S @RET@(CT)=@OUT@("DILIST",Z,0)
"RTN","DSIO3A",77,0)
 .S T=T+1,CT=CT+1
"RTN","DSIO3A",78,0)
 I T>0 S @RET@(0)=TO
"RTN","DSIO3A",79,0)
 K @OUT
"RTN","DSIO3A",80,0)
 Q
"RTN","DSIO3A",81,0)
 ;
"RTN","DSIO3A",82,0)
DOC(RET,GUID,XML) ; DSIO IHE GET DOC
"RTN","DSIO3A",83,0)
 N DFN,IENS,FLDS,OUT,ERR,Z,I,LB
"RTN","DSIO3A",84,0)
 S RET=$NA(^TMP($J,"DSIOIHED")) K @RET S @RET@(0)=-1
"RTN","DSIO3A",85,0)
 S DFN=$$FIND1^DIC(19641.6,,"O",GUID,"C") Q:DFN<1
"RTN","DSIO3A",86,0)
 S IENS=$O(^DSIO(19641.6,"C",GUID,DFN,"")) ;Need to get find to work
"RTN","DSIO3A",87,0)
 I $G(XML)=1 D  S:'$D(@RET) @RET@(0)=-1 Q
"RTN","DSIO3A",88,0)
 .K @RET D GETS^DIQ(19641.62,IENS_","_DFN_",",2,"E",RET)
"RTN","DSIO3A",89,0)
 .K @RET@(19641.62,IENS_","_DFN_",",2,"E")
"RTN","DSIO3A",90,0)
 S FLDS="@;.01;.02;.03;.04;.05;1.1;1.2;1.3"
"RTN","DSIO3A",91,0)
 D GETS^DIQ(19641.62,IENS_","_DFN_",",FLDS,,"OUT") Q:'$D(OUT)
"RTN","DSIO3A",92,0)
 S @RET@(0)="PATIENT^"_$$NAME^DSIO2($$GET1^DIQ(2,DFN_",",.01))
"RTN","DSIO3A",93,0)
 S Z=$NA(OUT) F I=1:1 S Z=$Q(@Z) Q:Z=""  D
"RTN","DSIO3A",94,0)
 .K LB D FIELD^DID(19641.62,$QS(Z,3),,"LABEL","LB")
"RTN","DSIO3A",95,0)
 .S @RET@(I)=$G(LB("LABEL"))_U_@Z
"RTN","DSIO3A",96,0)
 .S:$P(@RET@(I),U)="PATIENT" $P(@RET@(I),U,3)=DFN
"RTN","DSIO3A",97,0)
 Q
"RTN","DSIO4")
0^1^B12095441
"RTN","DSIO4",1,0)
DSIO4 ;DSS/TFF - DSIO RPCS;06/28/2013 15:19
"RTN","DSIO4",2,0)
 ;;1.0;DSS,INC OPEN SOURCE;;28 Jan 2013;Build 20
"RTN","DSIO4",3,0)
 ;Copyright 1995-2014,Document Storage Systems Inc. All Rights Reserved
"RTN","DSIO4",4,0)
 ;
"RTN","DSIO4",5,0)
 ;
"RTN","DSIO4",6,0)
 ; Documented API and ICRs
"RTN","DSIO4",7,0)
 ; -----------------------
"RTN","DSIO4",8,0)
 ;
"RTN","DSIO4",9,0)
 Q
"RTN","DSIO4",10,0)
 ;
"RTN","DSIO4",11,0)
CONTACT(RET,DFN) ; RPC: DSIO NEXT CONTACT DATE
"RTN","DSIO4",12,0)
 ;
"RTN","DSIO4",13,0)
 ; RETURN = LITERAL
"RTN","DSIO4",14,0)
 ;
"RTN","DSIO4",15,0)
 S DFN=$G(DFN),RET=$$GET1^DIQ(19641,DFN_",",.03)
"RTN","DSIO4",16,0)
 Q
"RTN","DSIO4",17,0)
 ;
"RTN","DSIO4",18,0)
SENT(RET,SAVE) ; RPC: DSIO SAVE NON VA ENTITY
"RTN","DSIO4",19,0)
 ;
"RTN","DSIO4",20,0)
 ; SAVE(#)=FIELD^VALUE   (FOR .01: FIELD^OLD^NEW VALUE)
"RTN","DSIO4",21,0)
 ; RETURN: LITERAL
"RTN","DSIO4",22,0)
 ;         -1^ERROR MESSAGE
"RTN","DSIO4",23,0)
 ;          1^IEN
"RTN","DSIO4",24,0)
 ;
"RTN","DSIO4",25,0)
 N CT,FLD,TMP,IPT,IPT1,IEN,FLG S RET=-1
"RTN","DSIO4",26,0)
 S CT="" F  S CT=$O(SAVE(CT)) Q:CT=""  D
"RTN","DSIO4",27,0)
 .S FLD=$$FLDNUM^DILFD(19641.1,$$UP^XLFSTR($P(SAVE(CT),U))) Q:FLD=0
"RTN","DSIO4",28,0)
 .S TMP(FLD)=$P(SAVE(CT),U,2,3)
"RTN","DSIO4",29,0)
 I $G(TMP(.01))="" S RET="-1^The name of the entity must be provided." Q
"RTN","DSIO4",30,0)
 D SENT1(.IEN,.01)
"RTN","DSIO4",31,0)
 I +$G(IEN)<1 S RET="-1^Could not identify entity." Q
"RTN","DSIO4",32,0)
 K IPT S FLD="" F  S FLD=$O(TMP(FLD)) Q:FLD=""  D  Q:$D(FLG)
"RTN","DSIO4",33,0)
 .I FLD=.01&($P(TMP(FLD),U,2)'="") D  Q
"RTN","DSIO4",34,0)
 ..I $$FIND1^DIC(19641.1,,"O",$$UP^XLFSTR($P(TMP(FLD),U,2))) D  Q
"RTN","DSIO4",35,0)
 ...S RET="-1^Cannot rename an entity to match an existing entity.",FLG=1
"RTN","DSIO4",36,0)
 ..S IPT(19641.1,IEN_",",FLD)=$$UP^XLFSTR($P(TMP(FLD),U,2))
"RTN","DSIO4",37,0)
 .S:FLD'=.01!(FLD'=1.5) IPT(19641.1,IEN_",",FLD)=$P(TMP(FLD),U)
"RTN","DSIO4",38,0)
 .I FLD=.04 D SENT1(,.04) S IPT(19641.1,IEN_",",FLD)=$$UP^XLFSTR($P(TMP(FLD),U))
"RTN","DSIO4",39,0)
 .I FLD=1.5 S IPT1(19641.1,IEN_",",FLD)=$$UP^XLFSTR($P(TMP(FLD),U))
"RTN","DSIO4",40,0)
 D:$D(IPT) FILE^DIE("E","IPT"),FILE^DIE(,"IPT1") K IPT,IPT1
"RTN","DSIO4",41,0)
 S:'$D(FLG) RET="1^"_IEN
"RTN","DSIO4",42,0)
 Q
"RTN","DSIO4",43,0)
 ;
"RTN","DSIO4",44,0)
SENT1(IEN,VAL) ;
"RTN","DSIO4",45,0)
 N IPT,AIEN S IPT(19641.1,"?+1,",.01)=$$UP^XLFSTR($P(TMP(VAL),U))
"RTN","DSIO4",46,0)
 I VAL=.01 S IPT(19641.1,"?+1,",.02)=$$UP^XLFSTR($P(TMP(.02),U))
"RTN","DSIO4",47,0)
 E  S IPT(19641.1,"?+1,",.02)="P"
"RTN","DSIO4",48,0)
 D UPDATE^DIE(,"IPT","AIEN") S IEN=+AIEN(1)
"RTN","DSIO4",49,0)
 Q
"RTN","DSIO4",50,0)
 ;
"RTN","DSIO4",51,0)
RENT(RET,TYP,SORT) ; RPC: DSIO RETURN ENTITY
"RTN","DSIO4",52,0)
 ;
"RTN","DSIO4",53,0)
 ; SORT: PAGE#,CT
"RTN","DSIO4",54,0)
 ;
"RTN","DSIO4",55,0)
 ; RETURN: GLOBAL ARRAY
"RTN","DSIO4",56,0)
 ;
"RTN","DSIO4",57,0)
 ; IEN^NAME^TYPE^INACTIVE^PRIMARY PROVIDER NAME^STREET ADDRESS 1
"RTN","DSIO4",58,0)
 ; ^STREET ADDRESS 2^STREET ADDRESS 3^CITY^STATE^ZIP CODE
"RTN","DSIO4",59,0)
 ; ^PHONE NUMBER (HOME)^PHONE NUMBER (OFFICE)^PHONE NUMBER (CELL)^FAX NUMBER
"RTN","DSIO4",60,0)
 ;
"RTN","DSIO4",61,0)
 ; TYP - F        (FACILITIES)
"RTN","DSIO4",62,0)
 ;       P        (PROVIDERS)
"RTN","DSIO4",63,0)
 ;       NULL     (ALL ENTITIES)
"RTN","DSIO4",64,0)
 ;       IEN/NAME (SINGLE ENTITY)
"RTN","DSIO4",65,0)
 ;
"RTN","DSIO4",66,0)
 N FLD,IEN,OUT,ERR,TO,STRT,T,CT,Z,I,LN
"RTN","DSIO4",67,0)
 S TYP=$$UP^XLFSTR($G(TYP,"B"))
"RTN","DSIO4",68,0)
 S RET=$NA(^TMP("DSIO RENTRET",$J)),OUT=$NA(^TMP("DSIO RENT",$J))
"RTN","DSIO4",69,0)
 K @RET,@OUT S @RET@(0)="-1^No entries found."
"RTN","DSIO4",70,0)
 S FLD="@;.01;.02;.03;.04E;1.1;1.2;1.3;1.4;1.5I;1.6;2.1;2.2;2.3;2.4"
"RTN","DSIO4",71,0)
 I TYP?.N!($L(TYP)>1)&(TYP'="") D  Q
"RTN","DSIO4",72,0)
 .I TYP?.N S IEN=$$FIND1^DIC(19641.1,,"A",TYP) Q:IEN=0
"RTN","DSIO4",73,0)
 .S:'$D(IEN) IEN=$$FIND1^DIC(19641.1,,"X",TYP) Q:IEN=0
"RTN","DSIO4",74,0)
 .D GETS^DIQ(19641.1,IEN_",","*","E","OUT") Q:'$D(OUT)
"RTN","DSIO4",75,0)
 .S @RET@(0)=IEN,CT=$NA(OUT) F  S CT=$Q(@CT) Q:CT=""  S @RET@(0)=@RET@(0)_U_@CT
"RTN","DSIO4",76,0)
 .S $P(@RET@(0),U,10)=$$GET1^DIQ(19641.1,IEN_",",1.5,"I")
"RTN","DSIO4",77,0)
 .S $P(@RET@(0),U,2)=$$TITLE^XLFSTR($P(@RET@(0),U,2))
"RTN","DSIO4",78,0)
 .S $P(@RET@(0),U,5)=$$TITLE^XLFSTR($P(@RET@(0),U,5))
"RTN","DSIO4",79,0)
 S (TO,STRT,T)=0 I $G(SORT)?.N1",".N D
"RTN","DSIO4",80,0)
 .S STRT=$$FN^DSIO2($P(SORT,","),$P(SORT,",",2))
"RTN","DSIO4",81,0)
 D LIST^DIC(19641.1,,FLD,"P",,,,$G(TYP),"S TO=TO+1",,OUT,"ERR") Q:$D(ERR)
"RTN","DSIO4",82,0)
 S CT=1,Z=STRT F I=0:1 S Z=$O(@OUT@("DILIST",Z)) Q:Z=""  D
"RTN","DSIO4",83,0)
 .I $P($G(SORT),",",2)'="" I T>=$P($G(SORT),",",2) S T=T+1 Q
"RTN","DSIO4",84,0)
 .S @RET@(CT)=@OUT@("DILIST",Z,0)
"RTN","DSIO4",85,0)
 .S $P(@RET@(CT),U,2)=$$TITLE^XLFSTR($P(@RET@(CT),U,2))
"RTN","DSIO4",86,0)
 .S $P(@RET@(CT),U,5)=$$TITLE^XLFSTR($P(@RET@(CT),U,5))
"RTN","DSIO4",87,0)
 .S T=T+1,CT=CT+1
"RTN","DSIO4",88,0)
 K @OUT I T>0 S @RET@(0)=TO
"RTN","DSIO4",89,0)
 Q
"SEC","^DIC",19641.1,19641.1,0,"AUDIT")
@
"SEC","^DIC",19641.1,19641.1,0,"DD")
@
"SEC","^DIC",19641.6,19641.6,0,"AUDIT")
@
"SEC","^DIC",19641.6,19641.6,0,"DD")
@
"VER")
8.0^22.0
"^DD",19641.1,19641.1,0)
FIELD^^.04^14
"^DD",19641.1,19641.1,0,"DDA")
N
"^DD",19641.1,19641.1,0,"DT")
3140401
"^DD",19641.1,19641.1,0,"ID",.02)
W "   ",@("$P($P($C(59)_$S($D(^DD(19641.1,.02,0)):$P(^(0),U,3),1:0)_$E("_DIC_"Y,0),0),$C(59)_$P(^(0),U,2)_"":"",2),$C(59),1)")
"^DD",19641.1,19641.1,0,"IX","B",19641.1,.01)

"^DD",19641.1,19641.1,0,"NM","DSIO NON-VA ENTITIES")

"^DD",19641.1,19641.1,0,"PT",19641.1,.04)

"^DD",19641.1,19641.1,.01,0)
NAME^RF^^0;1^K:$L(X)>100!($L(X)<1) X
"^DD",19641.1,19641.1,.01,1,0)
^.1
"^DD",19641.1,19641.1,.01,1,1,0)
19641.1^B
"^DD",19641.1,19641.1,.01,1,1,1)
S ^DSIO(19641.1,"B",$E(X,1,30),DA)=""
"^DD",19641.1,19641.1,.01,1,1,2)
K ^DSIO(19641.1,"B",$E(X,1,30),DA)
"^DD",19641.1,19641.1,.01,3)
Answer must be 1-100 characters in length.
"^DD",19641.1,19641.1,.01,"DT")
3140127
"^DD",19641.1,19641.1,.02,0)
TYPE^RS^F:FACILITY;P:PROVIDER;^0;2^Q
"^DD",19641.1,19641.1,.02,"DT")
3140127
"^DD",19641.1,19641.1,.03,0)
INACTIVE^S^0:NO;1:YES;^0;3^Q
"^DD",19641.1,19641.1,.03,"DT")
3140127
"^DD",19641.1,19641.1,.04,0)
PRIMARY CONTACT^*P19641.1^DSIO(19641.1,^0;4^S DIC("S")="I $P(^(0),U,2)'=""F""" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X
"^DD",19641.1,19641.1,.04,12)
Facility types are not allowed.
"^DD",19641.1,19641.1,.04,12.1)
S DIC("S")="I $P(^(0),U,2)'=""F"""
"^DD",19641.1,19641.1,.04,"DT")
3140401
"^DD",19641.1,19641.1,1.1,0)
STREET ADDRESS 1^F^^1;1^K:$L(X)>50!($L(X)<1) X
"^DD",19641.1,19641.1,1.1,3)
Answer must be 1-50 characters in length.
"^DD",19641.1,19641.1,1.1,"DT")
3140127
"^DD",19641.1,19641.1,1.2,0)
STREET ADDRESS 2^F^^1;2^K:$L(X)>50!($L(X)<1) X
"^DD",19641.1,19641.1,1.2,3)
Answer must be 1-50 characters in length.
"^DD",19641.1,19641.1,1.2,"DT")
3140127
"^DD",19641.1,19641.1,1.3,0)
STREET ADDRESS 3^F^^1;3^K:$L(X)>50!($L(X)<1) X
"^DD",19641.1,19641.1,1.3,3)
Answer must be 1-50 characters in length.
"^DD",19641.1,19641.1,1.3,"DT")
3140127
"^DD",19641.1,19641.1,1.4,0)
CITY^F^^1;4^K:$L(X)>20!($L(X)<1) X
"^DD",19641.1,19641.1,1.4,3)
Answer must be 1-20 characters in length.
"^DD",19641.1,19641.1,1.4,21,0)
^^3^3^3140127^
"^DD",19641.1,19641.1,1.4,21,1,0)
Enter the city in which this applicant resides [1-20 characters]. If the 
"^DD",19641.1,19641.1,1.4,21,2,0)
space provided is not sufficient please abbreviate the city to the best 
"^DD",19641.1,19641.1,1.4,21,3,0)
of your ability. 
"^DD",19641.1,19641.1,1.4,"DT")
3140127
"^DD",19641.1,19641.1,1.5,0)
STATE^*P5'X^DIC(5,^1;5^S DIC("S")="I $P(^DIC(5,Y,0),U,6)=1" D ^DIC K DIC S DIC=DIE,X=+Y K:Y<0 X I $D(X) S X=$P(^DIC(5,X,0),U,2)
"^DD",19641.1,19641.1,1.5,3)
Select from the available listing the state in which this entity resides.
"^DD",19641.1,19641.1,1.5,12)
This screen prevents selection of entires that are valid US states or possessions.
"^DD",19641.1,19641.1,1.5,12.1)
S DIC("S")="I $P(^DIC(5,Y,0),U,6)=1"
"^DD",19641.1,19641.1,1.5,21,0)
^^1^1^3140127^
"^DD",19641.1,19641.1,1.5,21,1,0)
From the available listing choose the state in which this entity resides.
"^DD",19641.1,19641.1,1.5,"DT")
3140401
"^DD",19641.1,19641.1,1.6,0)
ZIP CODE^FX^^1;6^K:X[""""!($A(X)=45) X I $D(X) K:$L(X)>5!($L(X)<5)!'(X?5N) X
"^DD",19641.1,19641.1,1.6,3)
Enter the zip code for the city in which this entity resides.
"^DD",19641.1,19641.1,1.6,21,0)
^^1^1^3140127^
"^DD",19641.1,19641.1,1.6,21,1,0)
Enter the zip code [5 numerics] for the city in which this entity resides.
"^DD",19641.1,19641.1,1.6,"DT")
3140127
"^DD",19641.1,19641.1,2.1,0)
PHONE NUMBER (HOME)^F^^2;1^K:$L(X)>20!($L(X)<4) X
"^DD",19641.1,19641.1,2.1,3)
Answer must be 4-20 characters in length.
"^DD",19641.1,19641.1,2.1,"DT")
3140127
"^DD",19641.1,19641.1,2.2,0)
PHONE NUMBER (OFFICE)^F^^2;2^K:$L(X)>20!($L(X)<4) X
"^DD",19641.1,19641.1,2.2,3)
Answer must be 4-20 characters in length.
"^DD",19641.1,19641.1,2.2,"DT")
3140127
"^DD",19641.1,19641.1,2.3,0)
PHONE NUMBER (CELL)^F^^2;3^K:$L(X)>20!($L(X)<4) X
"^DD",19641.1,19641.1,2.3,3)
Answer must be 4-20 characters in length.
"^DD",19641.1,19641.1,2.3,"DT")
3140127
"^DD",19641.1,19641.1,2.4,0)
FAX NUMBER^F^^2;4^K:$L(X)>20!($L(X)<4) X
"^DD",19641.1,19641.1,2.4,3)
Answer must be 4-20 characters in length.
"^DD",19641.1,19641.1,2.4,"DT")
3140127
"^DD",19641.6,19641.6,0)
FIELD^^1^2
"^DD",19641.6,19641.6,0,"DDA")
N
"^DD",19641.6,19641.6,0,"DT")
3140402
"^DD",19641.6,19641.6,0,"IX","B",19641.6,.01)

"^DD",19641.6,19641.6,0,"NM","DSIO IHE DOCUMENT")

"^DD",19641.6,19641.6,.01,0)
PATIENT^RP2'X^DPT(^0;1^S:$D(X) DINUM=X
"^DD",19641.6,19641.6,.01,1,0)
^.1
"^DD",19641.6,19641.6,.01,1,1,0)
19641.6^B
"^DD",19641.6,19641.6,.01,1,1,1)
S ^DSIO(19641.6,"B",$E(X,1,30),DA)=""
"^DD",19641.6,19641.6,.01,1,1,2)
K ^DSIO(19641.6,"B",$E(X,1,30),DA)
"^DD",19641.6,19641.6,.01,3)

"^DD",19641.6,19641.6,.01,"DT")
3140402
"^DD",19641.6,19641.6,1,0)
GUID^19641.62A^^1;0
"^DD",19641.6,19641.62,0)
GUID SUB-FIELD^^2^9
"^DD",19641.6,19641.62,0,"DT")
3140402
"^DD",19641.6,19641.62,0,"IX","B",19641.62,.01)

"^DD",19641.6,19641.62,0,"NM","GUID")

"^DD",19641.6,19641.62,0,"UP")
19641.6
"^DD",19641.6,19641.62,.01,0)
GUID^FX^^0;1^K:$L(X)>50!($L(X)<36)!($D(^DSIO(19641.6,"C",X))) X
"^DD",19641.6,19641.62,.01,1,0)
^.1^^-1
"^DD",19641.6,19641.62,.01,1,1,0)
19641.62^B
"^DD",19641.6,19641.62,.01,1,1,1)
S ^DSIO(19641.6,DA(1),1,"B",$E(X,1,30),DA)=""
"^DD",19641.6,19641.62,.01,1,1,2)
K ^DSIO(19641.6,DA(1),1,"B",$E(X,1,30),DA)
"^DD",19641.6,19641.62,.01,3)
Answer must be 36-50 characters in length.
"^DD",19641.6,19641.62,.01,"DT")
3140402
"^DD",19641.6,19641.62,.02,0)
DT CREATION^D^^0;2^S %DT="EST" D ^%DT S X=Y K:Y<1 X
"^DD",19641.6,19641.62,.02,"DT")
3140402
"^DD",19641.6,19641.62,.03,0)
DT IMPORT/EXPORT^D^^0;3^S %DT="EST" D ^%DT S X=Y K:Y<1 X
"^DD",19641.6,19641.62,.03,"DT")
3140402
"^DD",19641.6,19641.62,.04,0)
DOCUMENT TYPE^P19641.61'^DSIO(19641.61,^0;4^Q
"^DD",19641.6,19641.62,.04,"DT")
3140402
"^DD",19641.6,19641.62,.05,0)
DIRECTION^S^I:IN;O:OUT;^0;5^Q
"^DD",19641.6,19641.62,.05,"DT")
3140402
"^DD",19641.6,19641.62,1.1,0)
DOCUMENT TITLE^F^^1;1^K:$L(X)>100!($L(X)<1) X
"^DD",19641.6,19641.62,1.1,3)
Answer must be 1-100 characters in length.
"^DD",19641.6,19641.62,1.1,"DT")
3140402
"^DD",19641.6,19641.62,1.2,0)
SENDING FACILITY/PROVIDER^F^^1;2^K:$L(X)>50!($L(X)<1) X
"^DD",19641.6,19641.62,1.2,3)
Answer must be 1-50 characters in length.
"^DD",19641.6,19641.62,1.2,"DT")
3140402
"^DD",19641.6,19641.62,1.3,0)
INTENDED RECIPIENT^F^^1;3^K:$L(X)>50!($L(X)<1) X
"^DD",19641.6,19641.62,1.3,3)
Answer must be 1-50 characters in length.
"^DD",19641.6,19641.62,1.3,"DT")
3140402
"^DD",19641.6,19641.62,2,0)
DOCUMENT CONTENT^19641.622^^2;0
"^DD",19641.6,19641.622,0)
DOCUMENT CONTENT SUB-FIELD^^.01^1
"^DD",19641.6,19641.622,0,"DT")
3140402
"^DD",19641.6,19641.622,0,"NM","DOCUMENT CONTENT")

"^DD",19641.6,19641.622,0,"UP")
19641.62
"^DD",19641.6,19641.622,.01,0)
DOCUMENT CONTENT^Wx^^0;1^Q
"^DD",19641.6,19641.622,.01,"DT")
3140402
"^DIC",19641.1,19641.1,0)
DSIO NON-VA ENTITIES^19641.1
"^DIC",19641.1,19641.1,0,"GL")
^DSIO(19641.1,
"^DIC",19641.1,"B","DSIO NON-VA ENTITIES",19641.1)

"^DIC",19641.6,19641.6,0)
DSIO IHE DOCUMENT^19641.6
"^DIC",19641.6,19641.6,0,"GL")
^DSIO(19641.6,
"^DIC",19641.6,"B","DSIO IHE DOCUMENT",19641.6)

**END**
**END**
