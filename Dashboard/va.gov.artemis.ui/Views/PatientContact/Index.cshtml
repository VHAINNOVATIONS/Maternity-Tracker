@using VA.Gov.Artemis.UI.Data.Models.PatientContact
@using VA.Gov.Artemis.UI.Data.Models.Checklist
@using VA.Gov.Artemis.Commands.Dsio.Checklist
@model PatientContactIndex
@{
    ViewBag.Title = "MCC Dashboard - Contact History";
    Layout = "~/Views/Shared/_LayoutPage2.cshtml";
}

<h1 class="h3 page-header">Patient Contact History</h1>

@Html.Partial("~\\Views\\PatientContact\\_ContactHeader.cshtml", Model.Patient)

<br />

@*<div class="row">
    <div class="col-md-6">
        <p>
            <span class="db-table-filter"><small>Filter:</small></span>

            @foreach (string key in Model.PregnancyFilter.Keys)
            {
                if ((Model.PregnancyFilter[key].ToString() == Model.PregnancyIen))
                {
                <button type="button" class="btn btn-xs btn-success db-table-filter" data-ien="@Model.PregnancyFilter[key].ToString()">@key</button>
                }
                else
                {
                <button type="button" class="btn btn-xs btn-default db-table-filter" data-ien="@Model.PregnancyFilter[key].ToString()">@key</button>
                }
            }
        </p>
    </div>
</div>*@

<div class="row">
    <div class="col-md-12">
        <div class="form-group">
            @Html.LabelFor(m => m.CurrentPregnancyFilter, "Filter:", new {@style="font-weight: normal; margin-right: 30px" })
            @Html.DropDownListFor(m => m.CurrentPregnancyFilter, new SelectList(Model.PregnancyFilters, "key", "value"), new { @class = "form-control", @style="max-width: 328px; display: inline" })
        </div>
    </div>
</div>

@*@Html.HiddenFor(m => m.PregnancyIen)*@

<table id="pat-table" class="table table-bordered table-hover table-db" style="font-size: 12px">
    <thead class="centered-header">
        <tr>
            <th scope="col">Description</th>
            <th scope="col">Due</th>
            <th scope="col">Due Date</th>
            <th scope="col">Completed</th>
            <th scope="col">Status</th>
            <th scope="col">Action</th>
        </tr>
    </thead>
    <tbody>
        @if (Model.Checklist.Count > 0)
        {
            foreach (PregnancyChecklistItem item in Model.Checklist)
            {
                //Unknown, Overdue, Due, Pending, Complete, Canceled
                string[] dataFilter = new string[] { "all", "due,inc,all", "due,inc,all", "inc,all", "com,all", "all" };
                
                
            <tr data-id="@item.Ien" data-filter="@dataFilter[(int)item.DueStatus]">

                <td style="vertical-align: middle">@Html.DisplayFor(modelItem => item.Description)</td>
                <td class="centered-txt" style="vertical-align: middle">@Html.DisplayFor(modelItem => item.Due)</td>
                <td class="centered-txt" style="vertical-align: middle">@Html.DisplayFor(modelItem => item.DueDateDisplay)</td>

                @* *** Complete Date *** *@
                @if ((string.IsNullOrWhiteSpace(item.CompletedDateDisplay)) && (item.InProgress))
                {
                    <td class="centered-txt" style="vertical-align: middle">
                        <label class="label label-primary">In Progress</label></td>
                }
                else
                {
                    <td class="centered-txt" style="vertical-align: middle">@Html.DisplayFor(modelItem => item.CompletedDateDisplay)</td>
                }

                @if (item.DueStatus == DueStatus.Complete)
                {                
                    <td class="centered-txt h5" style="vertical-align: middle;">
                        <label class="label label-success">Complete</label></td>
                }
                else if (item.DueStatus == DueStatus.Overdue)
                {
                    <td class="centered-txt h5" style="vertical-align: middle">
                        <label class="label label-danger">Overdue</label></td>
                }
                else if (item.DueStatus == DueStatus.Due)
                {
                    <td class="centered-txt h5" style="vertical-align: middle">
                        <label class="label label-warning">Due</label></td>
                }
                else if (item.DueStatus == DueStatus.Pending)
                {
                    <td class="centered-txt" style="vertical-align: middle">Pending</td>
                }
                else if (item.DueStatus == DueStatus.Canceled)
                {
                    <td class="centered-txt h5" style="vertical-align: middle">
                        <label class="label label-default">Canceled</label></td>
                }
                else
                {
                    <td></td>
                }

                <td class="centered-txt" style="vertical-align: middle">
                    @if (string.IsNullOrWhiteSpace(item.CompletionLink))
                    {
                        if ((item.CompletionStatus == DsioChecklistCompletionStatus.NotComplete) && (!string.IsNullOrWhiteSpace(item.Link)))
                        {
                        <button type="button" class="btn btn-primary btn-xs" 
                                onclick="location.href='@Url.Action("Create", new { @dfn = Model.Patient.Dfn, @callType = item.Link, @checkIen = item.Ien })'">
                            <span class="glyphicon glyphicon-earphone"></span>&nbsp;&nbsp;Call Now</button>
                        }
                    }
                    else
                    {
                        if (item.CompletionStatus == DsioChecklistCompletionStatus.Complete)
                        {
                        <button type="button" class="btn btn-success btn-xs"
                                onclick="location.href='@Url.Action("ViewNote", new { @dfn = Model.Patient.Dfn, @noteIen = item.CompletionLink, @checkIen = item.Ien })'">
                            <span class="glyphicon glyphicon-list-alt"></span>&nbsp;&nbsp;View</button>        
                        }
                        else
                        {
                        <button type="button" class="btn btn-warning btn-xs"
                                onclick="location.href='@Url.Action("Edit", new { @dfn = Model.Patient.Dfn, @noteIen = item.CompletionLink, @checkIen = item.Ien })'">
                            <span class="glyphicon glyphicon-earphone"></span>&nbsp;&nbsp;Continue</button>        
                        }
                    }

                </td>
            </tr>

            }
        }
        <tr id="no-rows">
            <td colspan="10" class="centered-txt">(No Contact Items)</td>
        </tr>
    </tbody>
</table>
<br />

<div class="row">
    <div class="col-md-12">
        <div class="pull-right">
            <div class="btn-group">
                <button type="button" class="btn btn-primary dropdown-toggle" data-toggle="dropdown">
                    Add Call Note&nbsp;&nbsp;<span class="caret"></span>
                </button>
                <ul class="dropdown-menu" role="menu">
                    @foreach (object val in Enum.GetValues(typeof(MccPatientCallType)))
                    {
                        MccPatientCallType callType = (MccPatientCallType)val;

                        if (callType == MccPatientCallType.AdditionalCall)
                        {
                        <li><a href="@Url.Action("AdditionalCall", new { @dfn = Model.Patient.Dfn, @noteIen = "", @pregIen = "" })">@MccPatientCallTypeUtility.GetDescription((MccPatientCallType)val)</a></li>
                        }
                        else
                        {
                        <li><a href="@Url.Action("Create", new { @dfn = Model.Patient.Dfn, @callType = (MccPatientCallType)val, @checkIen = "" })">@MccPatientCallTypeUtility.GetDescription((MccPatientCallType)val)</a></li>
                        }
                    }
                </ul>
            </div>
            <button type="button" class="btn btn-default" onclick="location.href='@Url.Action("Summary", "Patient", new { dfn = Model.Patient.Dfn })'">Patient Summary</button>
        </div>
    </div>
</div>

<br />
@section Navigation
{
    @{Html.RenderPartial("~/Views/Shared/_NavGroupPatient.cshtml", Model.Patient);}
}

@section Scripts
{
    <script type="text/javascript">
        $(document).ready(function () {
            $('#nav-pat-contact').addClass('active').siblings().removeClass('active');

            if ($("tbody tr").length > 1)
                $('#no-rows').hide();

@*            $('.db-table-filter').click(function () {
                var ien = $(this).attr('data-ien');
                if (ien != $('#PregnancyIen').val()) {
                    var placeholder = '-0-';
                    var temp = '@Url.Action("Index", "PatientContact", new { @dfn = Model.Patient.Dfn, @pregIen = "-0-" })';
                    var finalUrl = temp.replace(placeholder, ien);
                    location.href = finalUrl;

                }
            });*@

            $("#CurrentPregnancyFilter").change(function () {
                var placeholder = '-0-';
                var temp = '@Url.Action("Index", "PatientContact", new { @dfn = Model.Patient.Dfn, @filter="-0-"})';
                var finalUrl = temp.replace(placeholder, $(this).val());
                location.href = finalUrl
                        });

        });
    </script>
}
