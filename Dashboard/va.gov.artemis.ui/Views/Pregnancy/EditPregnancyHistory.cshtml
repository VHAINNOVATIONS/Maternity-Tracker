@*
    Originally submitted to OSEHRA 2/21/2017 by DSS, Inc.
    Authored by DSS, Inc. 2014-2017
*@

@model VA.Gov.Artemis.UI.Data.Models.Pregnancy.EditPregnancyHistory

@{
    ViewBag.Title = "MCC Dashboard - Pregnancy History";
    Layout = "~/Views/Shared/_LayoutPage2.cshtml";
}

@if (!Model.Patient.NotFound)
{
    //Html.RenderPartial("~/Views/Shared/_PatientBlock.cshtml", Model.Patient);
}

<br />
<h1 class="h3 page-header">Pregnancy History</h1>

@using (Html.BeginForm("EditPregnancyHistory", "Pregnancy", FormMethod.Post, new { @role = "form", @class = "form" }))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

    @*
    <div class="row">
        <div class="col-md-6 text-center"><label class="label-success">@Model.History.Gravidity</label></div>
        <div class="col-md-6 text-center"><label class="label-success">@Model.History.Parity</label></div>
    </div>
   *@

    <p class="bg-warning" id="alertId" hidden="hidden" style="padding: 16px; margin-bottom: 20px"></p>

    <br />
    <div class="row">
        <div class="col-md-1"></div>
        <div class="col-md-5 col-offset-2">

            @Html.HiddenFor(model => model.Patient.Dfn)

            <div class="form-group">
                @Html.LabelFor(model => model.History.TotalPregnancies)
                @Html.TextBoxFor(model => model.History.TotalPregnancies, new { @class = "form-control gp" })
                @Html.ValidationMessageFor(model => model.History.TotalPregnancies)
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.History.TermBirths)
                @Html.TextBoxFor(model => model.History.TermBirths, new { @class = "form-control gp" })
                @Html.ValidationMessageFor(model => model.History.TermBirths)
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.History.PretermBirths)
                @Html.TextBoxFor(model => model.History.PretermBirths, new { @class = "form-control gp" })
                @Html.ValidationMessageFor(model => model.History.PretermBirths)
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.History.StillBirths)
                @Html.TextBoxFor(model => model.History.StillBirths, new { @class = "form-control gp" })
                @Html.ValidationMessageFor(model => model.History.StillBirths)
            </div>

        </div>

        <div class="col-md-5 col-offset-6">

            <div class="form-group">
                @Html.LabelFor(model => model.History.SpontaneousAbortions)
                @Html.TextBoxFor(model => model.History.SpontaneousAbortions, new { @class = "form-control gp" })
                @Html.ValidationMessageFor(model => model.History.SpontaneousAbortions)
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.History.PregnancyTerminations)
                @Html.TextBoxFor(model => model.History.PregnancyTerminations, new { @class = "form-control gp" })
                @Html.ValidationMessageFor(model => model.History.PregnancyTerminations)
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.History.EctopicPregnancies)
                @Html.TextBoxFor(model => model.History.EctopicPregnancies, new { @class = "form-control gp" })
                @Html.ValidationMessageFor(model => model.History.EctopicPregnancies)
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.History.LivingChildren)
                @Html.TextBoxFor(model => model.History.LivingChildren, new { @class = "form-control gp" })
                @Html.ValidationMessageFor(model => model.History.LivingChildren)
            </div>

        </div>

        <div class="col-md-4 col-md-offset-4">
            <div class="form-group">
                @Html.LabelFor(model => model.History.GravidaPara)
                <p class="gp_summ" id="History_GravidaPara">@Html.DisplayFor(model => model.History.GravidaPara)</p>
            </div>
        </div>

    </div>
    <br />
    <div class="row">
        <div class="col-md-1"></div>
        <div class="col-md-10 col-offset-2">
            <div class="pull-right">
                <button type="button" class="btn btn-default" onclick="location.href='@Model.ReturnUrl'">Cancel</button>
                <button type="submit" class="btn btn-primary" id="saveBtn">Save</button>
            </div>
        </div>
    </div>

}

<br />

@section Scripts
{
    <script type="text/javascript">

        $(document).ready(function () {
        });

        $('.gp').change(function () {
            var alert = false;
            var message = "";

            function isPositiveInt(value) {
                if (isNaN(value)) {
                    return false;
                }
                var x = parseFloat(value);
                if (x < 0) {
                    return false;
                }
                return (x | 0) === x;
            }

            function intValue(value) {
                return isPositiveInt(value) ? +value : 0;
            }

            function computeValueForGPSummary(n, fieldName) {
                if (n) {
                    if (!isPositiveInt(n)) {
                        alert = true;
                        n = "?";
                        message = message + "Please enter a valid number in the " + fieldName + " field. ";
                        $("#alertId").attr("class", "bg-warning");
                        $("#alertId").removeAttr("hidden");
                        $("#alertId").text(message);
                    }                    
                }
                else {
                    n = "?";
                }

                return n;
            }

            var totalPregnancies = computeValueForGPSummary($('#History_TotalPregnancies').val(), "Total Pregnancies");
            var termBirths = computeValueForGPSummary($('#History_TermBirths').val(), "Term Births");
            var pretermBirths = computeValueForGPSummary($('#History_PretermBirths').val(), "Preterm Births");
            var stillBirths = computeValueForGPSummary($('#History_StillBirths').val(), "Stillbirths");
            var spontaneousAbortions = computeValueForGPSummary($('#History_SpontaneousAbortions').val(), "Spontaneous Abortions");
            var pregnancyTerminations = computeValueForGPSummary($('#History_PregnancyTerminations').val(), "Pregnancy Terminations");
            var ectopicPregnancies = computeValueForGPSummary($('#History_EctopicPregnancies').val(), "Ectopic Pregnancies");
            var livingChildren = computeValueForGPSummary($('#History_LivingChildren').val(), "Living Children");

            //compute element 3 of parity
            var element3 = 0;
            if (spontaneousAbortions === '?' && pregnancyTerminations === '?' && ectopicPregnancies === '?') {
                element3 = '?';
            }
            else {
                element3 = intValue(spontaneousAbortions) + intValue(pregnancyTerminations) + intValue(ectopicPregnancies);
            }

            var gravidity = 'G' + totalPregnancies;
            var parity = 'P' + termBirths + '-' + pretermBirths + '-' + element3 + '-' + livingChildren;
            var result = gravidity + ' ' + parity;

            if (!alert){
                $("#alertId").attr("hidden", "hidden");
                $("#alertId").text("");
                $("#saveBtn").removeAttr("disabled");
            }
            else {
                $("#saveBtn").attr("disabled", "disabled");
            }
            $('#History_GravidaPara').text(result);
        });

    </script>
}

@section Navigation
{
    @{Html.RenderPartial("~/Views/Shared/_NavGroupPatient.cshtml", Model.Patient);}
}

