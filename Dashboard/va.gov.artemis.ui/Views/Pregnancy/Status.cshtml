@*
    Originally submitted to OSEHRA 2/21/2017 by DSS, Inc.
    Authored by DSS, Inc. 2014-2017
*@

@model VA.Gov.Artemis.UI.Data.Models.Pregnancy.PregnancyStatusModel

@{
    ViewBag.Title = "MCC Dashboard - Pregnancy Status";
    Layout = "~/Views/Shared/_LayoutPage2.cshtml";
}

<h1 class="h3 page-header">Pregnancy Status</h1>

@using (Html.BeginForm("Status", "Pregnancy", FormMethod.Post, new { @role = "form", @class = "form" }))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

    @Html.HiddenFor(m => m.Patient.Dfn);
    @Html.HiddenFor(m => m.Patient.Pregnant);

    string newStatus = (Model.Patient.Pregnant) ? "Not Pregnant" : "Pregnant";

    <p class="bg-warning" id="alertId" hidden="hidden" style="padding: 16px; margin-bottom: 20px"></p>

    <div class="row">
        <div class="col-md-6">
            <table class="table table-bordered table-expanded table-horizontal">
                <tbody>
                    <tr class="centered-txt">
                        <th  scope="row" style="vertical-align: middle">@Html.LabelFor(m => m.OriginalPregnancyStatusDescription, "Current Pregnancy Status:")</th>
                        <td id="pregStat" style="vertical-align: middle">@Model.OriginalPregnancyStatusDescription</td>
                    </tr>
                    <tr class="centered-txt">
                        <th scope="row" style="vertical-align: middle">@Html.LabelFor(m => m.NewPregnancyStatus, "Today's Pregnancy Status:")</th>
                        <td style="vertical-align: middle">@Html.DropDownListFor(m => m.NewPregnancyStatus, new SelectList(Model.StatusList, "Key", "Value", ""), new { @class = "form-control" })</td>
                    </tr>

                    @if (Model.Patient.Pregnant)
                    {
                        <tr class="centered-txt" id="outcome-row" style="display: none">
                            <th scope="row" style="vertical-align: middle">@Html.LabelFor(m => m.OutcomeDate, "Outcome/Delivery Date:")</th>
                            <td style="vertical-align: middle">@Html.TextBoxFor(m => m.OutcomeDate, new { @class = "form-control", id = "outcome-date" })</td>
                        </tr>
                    }

                    @if (!Model.Patient.Pregnant)
                    {
                        <tr class="centered-txt" id="EDD-row" style="display: none">
                            <th scope="row" style="vertical-align: middle">@Html.LabelFor(m => m.EDD, "Estimated Delivery Date:")</th>
                            <td style="vertical-align: middle">@Html.TextBoxFor(m => m.EDD, new { @class = "form-control", id = "EDD-date" })</td>
                        </tr>
                        <tr class="centered-txt" id="LMP-row" style="display: none">
                            <th scope="row" style="vertical-align: middle">@Html.LabelFor(m => m.LMP, "Last Menstrual Period:")</th>
                            <td style="vertical-align: middle">@Html.TextBoxFor(m => m.LMP, new { @class = "form-control", id = "LMP-date" })</td>
                        </tr>
                    }
                </tbody>
            </table>
            <div class="row">
                <div class="col-md-12">
                    <div class="pull-right">
                        <button type="submit" id="save-button" class="btn btn-primary" disabled="disabled">Save</button>
                        @{string returnUrl = (string.IsNullOrWhiteSpace(Model.ReturnUrl)) ? Url.Action("Summary", "Patient", new { @dfn = Model.Patient.Dfn }) : Model.ReturnUrl;}
                        <button type="button" class="btn btn-default" onclick="location.href='@returnUrl'">Cancel</button>
                    </div>
                </div>
            </div>

        </div>
    </div>    
}

@section Scripts 
{
    <script>
        $(document).ready(function () {

            updateVisibility();

            $("#NewPregnancyStatus").change(function () {
                updateVisibility();
            });

            $("#EDD-date").change(function () {
                updateSaveButton();
            });

            $("#LMP-date").change(function () {
                updateSaveButton();
            });

            $("#outcome-date").change(function () {
                updateSaveButton();
            });

            function updateVisibility() {
                var sel = $("#NewPregnancyStatus").val();
                if ((sel == "False") && ($("#Patient_Pregnant").val() == "True")) {
                    $("#outcome-row").show();
                }
                else {
                    $("#outcome-row").hide();
                }

                if ((sel == "True") && ($("#Patient_Pregnant").val() == "False")) {
                    $("#EDD-row").show();
                    $("#LMP-row").show();
                }
                else {
                    $("#EDD-row").hide();
                    $("#LMP-row").hide();
                }
            };

            function validFields() {
                var valid = true;
                if ($("#Patient_Pregnant").val() == "True"){
                    valid = validateOutcomeDate();
                }
                else {
                    valid = validateLMPEDD();
                }
                
                return valid;
            };

            function validateOutcomeDate() {
                var validOutcome = $("#outcome-date").val() != "";

                var message = "";
                if (!validOutcome) {
                    message = "Please enter value in Outcome/Delivery Date field. ";
                    $("#alertId").attr("class", "bg-warning");
                    $("#alertId").removeAttr("hidden");
                    $("#alertId").text(message);
                }

                return validOutcome;
            };

            function validateLMPEDD() {
                var validEDD = $("#EDD-date").val() != "";
                var validLMP = $("#LMP-date").val() != "";

                var message = "";
                if (!validEDD){
                    message = message + "Please enter value in EDD field. ";
                }
                if (!validLMP) {
                    message = message + "Please enter value in LMP field. ";
                }

                if (!(validEDD && validLMP)) {
                    $("#alertId").attr("class", "bg-warning");
                    $("#alertId").removeAttr("hidden");
                    $("#alertId").text(message);
                }

                return validEDD && validLMP;
            };

            function updateSaveButton() {
                if (validFields()) {
                    $("#save-button").removeAttr("disabled");
                    $("#alertId").attr("hidden", "hidden");
                    $("#alertId").text("");
                }
                else {
                    $("#save-button").attr("disabled", "disabled");
                }
            };
        });
    </script>
}
@section Navigation
{
    @{Html.RenderPartial("~/Views/Shared/_NavGroupPatient.cshtml", Model.Patient);}
}
